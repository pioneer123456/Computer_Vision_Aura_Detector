{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO67bIj1l+MXkHIlpdaDVfJ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "gpuClass": "standard"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/pioneer123456/Computer_Vision_Aura_Detector/blob/main/final_Code\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Object - Detection and Human Aura Prediction "
      ],
      "metadata": {
        "id": "CUoiyoj3EUR_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "This notebook contains the code to perform object classification on Coco validation dataset 2017.\n",
        "The pretrained model YOLO V4 is used, which is trained on Coco dataset to predict around 80 different categories of images. "
      ],
      "metadata": {
        "id": "e-dQx0ymshT9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Getting Essentials of YOLO v4**"
      ],
      "metadata": {
        "id": "OHffcQ7WtLD3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XQw_2941cAZM",
        "outputId": "9173ddb9-d4e7-448b-870b-5f1dfafdc0bf"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'darknet'...\n",
            "remote: Enumerating objects: 15514, done.\u001b[K\n",
            "remote: Total 15514 (delta 0), reused 0 (delta 0), pack-reused 15514\u001b[K\n",
            "Receiving objects: 100% (15514/15514), 14.17 MiB | 17.70 MiB/s, done.\n",
            "Resolving deltas: 100% (10412/10412), done.\n"
          ]
        }
      ],
      "source": [
        "# clone darknet repo\n",
        "!git clone https://github.com/AlexeyAB/darknet"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# change makefile to have GPU and OPENCV enabled\n",
        "%cd darknet\n",
        "!sed -i 's/OPENCV=0/OPENCV=1/' Makefile\n",
        "!sed -i 's/GPU=0/GPU=1/' Makefile\n",
        "!sed -i 's/CUDNN=0/CUDNN=1/' Makefile\n",
        "!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IOIjEWhdcLxb",
        "outputId": "3ba7ed30-f4b9-465c-9fe7-1c1712e40dd2"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/darknet\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# verify CUDA\n",
        "!/usr/local/cuda/bin/nvcc --version"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b9qCcJ3gcXGQ",
        "outputId": "e78d135e-4e71-4234-b233-d248e1dfe95d"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "nvcc: NVIDIA (R) Cuda compiler driver\n",
            "Copyright (c) 2005-2022 NVIDIA Corporation\n",
            "Built on Wed_Sep_21_10:33:58_PDT_2022\n",
            "Cuda compilation tools, release 11.8, V11.8.89\n",
            "Build cuda_11.8.r11.8/compiler.31833905_0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# make darknet (builds darknet so that you can then use the darknet executable file to run or train object detectors)\n",
        "!make"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UMNG-w6Gcatp",
        "outputId": "fe5a969f-8e15-4513-b264-17e66e934cec"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "mkdir -p ./obj/\n",
            "mkdir -p backup\n",
            "chmod +x *.sh\n",
            "g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/image_opencv.cpp -o obj/image_opencv.o\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid draw_detections_cv_v3(void**, detection*, int, float, char**, image**, int, int)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:946:23:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Krgb\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "  946 |                 float \u001b[01;35m\u001b[Krgb\u001b[m\u001b[K[3];\n",
            "      |                       \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid draw_train_loss(char*, void**, int, float, float, int, int, float, int, char*, float, int, int, double)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1147:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kthis ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’ clause does not guard... [\u001b[01;35m\u001b[K-Wmisleading-indentation\u001b[m\u001b[K]\n",
            " 1147 |             \u001b[01;35m\u001b[Kif\u001b[m\u001b[K (iteration_old == 0)\n",
            "      |             \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1150:10:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K...this statement, but the latter is misleadingly indented as if it were guarded by the ‘\u001b[01m\u001b[Kif\u001b[m\u001b[K’\n",
            " 1150 |          \u001b[01;36m\u001b[Kif\u001b[m\u001b[K (iteration_old != 0){\n",
            "      |          \u001b[01;36m\u001b[K^~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid cv_draw_object(image, float*, int, int, int*, float*, int*, int, char**)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1444:14:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kbuff\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1444 |         char \u001b[01;35m\u001b[Kbuff\u001b[m\u001b[K[100];\n",
            "      |              \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1420:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kit_tb_res\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1420 |     int \u001b[01;35m\u001b[Kit_tb_res\u001b[m\u001b[K = cv::createTrackbar(it_trackbar_name, window_name, &it_trackbar_value, 1000);\n",
            "      |         \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1424:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Klr_tb_res\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1424 |     int \u001b[01;35m\u001b[Klr_tb_res\u001b[m\u001b[K = cv::createTrackbar(lr_trackbar_name, window_name, &lr_trackbar_value, 20);\n",
            "      |         \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1428:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kcl_tb_res\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1428 |     int \u001b[01;35m\u001b[Kcl_tb_res\u001b[m\u001b[K = cv::createTrackbar(cl_trackbar_name, window_name, &cl_trackbar_value, classes-1);\n",
            "      |         \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/image_opencv.cpp:1431:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kbo_tb_res\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1431 |     int \u001b[01;35m\u001b[Kbo_tb_res\u001b[m\u001b[K = cv::createTrackbar(bo_trackbar_name, window_name, boxonly, 1);\n",
            "      |         \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/http_stream.cpp -o obj/http_stream.o\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kbool JSON_sender::write(const char*)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:253:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kn\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  253 |                 int \u001b[01;35m\u001b[Kn\u001b[m\u001b[K = _write(client, outputbuf, outlen);\n",
            "      |                     \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:\u001b[m\u001b[K In member function ‘\u001b[01m\u001b[Kbool MJPG_sender::write(const cv::Mat&)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:511:95:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%zu\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  511 |                 sprintf(head, \"--mjpegstream\\r\\nContent-Type: image/jpeg\\r\\nContent-Length: \u001b[01;35m\u001b[K%zu\u001b[m\u001b[K\\r\\n\\r\\n\", \u001b[32m\u001b[Koutlen\u001b[m\u001b[K);\n",
            "      |                                                                                             \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K           \u001b[32m\u001b[K~~~~~~\u001b[m\u001b[K\n",
            "      |                                                                                               \u001b[01;35m\u001b[K|\u001b[m\u001b[K           \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                                               \u001b[01;35m\u001b[K|\u001b[m\u001b[K           \u001b[32m\u001b[Kint\u001b[m\u001b[K\n",
            "      |                                                                                               \u001b[01;35m\u001b[Klong unsigned int\u001b[m\u001b[K\n",
            "      |                                                                                             \u001b[32m\u001b[K%u\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid set_track_id(detection*, int, float, float, float, int, int, int)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:867:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison of integer expressions of different signedness: ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’ and ‘\u001b[01m\u001b[Kstd::vector<detection_t>::size_type\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "  867 |         for (int i = 0; \u001b[01;35m\u001b[Ki < v.size()\u001b[m\u001b[K; ++i) {\n",
            "      |                         \u001b[01;35m\u001b[K~~^~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:875:33:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison of integer expressions of different signedness: ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’ and ‘\u001b[01m\u001b[Kstd::vector<detection_t>::size_type\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "  875 |     for (int old_id = 0; \u001b[01;35m\u001b[Kold_id < old_dets.size()\u001b[m\u001b[K; ++old_id) {\n",
            "      |                          \u001b[01;35m\u001b[K~~~~~~~^~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:894:31:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison of integer expressions of different signedness: ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’ and ‘\u001b[01m\u001b[Kstd::vector<detection_t>::size_type\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "  894 |     for (int index = 0; \u001b[01;35m\u001b[Kindex < new_dets_num*old_dets.size()\u001b[m\u001b[K; ++index) {\n",
            "      |                         \u001b[01;35m\u001b[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/http_stream.cpp:930:28:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison of integer expressions of different signedness: ‘\u001b[01m\u001b[Kstd::deque<std::vector<detection_t> >::size_type\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} and ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wsign-compare\u001b[m\u001b[K]\n",
            "  930 |     if (\u001b[01;35m\u001b[Kold_dets_dq.size() > deque_size\u001b[m\u001b[K) old_dets_dq.pop_front();\n",
            "      |         \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/gemm.c -o obj/gemm.o\n",
            "\u001b[01m\u001b[K./src/gemm.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kconvolution_2d\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/gemm.c:2044:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kout_w\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 2044 |     const int \u001b[01;35m\u001b[Kout_w\u001b[m\u001b[K = (w + 2 * pad - ksize) / stride + 1;    // output_width=input_width for stride=1 and pad=1\n",
            "      |               \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/gemm.c:2043:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kout_h\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 2043 |     const int \u001b[01;35m\u001b[Kout_h\u001b[m\u001b[K = (h + 2 * pad - ksize) / stride + 1;    // output_height=input_height for stride=1 and pad=1\n",
            "      |               \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/utils.c -o obj/utils.o\n",
            "\u001b[01m\u001b[K./src/utils.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcustom_hash\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/utils.c:1061:12:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Ksuggest parentheses around assignment used as truth value [\u001b[01;35m\u001b[K-Wparentheses\u001b[m\u001b[K]\n",
            " 1061 |     while (\u001b[01;35m\u001b[Kc\u001b[m\u001b[K = *str++)\n",
            "      |            \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/include/string.h:495\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:14\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/utils.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/utils.c:4\u001b[m\u001b[K:\n",
            "In function ‘\u001b[01m\u001b[Kstrncpy\u001b[m\u001b[K’,\n",
            "    inlined from ‘\u001b[01m\u001b[Kcopy_string\u001b[m\u001b[K’ at \u001b[01m\u001b[K./src/utils.c:531:5\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/include/x86_64-linux-gnu/bits/string_fortified.h:106:10:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[K__builtin_strncpy\u001b[m\u001b[K’ specified bound depends on the length of the source argument [\u001b[01;35m\u001b[K-Wstringop-overflow=\u001b[m\u001b[K]\n",
            "  106 |   return \u001b[01;35m\u001b[K__builtin___strncpy_chk (__dest, __src, __len, __bos (__dest))\u001b[m\u001b[K;\n",
            "      |          \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/utils.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcopy_string\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/utils.c:531:22:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Klength computed here\n",
            "  531 |     strncpy(copy, s, \u001b[01;36m\u001b[Kstrlen(s)\u001b[m\u001b[K+1);\n",
            "      |                      \u001b[01;36m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/dark_cuda.c -o obj/dark_cuda.o\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcudnn_check_error_extended\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:230:20:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between ‘\u001b[01m\u001b[KcudaError_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Kenum cudaError\u001b[m\u001b[K’} and ‘\u001b[01m\u001b[Kenum <anonymous>\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wenum-compare\u001b[m\u001b[K]\n",
            "  230 |         if (status \u001b[01;35m\u001b[K!=\u001b[m\u001b[K CUDNN_STATUS_SUCCESS)\n",
            "      |                    \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcublas_check_error_extended\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:264:18:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kcomparison between ‘\u001b[01m\u001b[KcudaError_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Kenum cudaError\u001b[m\u001b[K’} and ‘\u001b[01m\u001b[Kenum cudaError_enum\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wenum-compare\u001b[m\u001b[K]\n",
            "  264 |       if (status \u001b[01;35m\u001b[K!=\u001b[m\u001b[K CUDA_SUCCESS)\n",
            "      |                  \u001b[01;35m\u001b[K^~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kpre_allocate_pinned_memory\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:395:40:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%u\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kunsigned int\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  395 |         printf(\"pre_allocate: size = \u001b[01;35m\u001b[K%Iu\u001b[m\u001b[K MB, num_of_blocks = %Iu, block_size = %Iu MB \\n\",\n",
            "      |                                      \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K\n",
            "      |                                        \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                        \u001b[01;35m\u001b[Kunsigned int\u001b[m\u001b[K\n",
            "      |                                      \u001b[32m\u001b[K%Ilu\u001b[m\u001b[K\n",
            "  396 |             \u001b[32m\u001b[Ksize / (1024*1024)\u001b[m\u001b[K, num_of_blocks, pinned_block_size / (1024 * 1024));\n",
            "      |             \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K          \n",
            "      |                  \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                  \u001b[32m\u001b[Klong unsigned int\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:395:64:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%u\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kunsigned int\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Kconst long unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  395 |         printf(\"pre_allocate: size = %Iu MB, num_of_blocks = \u001b[01;35m\u001b[K%Iu\u001b[m\u001b[K, block_size = %Iu MB \\n\",\n",
            "      |                                                              \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K\n",
            "      |                                                                \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                \u001b[01;35m\u001b[Kunsigned int\u001b[m\u001b[K\n",
            "      |                                                              \u001b[32m\u001b[K%Ilu\u001b[m\u001b[K\n",
            "  396 |             size / (1024*1024), \u001b[32m\u001b[Knum_of_blocks\u001b[m\u001b[K, pinned_block_size / (1024 * 1024));\n",
            "      |                                 \u001b[32m\u001b[K~~~~~~~~~~~~~\u001b[m\u001b[K                   \n",
            "      |                                 \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                 \u001b[32m\u001b[Ksize_t {aka const long unsigned int}\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:395:82:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%u\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kunsigned int\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  395 |         printf(\"pre_allocate: size = %Iu MB, num_of_blocks = %Iu, block_size = \u001b[01;35m\u001b[K%Iu\u001b[m\u001b[K MB \\n\",\n",
            "      |                                                                                \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K\n",
            "      |                                                                                  \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                                  \u001b[01;35m\u001b[Kunsigned int\u001b[m\u001b[K\n",
            "      |                                                                                \u001b[32m\u001b[K%Ilu\u001b[m\u001b[K\n",
            "  396 |             size / (1024*1024), num_of_blocks, \u001b[32m\u001b[Kpinned_block_size / (1024 * 1024)\u001b[m\u001b[K);\n",
            "      |                                                \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K  \n",
            "      |                                                                  \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                  \u001b[32m\u001b[Klong unsigned int\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:405:37:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  405 |                 printf(\" Allocated \u001b[01;35m\u001b[K%d\u001b[m\u001b[K pinned block \\n\", \u001b[32m\u001b[Kpinned_block_size\u001b[m\u001b[K);\n",
            "      |                                    \u001b[01;35m\u001b[K~^\u001b[m\u001b[K                   \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                     \u001b[01;35m\u001b[K|\u001b[m\u001b[K                   \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                     \u001b[01;35m\u001b[Kint\u001b[m\u001b[K                 \u001b[32m\u001b[Klong unsigned int\u001b[m\u001b[K\n",
            "      |                                    \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kcuda_make_array_pinned_preallocated\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:426:43:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  426 |             printf(\"\\n Pinned block_id = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, filled = %f %% \\n\", \u001b[32m\u001b[Kpinned_block_id\u001b[m\u001b[K, filled);\n",
            "      |                                          \u001b[01;35m\u001b[K~^\u001b[m\u001b[K                      \u001b[32m\u001b[K~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                           \u001b[01;35m\u001b[K|\u001b[m\u001b[K                      \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                           \u001b[01;35m\u001b[Kint\u001b[m\u001b[K                    \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                          \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:441:64:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  441 |             printf(\"Try to allocate new pinned memory, size = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K MB \\n\", \u001b[32m\u001b[Ksize / (1024 * 1024)\u001b[m\u001b[K);\n",
            "      |                                                               \u001b[01;35m\u001b[K~^\u001b[m\u001b[K         \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                                                \u001b[01;35m\u001b[K|\u001b[m\u001b[K              \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                \u001b[01;35m\u001b[Kint\u001b[m\u001b[K            \u001b[32m\u001b[Klong unsigned int\u001b[m\u001b[K\n",
            "      |                                                               \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:447:63:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  447 |             printf(\"Try to allocate new pinned BLOCK, size = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K MB \\n\", \u001b[32m\u001b[Ksize / (1024 * 1024)\u001b[m\u001b[K);\n",
            "      |                                                              \u001b[01;35m\u001b[K~^\u001b[m\u001b[K         \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                                               \u001b[01;35m\u001b[K|\u001b[m\u001b[K              \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                               \u001b[01;35m\u001b[Kint\u001b[m\u001b[K            \u001b[32m\u001b[Klong unsigned int\u001b[m\u001b[K\n",
            "      |                                                              \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "At top level:\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:287:23:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[KswitchBlasHandle\u001b[m\u001b[K’ defined but not used [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  287 | static cublasHandle_t \u001b[01;35m\u001b[KswitchBlasHandle\u001b[m\u001b[K[16];\n",
            "      |                       \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/dark_cuda.c:286:12:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[KswitchBlasInit\u001b[m\u001b[K’ defined but not used [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  286 | static int \u001b[01;35m\u001b[KswitchBlasInit\u001b[m\u001b[K[16] = { 0 };\n",
            "      |            \u001b[01;35m\u001b[K^~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/convolutional_layer.c -o obj/convolutional_layer.o\n",
            "\u001b[01m\u001b[K./src/convolutional_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kforward_convolutional_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/convolutional_layer.c:1342:32:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kt_intput_size\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1342 |                         size_t \u001b[01;35m\u001b[Kt_intput_size\u001b[m\u001b[K = binary_transpose_align_input(k, n, state.workspace, &l.t_bit_input, ldb_align, l.bit_align);\n",
            "      |                                \u001b[01;35m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/list.c -o obj/list.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/image.c -o obj/image.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/activations.c -o obj/activations.o\n",
            "\u001b[01m\u001b[K./src/activations.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kactivate\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KRELU6\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "   79 |     \u001b[01;35m\u001b[Kswitch\u001b[m\u001b[K(a){\n",
            "      |     \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KSWISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KMISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KHARD_MISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KNORM_CHAN\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KNORM_CHAN_SOFTMAX\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:79:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KNORM_CHAN_SOFTMAX_MAXVAL\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kgradient\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/activations.c:310:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KSWISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "  310 |     \u001b[01;35m\u001b[Kswitch\u001b[m\u001b[K(a){\n",
            "      |     \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/activations.c:310:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KMISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "\u001b[01m\u001b[K./src/activations.c:310:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KHARD_MISH\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/im2col.c -o obj/im2col.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/col2im.c -o obj/col2im.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/blas.c -o obj/blas.o\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kbackward_shortcut_multilayer_cpu\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:207:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kout_index\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  207 |                 int \u001b[01;35m\u001b[Kout_index\u001b[m\u001b[K = id;\n",
            "      |                     \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfind_sim\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:597:59:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  597 |         printf(\" Error: find_sim(): sim isn't found: i = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, j = %d, z = %d \\n\", \u001b[32m\u001b[Ki\u001b[m\u001b[K, j, z);\n",
            "      |                                                          \u001b[01;35m\u001b[K~^\u001b[m\u001b[K                      \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                           \u001b[01;35m\u001b[K|\u001b[m\u001b[K                      \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                           \u001b[01;35m\u001b[Kint\u001b[m\u001b[K                    \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                          \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:597:67:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  597 |         printf(\" Error: find_sim(): sim isn't found: i = %d, j = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, z = %d \\n\", i, \u001b[32m\u001b[Kj\u001b[m\u001b[K, z);\n",
            "      |                                                                  \u001b[01;35m\u001b[K~^\u001b[m\u001b[K                 \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                   \u001b[01;35m\u001b[K|\u001b[m\u001b[K                 \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                   \u001b[01;35m\u001b[Kint\u001b[m\u001b[K               \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                  \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:597:75:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  597 |         printf(\" Error: find_sim(): sim isn't found: i = %d, j = %d, z = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K \\n\", i, j, \u001b[32m\u001b[Kz\u001b[m\u001b[K);\n",
            "      |                                                                          \u001b[01;35m\u001b[K~^\u001b[m\u001b[K            \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                           \u001b[01;35m\u001b[K|\u001b[m\u001b[K            \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                           \u001b[01;35m\u001b[Kint\u001b[m\u001b[K          \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                          \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfind_P_constrastive\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:611:68:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  611 |         printf(\" Error: find_P_constrastive(): P isn't found: i = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, j = %d, z = %d \\n\", \u001b[32m\u001b[Ki\u001b[m\u001b[K, j, z);\n",
            "      |                                                                   \u001b[01;35m\u001b[K~^\u001b[m\u001b[K                      \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                    \u001b[01;35m\u001b[K|\u001b[m\u001b[K                      \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                    \u001b[01;35m\u001b[Kint\u001b[m\u001b[K                    \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                   \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:611:76:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  611 |         printf(\" Error: find_P_constrastive(): P isn't found: i = %d, j = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, z = %d \\n\", i, \u001b[32m\u001b[Kj\u001b[m\u001b[K, z);\n",
            "      |                                                                           \u001b[01;35m\u001b[K~^\u001b[m\u001b[K                 \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                            \u001b[01;35m\u001b[K|\u001b[m\u001b[K                 \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                            \u001b[01;35m\u001b[Kint\u001b[m\u001b[K               \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                           \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:611:84:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  611 |         printf(\" Error: find_P_constrastive(): P isn't found: i = %d, j = %d, z = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K \\n\", i, j, \u001b[32m\u001b[Kz\u001b[m\u001b[K);\n",
            "      |                                                                                   \u001b[01;35m\u001b[K~^\u001b[m\u001b[K            \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                                    \u001b[01;35m\u001b[K|\u001b[m\u001b[K            \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                                    \u001b[01;35m\u001b[Kint\u001b[m\u001b[K          \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                                   \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[KP_constrastive_f\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:651:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  651 |         fprintf(stderr, \" Error: in P_constrastive must be i != l, while i = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, l = %d \\n\", \u001b[32m\u001b[Ki\u001b[m\u001b[K, l);\n",
            "      |                                                                              \u001b[01;35m\u001b[K~^\u001b[m\u001b[K              \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                               \u001b[01;35m\u001b[K|\u001b[m\u001b[K              \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                               \u001b[01;35m\u001b[Kint\u001b[m\u001b[K            \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                              \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:651:87:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  651 |         fprintf(stderr, \" Error: in P_constrastive must be i != l, while i = %d, l = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K \\n\", i, \u001b[32m\u001b[Kl\u001b[m\u001b[K);\n",
            "      |                                                                                      \u001b[01;35m\u001b[K~^\u001b[m\u001b[K         \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                                       \u001b[01;35m\u001b[K|\u001b[m\u001b[K         \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                                       \u001b[01;35m\u001b[Kint\u001b[m\u001b[K       \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                                      \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[KP_constrastive\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas.c:785:79:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 3 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  785 |         fprintf(stderr, \" Error: in P_constrastive must be i != l, while i = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K, l = %d \\n\", \u001b[32m\u001b[Ki\u001b[m\u001b[K, l);\n",
            "      |                                                                              \u001b[01;35m\u001b[K~^\u001b[m\u001b[K              \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                               \u001b[01;35m\u001b[K|\u001b[m\u001b[K              \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                               \u001b[01;35m\u001b[Kint\u001b[m\u001b[K            \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                              \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/blas.c:785:87:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 4 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Klong unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  785 |         fprintf(stderr, \" Error: in P_constrastive must be i != l, while i = %d, l = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K \\n\", i, \u001b[32m\u001b[Kl\u001b[m\u001b[K);\n",
            "      |                                                                                      \u001b[01;35m\u001b[K~^\u001b[m\u001b[K         \u001b[32m\u001b[K~\u001b[m\u001b[K\n",
            "      |                                                                                       \u001b[01;35m\u001b[K|\u001b[m\u001b[K         \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                                       \u001b[01;35m\u001b[Kint\u001b[m\u001b[K       \u001b[32m\u001b[Ksize_t {aka long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                                      \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/crop_layer.c -o obj/crop_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/dropout_layer.c -o obj/dropout_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/maxpool_layer.c -o obj/maxpool_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/softmax_layer.c -o obj/softmax_layer.o\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kmake_contrastive_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:203:101:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 9 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Kconst long unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  203 |     fprintf(stderr, \"contrastive %4d x%4d x%4d x emb_size %4d x batch: %4d  classes = %4d, step = \u001b[01;35m\u001b[K%4d\u001b[m\u001b[K \\n\", w, h, l.n, l.embedding_size, batch, l.classes, \u001b[32m\u001b[Kstep\u001b[m\u001b[K);\n",
            "      |                                                                                                   \u001b[01;35m\u001b[K~~^\u001b[m\u001b[K                                                     \u001b[32m\u001b[K~~~~\u001b[m\u001b[K\n",
            "      |                                                                                                     \u001b[01;35m\u001b[K|\u001b[m\u001b[K                                                     \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                                                     \u001b[01;35m\u001b[Kint\u001b[m\u001b[K                                                   \u001b[32m\u001b[Ksize_t {aka const long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                                                   \u001b[32m\u001b[K%4ld\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kforward_contrastive_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:244:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kmax_truth\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "  244 |                     float \u001b[01;35m\u001b[Kmax_truth\u001b[m\u001b[K = 0;\n",
            "      |                           \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/softmax_layer.c:423:71:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kformat ‘\u001b[01m\u001b[K%d\u001b[m\u001b[K’ expects argument of type ‘\u001b[01m\u001b[Kint\u001b[m\u001b[K’, but argument 2 has type ‘\u001b[01m\u001b[Ksize_t\u001b[m\u001b[K’ {aka ‘\u001b[01m\u001b[Kconst long unsigned int\u001b[m\u001b[K’} [\u001b[01;35m\u001b[K-Wformat=\u001b[m\u001b[K]\n",
            "  423 |             printf(\" Error: too large number of bboxes: contr_size = \u001b[01;35m\u001b[K%d\u001b[m\u001b[K > max_contr_size  = %d \\n\", \u001b[32m\u001b[Kcontr_size\u001b[m\u001b[K, max_contr_size);\n",
            "      |                                                                      \u001b[01;35m\u001b[K~^\u001b[m\u001b[K                             \u001b[32m\u001b[K~~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                                                       \u001b[01;35m\u001b[K|\u001b[m\u001b[K                             \u001b[32m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                                                       \u001b[01;35m\u001b[Kint\u001b[m\u001b[K                           \u001b[32m\u001b[Ksize_t {aka const long unsigned int}\u001b[m\u001b[K\n",
            "      |                                                                      \u001b[32m\u001b[K%ld\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/data.c -o obj/data.o\n",
            "\u001b[01m\u001b[K./src/data.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kload_data_detection\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/data.c:1297:24:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kx\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1297 |                 int k, \u001b[01;35m\u001b[Kx\u001b[m\u001b[K, y;\n",
            "      |                        \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:1090:43:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kr_scale\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            " 1090 |     float r1 = 0, r2 = 0, r3 = 0, r4 = 0, \u001b[01;35m\u001b[Kr_scale\u001b[m\u001b[K = 0;\n",
            "      |                                           \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfill_truth_detection\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/data.c:440:33:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[K%s\u001b[m\u001b[K’ directive writing up to 4095 bytes into a region of size 251 [\u001b[01;35m\u001b[K-Wformat-overflow=\u001b[m\u001b[K]\n",
            "  440 |             sprintf(buff, \"echo \u001b[01;35m\u001b[K%s\u001b[m\u001b[K \\\"Wrong annotation: w = %f\\\" >> bad_label.list\", \u001b[32m\u001b[Klabelpath\u001b[m\u001b[K, w);\n",
            "      |                                 \u001b[01;35m\u001b[K^~\u001b[m\u001b[K                                                  \u001b[32m\u001b[K~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:440:27:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kassuming directive output of 8 bytes\n",
            "  440 |             sprintf(buff, \u001b[01;36m\u001b[K\"echo %s \\\"Wrong annotation: w = %f\\\" >> bad_label.list\"\u001b[m\u001b[K, labelpath, w);\n",
            "      |                           \u001b[01;36m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/include/stdio.h:867\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:13\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/include/x86_64-linux-gnu/bits/stdio2.h:36:10:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[K__builtin___sprintf_chk\u001b[m\u001b[K’ output between 52 and 4461 bytes into a destination of size 256\n",
            "   36 |   return \u001b[01;36m\u001b[K__builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,\u001b[m\u001b[K\n",
            "      |          \u001b[01;36m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "   37 | \u001b[01;36m\u001b[K      __bos (__s), __fmt, __va_arg_pack ())\u001b[m\u001b[K;\n",
            "      |       \u001b[01;36m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:447:33:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[K%s\u001b[m\u001b[K’ directive writing up to 4095 bytes into a region of size 251 [\u001b[01;35m\u001b[K-Wformat-overflow=\u001b[m\u001b[K]\n",
            "  447 |             sprintf(buff, \"echo \u001b[01;35m\u001b[K%s\u001b[m\u001b[K \\\"Wrong annotation: h = %f\\\" >> bad_label.list\", \u001b[32m\u001b[Klabelpath\u001b[m\u001b[K, h);\n",
            "      |                                 \u001b[01;35m\u001b[K^~\u001b[m\u001b[K                                                  \u001b[32m\u001b[K~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:447:27:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kassuming directive output of 8 bytes\n",
            "  447 |             sprintf(buff, \u001b[01;36m\u001b[K\"echo %s \\\"Wrong annotation: h = %f\\\" >> bad_label.list\"\u001b[m\u001b[K, labelpath, h);\n",
            "      |                           \u001b[01;36m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/include/stdio.h:867\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:13\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/include/x86_64-linux-gnu/bits/stdio2.h:36:10:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[K__builtin___sprintf_chk\u001b[m\u001b[K’ output between 52 and 4461 bytes into a destination of size 256\n",
            "   36 |   return \u001b[01;36m\u001b[K__builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,\u001b[m\u001b[K\n",
            "      |          \u001b[01;36m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "   37 | \u001b[01;36m\u001b[K      __bos (__s), __fmt, __va_arg_pack ())\u001b[m\u001b[K;\n",
            "      |       \u001b[01;36m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:432:33:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[K%s\u001b[m\u001b[K’ directive writing up to 4095 bytes into a region of size 251 [\u001b[01;35m\u001b[K-Wformat-overflow=\u001b[m\u001b[K]\n",
            "  432 |             sprintf(buff, \"echo \u001b[01;35m\u001b[K%s\u001b[m\u001b[K \\\"Wrong annotation: x = %f, y = %f\\\" >> bad_label.list\", \u001b[32m\u001b[Klabelpath\u001b[m\u001b[K, x, y);\n",
            "      |                                 \u001b[01;35m\u001b[K^~\u001b[m\u001b[K                                                          \u001b[32m\u001b[K~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:432:27:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kassuming directive output of 8 bytes\n",
            "  432 |             sprintf(buff, \u001b[01;36m\u001b[K\"echo %s \\\"Wrong annotation: x = %f, y = %f\\\" >> bad_label.list\"\u001b[m\u001b[K, labelpath, x, y);\n",
            "      |                           \u001b[01;36m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:432:27:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kassuming directive output of 8 bytes\n",
            "In file included from \u001b[01m\u001b[K/usr/include/stdio.h:867\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:13\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/include/x86_64-linux-gnu/bits/stdio2.h:36:10:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[K__builtin___sprintf_chk\u001b[m\u001b[K’ output between 61 and 4784 bytes into a destination of size 256\n",
            "   36 |   return \u001b[01;36m\u001b[K__builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,\u001b[m\u001b[K\n",
            "      |          \u001b[01;36m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "   37 | \u001b[01;36m\u001b[K      __bos (__s), __fmt, __va_arg_pack ())\u001b[m\u001b[K;\n",
            "      |       \u001b[01;36m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:424:33:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[K%s\u001b[m\u001b[K’ directive writing up to 4095 bytes into a region of size 251 [\u001b[01;35m\u001b[K-Wformat-overflow=\u001b[m\u001b[K]\n",
            "  424 |             sprintf(buff, \"echo \u001b[01;35m\u001b[K%s\u001b[m\u001b[K \\\"Wrong annotation: x = 0 or y = 0\\\" >> bad_label.list\", \u001b[32m\u001b[Klabelpath\u001b[m\u001b[K);\n",
            "      |                                 \u001b[01;35m\u001b[K^~\u001b[m\u001b[K                                                          \u001b[32m\u001b[K~~~~~~~~~\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/include/stdio.h:867\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:13\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/include/x86_64-linux-gnu/bits/stdio2.h:36:10:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[K__builtin___sprintf_chk\u001b[m\u001b[K’ output between 59 and 4154 bytes into a destination of size 256\n",
            "   36 |   return \u001b[01;36m\u001b[K__builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,\u001b[m\u001b[K\n",
            "      |          \u001b[01;36m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "   37 | \u001b[01;36m\u001b[K      __bos (__s), __fmt, __va_arg_pack ())\u001b[m\u001b[K;\n",
            "      |       \u001b[01;36m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/data.c:410:33:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[K%s\u001b[m\u001b[K’ directive writing up to 4095 bytes into a region of size 251 [\u001b[01;35m\u001b[K-Wformat-overflow=\u001b[m\u001b[K]\n",
            "  410 |             sprintf(buff, \"echo \u001b[01;35m\u001b[K%s\u001b[m\u001b[K \\\"Wrong annotation: class_id = %d. But class_id should be [from 0 to %d]\\\" >> bad_label.list\", \u001b[32m\u001b[Klabelpath\u001b[m\u001b[K, id, (classes-1));\n",
            "      |                                 \u001b[01;35m\u001b[K^~\u001b[m\u001b[K                                                                                                \u001b[32m\u001b[K~~~~~~~~~\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/include/stdio.h:867\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:13\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/data.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/include/x86_64-linux-gnu/bits/stdio2.h:36:10:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K‘\u001b[01m\u001b[K__builtin___sprintf_chk\u001b[m\u001b[K’ output between 95 and 4210 bytes into a destination of size 256\n",
            "   36 |   return \u001b[01;36m\u001b[K__builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,\u001b[m\u001b[K\n",
            "      |          \u001b[01;36m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "   37 | \u001b[01;36m\u001b[K      __bos (__s), __fmt, __va_arg_pack ())\u001b[m\u001b[K;\n",
            "      |       \u001b[01;36m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/matrix.c -o obj/matrix.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/network.c -o obj/network.o\n",
            "\u001b[01m\u001b[K./src/network.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Ktrain_network_waitkey\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/network.c:435:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kema_period\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  435 |         int \u001b[01;35m\u001b[Kema_period\u001b[m\u001b[K = (net.max_batches - ema_start_point - 1000) * (1.0 - net.ema_alpha);\n",
            "      |             \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/network.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kresize_network\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/network.c:660:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "  660 |         if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&net->input_pinned_cpu\u001b[m\u001b[K, size * sizeof(float), cudaHostRegisterMapped))\n",
            "      |                                          \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/network.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/connected_layer.c -o obj/connected_layer.o\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kforward_connected_layer_gpu\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:346:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kone\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  346 |     float \u001b[01;35m\u001b[Kone\u001b[m\u001b[K = 1;    // alpha[0], beta[0]\n",
            "      |           \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:344:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kc\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  344 |     float * \u001b[01;35m\u001b[Kc\u001b[m\u001b[K = l.output_gpu;\n",
            "      |             \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:343:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kb\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  343 |     float * \u001b[01;35m\u001b[Kb\u001b[m\u001b[K = l.weights_gpu;\n",
            "      |             \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:342:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ka\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  342 |     float * \u001b[01;35m\u001b[Ka\u001b[m\u001b[K = state.input;\n",
            "      |             \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:341:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kn\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  341 |     int \u001b[01;35m\u001b[Kn\u001b[m\u001b[K = l.outputs;\n",
            "      |         \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:340:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kk\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  340 |     int \u001b[01;35m\u001b[Kk\u001b[m\u001b[K = l.inputs;\n",
            "      |         \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/connected_layer.c:339:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Km\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  339 |     int \u001b[01;35m\u001b[Km\u001b[m\u001b[K = l.batch;\n",
            "      |         \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/cost_layer.c -o obj/cost_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/parser.c -o obj/parser.o\n",
            "\u001b[01m\u001b[K./src/parser.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kparse_network_cfg_custom\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/parser.c:1777:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            " 1777 |         if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&net.input_pinned_cpu\u001b[m\u001b[K, size * sizeof(float), cudaHostRegisterMapped)) net.input_pinned_cpu_flag = 1;\n",
            "      |                                          \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activation_layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/parser.c:6\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/parser.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Ksave_implicit_weights\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/parser.c:1909:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ki\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1909 |     int \u001b[01;35m\u001b[Ki\u001b[m\u001b[K;\n",
            "      |         \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/parser.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kget_classes_multipliers\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/parser.c:438:40:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kargument 1 range [18446744071562067968, 18446744073709551615] exceeds maximum object size 9223372036854775807 [\u001b[01;35m\u001b[K-Walloc-size-larger-than=\u001b[m\u001b[K]\n",
            "  438 |         classes_multipliers = (float *)\u001b[01;35m\u001b[Kcalloc(classes_counters, sizeof(float))\u001b[m\u001b[K;\n",
            "      |                                        \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K./src/parser.c:3\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/include/stdlib.h:542:14:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kin a call to allocation function ‘\u001b[01m\u001b[Kcalloc\u001b[m\u001b[K’ declared here\n",
            "  542 | extern void *\u001b[01;36m\u001b[Kcalloc\u001b[m\u001b[K (size_t __nmemb, size_t __size)\n",
            "      |              \u001b[01;36m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/option_list.c -o obj/option_list.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/darknet.c -o obj/darknet.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/detection_layer.c -o obj/detection_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/captcha.c -o obj/captcha.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/route_layer.c -o obj/route_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/writing.c -o obj/writing.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/box.c -o obj/box.o\n",
            "\u001b[01m\u001b[K./src/box.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kbox_iou_kind\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/box.c:154:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kenumeration value ‘\u001b[01m\u001b[KMSE\u001b[m\u001b[K’ not handled in switch [\u001b[01;35m\u001b[K-Wswitch\u001b[m\u001b[K]\n",
            "  154 |     \u001b[01;35m\u001b[Kswitch\u001b[m\u001b[K(iou_kind) {\n",
            "      |     \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/box.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kdiounms_sort\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/box.c:898:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kbeta_prob\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  898 |                     float \u001b[01;35m\u001b[Kbeta_prob\u001b[m\u001b[K = pow(dets[j].prob[k], 2) / sum_prob;\n",
            "      |                           \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/box.c:897:27:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kalpha_prob\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  897 |                     float \u001b[01;35m\u001b[Kalpha_prob\u001b[m\u001b[K = pow(dets[i].prob[k], 2) / sum_prob;\n",
            "      |                           \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/nightmare.c -o obj/nightmare.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/normalization_layer.c -o obj/normalization_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/avgpool_layer.c -o obj/avgpool_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/coco.c -o obj/coco.o\n",
            "\u001b[01m\u001b[K./src/coco.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvalidate_coco_recall\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/coco.c:248:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kbase\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  248 |     char *\u001b[01;35m\u001b[Kbase\u001b[m\u001b[K = \"results/comp4_det_test_\";\n",
            "      |           \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/dice.c -o obj/dice.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/yolo.c -o obj/yolo.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/detector.c -o obj/detector.o\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Ktrain_detector\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:395:72:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Ksuggest parentheses around ‘\u001b[01m\u001b[K&&\u001b[m\u001b[K’ within ‘\u001b[01m\u001b[K||\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wparentheses\u001b[m\u001b[K]\n",
            "  395 |             \u001b[01;35m\u001b[K(iteration >= (iter_save + 1000) || iteration % 1000 == 0) && net.max_batches < 10000\u001b[m\u001b[K)\n",
            "      |             \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Keliminate_bdd\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:588:21:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kstatement with no effect [\u001b[01;35m\u001b[K-Wunused-value\u001b[m\u001b[K]\n",
            "  588 |                     \u001b[01;35m\u001b[Kfor\u001b[m\u001b[K (k; buf[k + n] != '\\0'; k++)\n",
            "      |                     \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvalidate_detector\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:709:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kmkd2\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  709 |         int \u001b[01;35m\u001b[Kmkd2\u001b[m\u001b[K = make_directory(buff2, 0777);\n",
            "      |             \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:707:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kmkd\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  707 |         int \u001b[01;35m\u001b[Kmkd\u001b[m\u001b[K = make_directory(buff, 0777);\n",
            "      |             \u001b[01;35m\u001b[K^~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvalidate_detector_map\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:1326:24:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kcur_prob\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            " 1326 |                 double \u001b[01;35m\u001b[Kcur_prob\u001b[m\u001b[K = 0;\n",
            "      |                        \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:1347:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kclass_recall\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1347 |         float \u001b[01;35m\u001b[Kclass_recall\u001b[m\u001b[K = (float)tp_for_thresh_per_class[i] / ((float)tp_for_thresh_per_class[i] + (float)(truth_classes_count[i] - tp_for_thresh_per_class[i]));\n",
            "      |               \u001b[01;35m\u001b[K^~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:1346:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kclass_precision\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1346 |         float \u001b[01;35m\u001b[Kclass_precision\u001b[m\u001b[K = (float)tp_for_thresh_per_class[i] / ((float)tp_for_thresh_per_class[i] + (float)fp_for_thresh_per_class[i]);\n",
            "      |               \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/detector.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kdraw_object\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/detector.c:1890:19:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kinv_loss\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1890 |             float \u001b[01;35m\u001b[Kinv_loss\u001b[m\u001b[K = 1.0 / max_val_cmp(0.01, avg_loss);\n",
            "      |                   \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/layer.c -o obj/layer.o\n",
            "\u001b[01m\u001b[K./src/layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfree_layer_custom\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/layer.c:208:68:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Ksuggest parentheses around ‘\u001b[01m\u001b[K&&\u001b[m\u001b[K’ within ‘\u001b[01m\u001b[K||\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wparentheses\u001b[m\u001b[K]\n",
            "  208 |     if (l.delta_gpu && (l.optimized_memory < 1 || \u001b[01;35m\u001b[Kl.keep_delta_gpu && l.optimized_memory < 3\u001b[m\u001b[K)) cuda_free(l.delta_gpu), l.delta_gpu = NULL;\n",
            "      |                                                   \u001b[01;35m\u001b[K~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/compare.c -o obj/compare.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/classifier.c -o obj/classifier.o\n",
            "\u001b[01m\u001b[K./src/classifier.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Ktrain_classifier\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/classifier.c:146:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kcount\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  146 |     int \u001b[01;35m\u001b[Kcount\u001b[m\u001b[K = 0;\n",
            "      |         \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/classifier.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kpredict_classifier\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/classifier.c:855:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktime\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  855 |     clock_t \u001b[01;35m\u001b[Ktime\u001b[m\u001b[K;\n",
            "      |             \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/classifier.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kdemo_classifier\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/classifier.c:1287:49:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktval_result\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1287 |         struct timeval tval_before, tval_after, \u001b[01;35m\u001b[Ktval_result\u001b[m\u001b[K;\n",
            "      |                                                 \u001b[01;35m\u001b[K^~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/classifier.c:1287:37:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktval_after\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            " 1287 |         struct timeval tval_before, \u001b[01;35m\u001b[Ktval_after\u001b[m\u001b[K, tval_result;\n",
            "      |                                     \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/local_layer.c -o obj/local_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/swag.c -o obj/swag.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/shortcut_layer.c -o obj/shortcut_layer.o\n",
            "\u001b[01m\u001b[K./src/shortcut_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kmake_shortcut_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/shortcut_layer.c:55:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kscale\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "   55 |         float \u001b[01;35m\u001b[Kscale\u001b[m\u001b[K = sqrt(2. / l.nweights);\n",
            "      |               \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/representation_layer.c -o obj/representation_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/activation_layer.c -o obj/activation_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/rnn_layer.c -o obj/rnn_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/gru_layer.c -o obj/gru_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/rnn.c -o obj/rnn.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/rnn_vid.c -o obj/rnn_vid.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/crnn_layer.c -o obj/crnn_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/demo.c -o obj/demo.o\n",
            "\u001b[01m\u001b[K./src/demo.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kdetect_in_thread\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/demo.c:101:15:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kl\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  101 |         layer \u001b[01;35m\u001b[Kl\u001b[m\u001b[K = net.layers[net.n - 1];\n",
            "      |               \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/tag.c -o obj/tag.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/cifar.c -o obj/cifar.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/go.c -o obj/go.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/batchnorm_layer.c -o obj/batchnorm_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/art.c -o obj/art.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/region_layer.c -o obj/region_layer.o\n",
            "\u001b[01m\u001b[K./src/region_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kresize_region_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/region_layer.c:63:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kold_h\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "   63 |     int \u001b[01;35m\u001b[Kold_h\u001b[m\u001b[K = l->h;\n",
            "      |         \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/region_layer.c:62:9:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kold_w\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "   62 |     int \u001b[01;35m\u001b[Kold_w\u001b[m\u001b[K = l->w;\n",
            "      |         \u001b[01;35m\u001b[K^~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/reorg_layer.c -o obj/reorg_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/reorg_old_layer.c -o obj/reorg_old_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/super.c -o obj/super.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/voxel.c -o obj/voxel.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/tree.c -o obj/tree.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/yolo_layer.c -o obj/yolo_layer.o\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kmake_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:68:38:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "   68 |     if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&l.output\u001b[m\u001b[K, batch*l.outputs*sizeof(float), cudaHostRegisterMapped)) l.output_pinned = 1;\n",
            "      |                                      \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                      \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                      \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:75:38:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "   75 |     if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&l.delta\u001b[m\u001b[K, batch*l.outputs*sizeof(float), cudaHostRegisterMapped)) l.delta_pinned = 1;\n",
            "      |                                      \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "      |                                      \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                      \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kresize_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:106:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "  106 |         if (cudaSuccess != cudaHostAlloc(\u001b[01;35m\u001b[K&l->output\u001b[m\u001b[K, l->batch*l->outputs * sizeof(float), cudaHostRegisterMapped)) {\n",
            "      |                                          \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:115:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "  115 |         if (cudaSuccess != cudaHostAlloc(\u001b[01;35m\u001b[K&l->delta\u001b[m\u001b[K, l->batch*l->outputs * sizeof(float), cudaHostRegisterMapped)) {\n",
            "      |                                          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/activations.h:3\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/layer.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/yolo_layer.c:1\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kprocess_batch\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:426:25:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kbest_match_t\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "  426 |                     int \u001b[01;35m\u001b[Kbest_match_t\u001b[m\u001b[K = 0;\n",
            "      |                         \u001b[01;35m\u001b[K^~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kforward_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:707:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kavg_anyobj\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  707 |     float \u001b[01;35m\u001b[Kavg_anyobj\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:706:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kavg_obj\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  706 |     float \u001b[01;35m\u001b[Kavg_obj\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:705:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kavg_cat\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  705 |     float \u001b[01;35m\u001b[Kavg_cat\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:704:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Krecall75\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  704 |     float \u001b[01;35m\u001b[Krecall75\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:703:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Krecall\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  703 |     float \u001b[01;35m\u001b[Krecall\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:702:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_ciou_loss\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  702 |     float \u001b[01;35m\u001b[Ktot_ciou_loss\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:701:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_diou_loss\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  701 |     float \u001b[01;35m\u001b[Ktot_diou_loss\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:698:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_ciou\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  698 |     float \u001b[01;35m\u001b[Ktot_ciou\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:697:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_diou\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  697 |     float \u001b[01;35m\u001b[Ktot_diou\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:696:11:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Ktot_giou\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  696 |     float \u001b[01;35m\u001b[Ktot_giou\u001b[m\u001b[K = 0;\n",
            "      |           \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/yolo_layer.c:668:12:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kunused variable ‘\u001b[01m\u001b[Kn\u001b[m\u001b[K’ [\u001b[01;35m\u001b[K-Wunused-variable\u001b[m\u001b[K]\n",
            "  668 |     int b, \u001b[01;35m\u001b[Kn\u001b[m\u001b[K;\n",
            "      |            \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/gaussian_yolo_layer.c -o obj/gaussian_yolo_layer.o\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kmake_gaussian_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:72:38:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "   72 |     if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&l.output\u001b[m\u001b[K, batch*l.outputs * sizeof(float), cudaHostRegisterMapped)) l.output_pinned = 1;\n",
            "      |                                      \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                      \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                      \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.c:7\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:79:38:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "   79 |     if (cudaSuccess == cudaHostAlloc(\u001b[01;35m\u001b[K&l.delta\u001b[m\u001b[K, batch*l.outputs * sizeof(float), cudaHostRegisterMapped)) l.delta_pinned = 1;\n",
            "      |                                      \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n",
            "      |                                      \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                      \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.c:7\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kresize_gaussian_yolo_layer\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:111:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "  111 |         if (cudaSuccess != cudaHostAlloc(\u001b[01;35m\u001b[K&l->output\u001b[m\u001b[K, l->batch*l->outputs * sizeof(float), cudaHostRegisterMapped)) {\n",
            "      |                                          \u001b[01;35m\u001b[K^~~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.c:7\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "\u001b[01m\u001b[K./src/gaussian_yolo_layer.c:120:42:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kpassing argument 1 of ‘\u001b[01m\u001b[KcudaHostAlloc\u001b[m\u001b[K’ from incompatible pointer type [\u001b[01;35m\u001b[K-Wincompatible-pointer-types\u001b[m\u001b[K]\n",
            "  120 |         if (cudaSuccess != cudaHostAlloc(\u001b[01;35m\u001b[K&l->delta\u001b[m\u001b[K, l->batch*l->outputs * sizeof(float), cudaHostRegisterMapped)) {\n",
            "      |                                          \u001b[01;35m\u001b[K^~~~~~~~~\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n",
            "      |                                          \u001b[01;35m\u001b[Kfloat **\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime.h:96\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kinclude/darknet.h:41\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.h:5\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K./src/gaussian_yolo_layer.c:7\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/cuda/include/cuda_runtime_api.h:5202:60:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[Kexpected ‘\u001b[01m\u001b[Kvoid **\u001b[m\u001b[K’ but argument is of type ‘\u001b[01m\u001b[Kfloat **\u001b[m\u001b[K’\n",
            " 5202 | extern __host__ cudaError_t CUDARTAPI cudaHostAlloc(\u001b[01;36m\u001b[Kvoid **pHost\u001b[m\u001b[K, size_t size, unsigned int flags);\n",
            "      |                                                     \u001b[01;36m\u001b[K~~~~~~~^~~~~\u001b[m\u001b[K\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/upsample_layer.c -o obj/upsample_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/lstm_layer.c -o obj/lstm_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/conv_lstm_layer.c -o obj/conv_lstm_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/scale_channels_layer.c -o obj/scale_channels_layer.o\n",
            "gcc -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF -c ./src/sam_layer.c -o obj/sam_layer.o\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/convolutional_kernels.cu -o obj/convolutional_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/activation_kernels.cu -o obj/activation_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/activation_kernels.cu(263)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"MISH_THRESHOLD\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/activation_kernels.cu(263)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"MISH_THRESHOLD\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/activation_kernels.cu(263)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"MISH_THRESHOLD\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/activation_kernels.cu(263)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"MISH_THRESHOLD\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/activation_kernels.cu(263)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"MISH_THRESHOLD\"\u001b[0m was declared but never referenced\n",
            "\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/im2col_kernels.cu -o obj/im2col_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1354)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1361)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1364)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1389)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1354)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1361)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1364)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1389)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1354)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1361)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1364)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1389)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1354)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1361)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1364)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1389)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1354)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1361)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1364)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/im2col_kernels.cu(1389)\u001b[0m: \u001b[01;35mwarning\u001b[0m #20199-D: unrecognized #pragma in device code\n",
            "\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/col2im_kernels.cu -o obj/col2im_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/blas_kernels.cu -o obj/blas_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1086)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"out_index\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1130)\u001b[0m: \u001b[01;35mwarning\u001b[0m #550-D: variable \u001b[01m\"step\"\u001b[0m was set but never used\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1736)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"stage_id\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1086)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"out_index\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1130)\u001b[0m: \u001b[01;35mwarning\u001b[0m #550-D: variable \u001b[01m\"step\"\u001b[0m was set but never used\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1736)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"stage_id\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1086)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"out_index\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1130)\u001b[0m: \u001b[01;35mwarning\u001b[0m #550-D: variable \u001b[01m\"step\"\u001b[0m was set but never used\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1736)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"stage_id\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1086)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"out_index\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1130)\u001b[0m: \u001b[01;35mwarning\u001b[0m #550-D: variable \u001b[01m\"step\"\u001b[0m was set but never used\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1736)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"stage_id\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1086)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"out_index\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1130)\u001b[0m: \u001b[01;35mwarning\u001b[0m #550-D: variable \u001b[01m\"step\"\u001b[0m was set but never used\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/blas_kernels.cu(1736)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"stage_id\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[K./src/blas_kernels.cu:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kvoid backward_shortcut_multilayer_gpu(int, int, int, int*, float**, float*, float*, float*, float*, int, float*, float**, WEIGHTS_NORMALIZATION_T)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/blas_kernels.cu:1130:5:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kstep\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            " 1130 |     \u001b[01;35m\u001b[Kint \u001b[m\u001b[Kstep = 0;\n",
            "      |     \u001b[01;35m\u001b[K^~~~\u001b[m\u001b[K\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/crop_layer_kernels.cu -o obj/crop_layer_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/dropout_layer_kernels.cu -o obj/dropout_layer_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/maxpool_layer_kernels.cu -o obj/maxpool_layer_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/network_kernels.cu -o obj/network_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/network_kernels.cu(379)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"l\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/network_kernels.cu(379)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"l\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/network_kernels.cu(379)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"l\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/network_kernels.cu(379)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"l\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[0m\u001b[01m./src/network_kernels.cu(379)\u001b[0m: \u001b[01;35mwarning\u001b[0m #177-D: variable \u001b[01m\"l\"\u001b[0m was declared but never referenced\n",
            "\n",
            "\u001b[01m\u001b[K./src/network_kernels.cu:\u001b[m\u001b[K In function ‘\u001b[01m\u001b[Kfloat train_network_datum_gpu(network, float*, float*)\u001b[m\u001b[K’:\n",
            "\u001b[01m\u001b[K./src/network_kernels.cu:379:7:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[Kvariable ‘\u001b[01m\u001b[Kl\u001b[m\u001b[K’ set but not used [\u001b[01;35m\u001b[K-Wunused-but-set-variable\u001b[m\u001b[K]\n",
            "  379 |       \u001b[01;35m\u001b[K \u001b[m\u001b[K layer l = net.layers[net.n - 1];\n",
            "      |       \u001b[01;35m\u001b[K^\u001b[m\u001b[K\n",
            "nvcc -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=[sm_50,compute_50] -gencode arch=compute_52,code=[sm_52,compute_52] -gencode arch=compute_61,code=[sm_61,compute_61] -gencode arch=compute_70,code=[sm_70,compute_70] -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF --compiler-options \"-Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF\" -c ./src/avgpool_layer_kernels.cu -o obj/avgpool_layer_kernels.o\n",
            "nvcc warning : The 'compute_35', 'compute_37', 'sm_35', and 'sm_37' architectures are deprecated, and may be removed in a future release (Use -Wno-deprecated-gpu-targets to suppress warning).\n",
            "g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -DOPENCV `pkg-config --cflags opencv4 2> /dev/null || pkg-config --cflags opencv` -DGPU -I/usr/local/cuda/include/ -DCUDNN -DCUDNN_HALF -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -DOPENCV -DGPU -DCUDNN -I/usr/local/cudnn/include -DCUDNN_HALF obj/image_opencv.o obj/http_stream.o obj/gemm.o obj/utils.o obj/dark_cuda.o obj/convolutional_layer.o obj/list.o obj/image.o obj/activations.o obj/im2col.o obj/col2im.o obj/blas.o obj/crop_layer.o obj/dropout_layer.o obj/maxpool_layer.o obj/softmax_layer.o obj/data.o obj/matrix.o obj/network.o obj/connected_layer.o obj/cost_layer.o obj/parser.o obj/option_list.o obj/darknet.o obj/detection_layer.o obj/captcha.o obj/route_layer.o obj/writing.o obj/box.o obj/nightmare.o obj/normalization_layer.o obj/avgpool_layer.o obj/coco.o obj/dice.o obj/yolo.o obj/detector.o obj/layer.o obj/compare.o obj/classifier.o obj/local_layer.o obj/swag.o obj/shortcut_layer.o obj/representation_layer.o obj/activation_layer.o obj/rnn_layer.o obj/gru_layer.o obj/rnn.o obj/rnn_vid.o obj/crnn_layer.o obj/demo.o obj/tag.o obj/cifar.o obj/go.o obj/batchnorm_layer.o obj/art.o obj/region_layer.o obj/reorg_layer.o obj/reorg_old_layer.o obj/super.o obj/voxel.o obj/tree.o obj/yolo_layer.o obj/gaussian_yolo_layer.o obj/upsample_layer.o obj/lstm_layer.o obj/conv_lstm_layer.o obj/scale_channels_layer.o obj/sam_layer.o obj/convolutional_kernels.o obj/activation_kernels.o obj/im2col_kernels.o obj/col2im_kernels.o obj/blas_kernels.o obj/crop_layer_kernels.o obj/dropout_layer_kernels.o obj/maxpool_layer_kernels.o obj/network_kernels.o obj/avgpool_layer_kernels.o -o darknet -lm -pthread `pkg-config --libs opencv4 2> /dev/null || pkg-config --libs opencv` -L/usr/local/cuda/lib64 -lcuda -lcudart -lcublas -lcurand -L/usr/local/cudnn/lib64 -lcudnn -lstdc++\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " **Getting trained Weights**"
      ],
      "metadata": {
        "id": "8DMZTHsKuQf4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights"
      ],
      "metadata": {
        "id": "8lml1orAuG89",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4a6ec519-945d-4b0a-a869-7e3ae0e4a398"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2023-03-13 11:32:29--  https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights\n",
            "Resolving github.com (github.com)... 140.82.112.3\n",
            "Connecting to github.com (github.com)|140.82.112.3|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://objects.githubusercontent.com/github-production-release-asset-2e65be/75388965/ba4b6380-889c-11ea-9751-f994f5961796?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230313%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230313T113229Z&X-Amz-Expires=300&X-Amz-Signature=eba1ea1924020bddf302fa487b075476c12f7bd76f80a8aa262ff604865e4092&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=75388965&response-content-disposition=attachment%3B%20filename%3Dyolov4.weights&response-content-type=application%2Foctet-stream [following]\n",
            "--2023-03-13 11:32:29--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/75388965/ba4b6380-889c-11ea-9751-f994f5961796?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230313%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230313T113229Z&X-Amz-Expires=300&X-Amz-Signature=eba1ea1924020bddf302fa487b075476c12f7bd76f80a8aa262ff604865e4092&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=75388965&response-content-disposition=attachment%3B%20filename%3Dyolov4.weights&response-content-type=application%2Foctet-stream\n",
            "Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n",
            "Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.108.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 257717640 (246M) [application/octet-stream]\n",
            "Saving to: ‘yolov4.weights’\n",
            "\n",
            "yolov4.weights      100%[===================>] 245.78M  70.1MB/s    in 3.7s    \n",
            "\n",
            "2023-03-13 11:32:33 (67.3 MB/s) - ‘yolov4.weights’ saved [257717640/257717640]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Creating Helper Functions**"
      ],
      "metadata": {
        "id": "JQqQQJZUuom-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "These three functions are helper functions that will allow us to show the image in your Colab Notebook after running your detections, as well as upload and download images to and from your Cloud VM."
      ],
      "metadata": {
        "id": "loosDbg3udid"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# define helper functions\n",
        "def imShow(path):\n",
        "  import cv2\n",
        "  import matplotlib.pyplot as plt\n",
        "  %matplotlib inline\n",
        "\n",
        "  image = cv2.imread(path)\n",
        "  height, width = image.shape[:2]\n",
        "  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)\n",
        "\n",
        "  fig = plt.gcf()\n",
        "  fig.set_size_inches(18, 10)\n",
        "  plt.axis(\"off\")\n",
        "  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))\n",
        "  plt.show()\n",
        "\n",
        "# use this to upload files\n",
        "def upload():\n",
        "  from google.colab import files\n",
        "  uploaded = files.upload() \n",
        "  for name, data in uploaded.items():\n",
        "    with open(name, 'wb') as f:\n",
        "      f.write(data)\n",
        "      print ('saved file', name)\n",
        "\n",
        "# use this to download a file  \n",
        "def download(path):\n",
        "  from google.colab import files\n",
        "  files.download(path)"
      ],
      "metadata": {
        "id": "1X7QnlQEc8tk"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Running detection on darknet and YOLO v4**"
      ],
      "metadata": {
        "id": "qdXzm7nQvSHw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# run darknet detection on test images\n",
        "!./darknet detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights data/person.jpg"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IvzgNHD_inC-",
        "outputId": "528a67ee-22f8-4801-e909-063da66b84d1"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " CUDA-version: 11080 (12000), cuDNN: 8.7.0, CUDNN_HALF=1, GPU count: 1  \n",
            " CUDNN_HALF=1 \n",
            " OpenCV version: 4.2.0\n",
            " 0 : compute_capability = 750, cudnn_half = 1, GPU: Tesla T4 \n",
            "net.optimized_memory = 0 \n",
            "mini_batch = 1, batch = 8, time_steps = 1, train = 0 \n",
            "   layer   filters  size/strd(dil)      input                output\n",
            "   0 Create CUDA-stream - 0 \n",
            " Create cudnn-handle 0 \n",
            "conv     32       3 x 3/ 1    608 x 608 x   3 ->  608 x 608 x  32 0.639 BF\n",
            "   1 conv     64       3 x 3/ 2    608 x 608 x  32 ->  304 x 304 x  64 3.407 BF\n",
            "   2 conv     64       1 x 1/ 1    304 x 304 x  64 ->  304 x 304 x  64 0.757 BF\n",
            "   3 route  1 \t\t                           ->  304 x 304 x  64 \n",
            "   4 conv     64       1 x 1/ 1    304 x 304 x  64 ->  304 x 304 x  64 0.757 BF\n",
            "   5 conv     32       1 x 1/ 1    304 x 304 x  64 ->  304 x 304 x  32 0.379 BF\n",
            "   6 conv     64       3 x 3/ 1    304 x 304 x  32 ->  304 x 304 x  64 3.407 BF\n",
            "   7 Shortcut Layer: 4,  wt = 0, wn = 0, outputs: 304 x 304 x  64 0.006 BF\n",
            "   8 conv     64       1 x 1/ 1    304 x 304 x  64 ->  304 x 304 x  64 0.757 BF\n",
            "   9 route  8 2 \t                           ->  304 x 304 x 128 \n",
            "  10 conv     64       1 x 1/ 1    304 x 304 x 128 ->  304 x 304 x  64 1.514 BF\n",
            "  11 conv    128       3 x 3/ 2    304 x 304 x  64 ->  152 x 152 x 128 3.407 BF\n",
            "  12 conv     64       1 x 1/ 1    152 x 152 x 128 ->  152 x 152 x  64 0.379 BF\n",
            "  13 route  11 \t\t                           ->  152 x 152 x 128 \n",
            "  14 conv     64       1 x 1/ 1    152 x 152 x 128 ->  152 x 152 x  64 0.379 BF\n",
            "  15 conv     64       1 x 1/ 1    152 x 152 x  64 ->  152 x 152 x  64 0.189 BF\n",
            "  16 conv     64       3 x 3/ 1    152 x 152 x  64 ->  152 x 152 x  64 1.703 BF\n",
            "  17 Shortcut Layer: 14,  wt = 0, wn = 0, outputs: 152 x 152 x  64 0.001 BF\n",
            "  18 conv     64       1 x 1/ 1    152 x 152 x  64 ->  152 x 152 x  64 0.189 BF\n",
            "  19 conv     64       3 x 3/ 1    152 x 152 x  64 ->  152 x 152 x  64 1.703 BF\n",
            "  20 Shortcut Layer: 17,  wt = 0, wn = 0, outputs: 152 x 152 x  64 0.001 BF\n",
            "  21 conv     64       1 x 1/ 1    152 x 152 x  64 ->  152 x 152 x  64 0.189 BF\n",
            "  22 route  21 12 \t                           ->  152 x 152 x 128 \n",
            "  23 conv    128       1 x 1/ 1    152 x 152 x 128 ->  152 x 152 x 128 0.757 BF\n",
            "  24 conv    256       3 x 3/ 2    152 x 152 x 128 ->   76 x  76 x 256 3.407 BF\n",
            "  25 conv    128       1 x 1/ 1     76 x  76 x 256 ->   76 x  76 x 128 0.379 BF\n",
            "  26 route  24 \t\t                           ->   76 x  76 x 256 \n",
            "  27 conv    128       1 x 1/ 1     76 x  76 x 256 ->   76 x  76 x 128 0.379 BF\n",
            "  28 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  29 conv    128       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 128 1.703 BF\n",
            "  30 Shortcut Layer: 27,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF\n",
            "  31 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  32 conv    128       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 128 1.703 BF\n",
            "  33 Shortcut Layer: 30,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF\n",
            "  34 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  35 conv    128       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 128 1.703 BF\n",
            "  36 Shortcut Layer: 33,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF\n",
            "  37 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  38 conv    128       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 128 1.703 BF\n",
            "  39 Shortcut Layer: 36,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF\n",
            "  40 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  41 conv    128       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 128 1.703 BF\n",
            "  42 Shortcut Layer: 39,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF\n",
            "  43 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  44 conv    128       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 128 1.703 BF\n",
            "  45 Shortcut Layer: 42,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF\n",
            "  46 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  47 conv    128       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 128 1.703 BF\n",
            "  48 Shortcut Layer: 45,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF\n",
            "  49 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  50 conv    128       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 128 1.703 BF\n",
            "  51 Shortcut Layer: 48,  wt = 0, wn = 0, outputs:  76 x  76 x 128 0.001 BF\n",
            "  52 conv    128       1 x 1/ 1     76 x  76 x 128 ->   76 x  76 x 128 0.189 BF\n",
            "  53 route  52 25 \t                           ->   76 x  76 x 256 \n",
            "  54 conv    256       1 x 1/ 1     76 x  76 x 256 ->   76 x  76 x 256 0.757 BF\n",
            "  55 conv    512       3 x 3/ 2     76 x  76 x 256 ->   38 x  38 x 512 3.407 BF\n",
            "  56 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            "  57 route  55 \t\t                           ->   38 x  38 x 512 \n",
            "  58 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            "  59 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  60 conv    256       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 256 1.703 BF\n",
            "  61 Shortcut Layer: 58,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF\n",
            "  62 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  63 conv    256       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 256 1.703 BF\n",
            "  64 Shortcut Layer: 61,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF\n",
            "  65 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  66 conv    256       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 256 1.703 BF\n",
            "  67 Shortcut Layer: 64,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF\n",
            "  68 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  69 conv    256       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 256 1.703 BF\n",
            "  70 Shortcut Layer: 67,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF\n",
            "  71 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  72 conv    256       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 256 1.703 BF\n",
            "  73 Shortcut Layer: 70,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF\n",
            "  74 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  75 conv    256       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 256 1.703 BF\n",
            "  76 Shortcut Layer: 73,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF\n",
            "  77 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  78 conv    256       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 256 1.703 BF\n",
            "  79 Shortcut Layer: 76,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF\n",
            "  80 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  81 conv    256       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 256 1.703 BF\n",
            "  82 Shortcut Layer: 79,  wt = 0, wn = 0, outputs:  38 x  38 x 256 0.000 BF\n",
            "  83 conv    256       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 256 0.189 BF\n",
            "  84 route  83 56 \t                           ->   38 x  38 x 512 \n",
            "  85 conv    512       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 512 0.757 BF\n",
            "  86 conv   1024       3 x 3/ 2     38 x  38 x 512 ->   19 x  19 x1024 3.407 BF\n",
            "  87 conv    512       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 512 0.379 BF\n",
            "  88 route  86 \t\t                           ->   19 x  19 x1024 \n",
            "  89 conv    512       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 512 0.379 BF\n",
            "  90 conv    512       1 x 1/ 1     19 x  19 x 512 ->   19 x  19 x 512 0.189 BF\n",
            "  91 conv    512       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x 512 1.703 BF\n",
            "  92 Shortcut Layer: 89,  wt = 0, wn = 0, outputs:  19 x  19 x 512 0.000 BF\n",
            "  93 conv    512       1 x 1/ 1     19 x  19 x 512 ->   19 x  19 x 512 0.189 BF\n",
            "  94 conv    512       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x 512 1.703 BF\n",
            "  95 Shortcut Layer: 92,  wt = 0, wn = 0, outputs:  19 x  19 x 512 0.000 BF\n",
            "  96 conv    512       1 x 1/ 1     19 x  19 x 512 ->   19 x  19 x 512 0.189 BF\n",
            "  97 conv    512       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x 512 1.703 BF\n",
            "  98 Shortcut Layer: 95,  wt = 0, wn = 0, outputs:  19 x  19 x 512 0.000 BF\n",
            "  99 conv    512       1 x 1/ 1     19 x  19 x 512 ->   19 x  19 x 512 0.189 BF\n",
            " 100 conv    512       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x 512 1.703 BF\n",
            " 101 Shortcut Layer: 98,  wt = 0, wn = 0, outputs:  19 x  19 x 512 0.000 BF\n",
            " 102 conv    512       1 x 1/ 1     19 x  19 x 512 ->   19 x  19 x 512 0.189 BF\n",
            " 103 route  102 87 \t                           ->   19 x  19 x1024 \n",
            " 104 conv   1024       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x1024 0.757 BF\n",
            " 105 conv    512       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 512 0.379 BF\n",
            " 106 conv   1024       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x1024 3.407 BF\n",
            " 107 conv    512       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 512 0.379 BF\n",
            " 108 max                5x 5/ 1     19 x  19 x 512 ->   19 x  19 x 512 0.005 BF\n",
            " 109 route  107 \t\t                           ->   19 x  19 x 512 \n",
            " 110 max                9x 9/ 1     19 x  19 x 512 ->   19 x  19 x 512 0.015 BF\n",
            " 111 route  107 \t\t                           ->   19 x  19 x 512 \n",
            " 112 max               13x13/ 1     19 x  19 x 512 ->   19 x  19 x 512 0.031 BF\n",
            " 113 route  112 110 108 107 \t                   ->   19 x  19 x2048 \n",
            " 114 conv    512       1 x 1/ 1     19 x  19 x2048 ->   19 x  19 x 512 0.757 BF\n",
            " 115 conv   1024       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x1024 3.407 BF\n",
            " 116 conv    512       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 512 0.379 BF\n",
            " 117 conv    256       1 x 1/ 1     19 x  19 x 512 ->   19 x  19 x 256 0.095 BF\n",
            " 118 upsample                 2x    19 x  19 x 256 ->   38 x  38 x 256\n",
            " 119 route  85 \t\t                           ->   38 x  38 x 512 \n",
            " 120 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            " 121 route  120 118 \t                           ->   38 x  38 x 512 \n",
            " 122 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            " 123 conv    512       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 512 3.407 BF\n",
            " 124 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            " 125 conv    512       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 512 3.407 BF\n",
            " 126 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            " 127 conv    128       1 x 1/ 1     38 x  38 x 256 ->   38 x  38 x 128 0.095 BF\n",
            " 128 upsample                 2x    38 x  38 x 128 ->   76 x  76 x 128\n",
            " 129 route  54 \t\t                           ->   76 x  76 x 256 \n",
            " 130 conv    128       1 x 1/ 1     76 x  76 x 256 ->   76 x  76 x 128 0.379 BF\n",
            " 131 route  130 128 \t                           ->   76 x  76 x 256 \n",
            " 132 conv    128       1 x 1/ 1     76 x  76 x 256 ->   76 x  76 x 128 0.379 BF\n",
            " 133 conv    256       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 256 3.407 BF\n",
            " 134 conv    128       1 x 1/ 1     76 x  76 x 256 ->   76 x  76 x 128 0.379 BF\n",
            " 135 conv    256       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 256 3.407 BF\n",
            " 136 conv    128       1 x 1/ 1     76 x  76 x 256 ->   76 x  76 x 128 0.379 BF\n",
            " 137 conv    256       3 x 3/ 1     76 x  76 x 128 ->   76 x  76 x 256 3.407 BF\n",
            " 138 conv    255       1 x 1/ 1     76 x  76 x 256 ->   76 x  76 x 255 0.754 BF\n",
            " 139 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.20\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            " 140 route  136 \t\t                           ->   76 x  76 x 128 \n",
            " 141 conv    256       3 x 3/ 2     76 x  76 x 128 ->   38 x  38 x 256 0.852 BF\n",
            " 142 route  141 126 \t                           ->   38 x  38 x 512 \n",
            " 143 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            " 144 conv    512       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 512 3.407 BF\n",
            " 145 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            " 146 conv    512       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 512 3.407 BF\n",
            " 147 conv    256       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 256 0.379 BF\n",
            " 148 conv    512       3 x 3/ 1     38 x  38 x 256 ->   38 x  38 x 512 3.407 BF\n",
            " 149 conv    255       1 x 1/ 1     38 x  38 x 512 ->   38 x  38 x 255 0.377 BF\n",
            " 150 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.10\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            " 151 route  147 \t\t                           ->   38 x  38 x 256 \n",
            " 152 conv    512       3 x 3/ 2     38 x  38 x 256 ->   19 x  19 x 512 0.852 BF\n",
            " 153 route  152 116 \t                           ->   19 x  19 x1024 \n",
            " 154 conv    512       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 512 0.379 BF\n",
            " 155 conv   1024       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x1024 3.407 BF\n",
            " 156 conv    512       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 512 0.379 BF\n",
            " 157 conv   1024       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x1024 3.407 BF\n",
            " 158 conv    512       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 512 0.379 BF\n",
            " 159 conv   1024       3 x 3/ 1     19 x  19 x 512 ->   19 x  19 x1024 3.407 BF\n",
            " 160 conv    255       1 x 1/ 1     19 x  19 x1024 ->   19 x  19 x 255 0.189 BF\n",
            " 161 yolo\n",
            "[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.05\n",
            "nms_kind: greedynms (1), beta = 0.600000 \n",
            "Total BFLOPS 128.459 \n",
            "avg_outputs = 1068395 \n",
            " Allocate additional workspace_size = 134.22 MB \n",
            "Loading weights from yolov4.weights...\n",
            " seen 64, trained: 32032 K-images (500 Kilo-batches_64) \n",
            "Done! Loaded 162 layers from weights-file \n",
            " Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "data/person.jpg: Predicted in 2971.729000 milli-seconds.\n",
            "dog: 99%\n",
            "person: 100%\n",
            "horse: 98%\n",
            "Unable to init server: Could not connect: Connection refused\n",
            "\n",
            "(predictions:1888): Gtk-\u001b[1;33mWARNING\u001b[0m **: \u001b[34m11:32:45.086\u001b[0m: cannot open display: \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Note: After running detections OpenCV can't open the image instantly in the cloud so we must run:**\n",
        "\n",
        "***imShow('predictions.jpg') ***"
      ],
      "metadata": {
        "id": "WrHRVPIyvhL3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# show image using our helper function\n",
        "imShow('predictions.jpg')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 575
        },
        "id": "3EggD-30jBss",
        "outputId": "2c1276de-5d81-4c6a-f480-bbf15d6b6355"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1296x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Creating Object Labelling using the model"
      ],
      "metadata": {
        "id": "ptz_BIBD0GAd"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Getting Validation dataset of Coco dataset 2017**"
      ],
      "metadata": {
        "id": "Ei-RCdg4ziN-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#parent directory\n",
        "%cd .."
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S9LUxIhg95wJ",
        "outputId": "2fac0043-0374-4e08-f3d0-2e21a7624120"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!wget http://images.cocodataset.org/zips/val2017.zip"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "353yOBOf2h2h",
        "outputId": "902bf027-6fd2-4ed9-88a4-bd90549fa1a8"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2023-03-13 11:32:47--  http://images.cocodataset.org/zips/val2017.zip\n",
            "Resolving images.cocodataset.org (images.cocodataset.org)... 52.217.172.89, 3.5.27.139, 52.216.210.97, ...\n",
            "Connecting to images.cocodataset.org (images.cocodataset.org)|52.217.172.89|:80... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 815585330 (778M) [application/zip]\n",
            "Saving to: ‘val2017.zip’\n",
            "\n",
            "val2017.zip         100%[===================>] 777.80M  82.5MB/s    in 8.7s    \n",
            "\n",
            "2023-03-13 11:32:56 (89.3 MB/s) - ‘val2017.zip’ saved [815585330/815585330]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#unzip the validation images \n",
        "!unzip /content/val2017.zip -d /content/val_images"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n60pg20b24QE",
        "outputId": "e46a7dbf-d303-4d15-be2c-8b75fe12e9b4"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            " extracting: /content/val_images/val2017/000000212226.jpg  \n",
            " extracting: /content/val_images/val2017/000000231527.jpg  \n",
            " extracting: /content/val_images/val2017/000000578922.jpg  \n",
            " extracting: /content/val_images/val2017/000000062808.jpg  \n",
            " extracting: /content/val_images/val2017/000000119038.jpg  \n",
            " extracting: /content/val_images/val2017/000000114871.jpg  \n",
            " extracting: /content/val_images/val2017/000000463918.jpg  \n",
            " extracting: /content/val_images/val2017/000000365745.jpg  \n",
            " extracting: /content/val_images/val2017/000000320425.jpg  \n",
            " extracting: /content/val_images/val2017/000000481404.jpg  \n",
            " extracting: /content/val_images/val2017/000000314294.jpg  \n",
            " extracting: /content/val_images/val2017/000000335328.jpg  \n",
            " extracting: /content/val_images/val2017/000000513688.jpg  \n",
            " extracting: /content/val_images/val2017/000000158548.jpg  \n",
            " extracting: /content/val_images/val2017/000000132116.jpg  \n",
            " extracting: /content/val_images/val2017/000000415238.jpg  \n",
            " extracting: /content/val_images/val2017/000000321333.jpg  \n",
            " extracting: /content/val_images/val2017/000000081738.jpg  \n",
            " extracting: /content/val_images/val2017/000000577584.jpg  \n",
            " extracting: /content/val_images/val2017/000000346905.jpg  \n",
            " extracting: /content/val_images/val2017/000000433980.jpg  \n",
            " extracting: /content/val_images/val2017/000000228144.jpg  \n",
            " extracting: /content/val_images/val2017/000000041872.jpg  \n",
            " extracting: /content/val_images/val2017/000000117492.jpg  \n",
            " extracting: /content/val_images/val2017/000000368900.jpg  \n",
            " extracting: /content/val_images/val2017/000000376900.jpg  \n",
            " extracting: /content/val_images/val2017/000000352491.jpg  \n",
            " extracting: /content/val_images/val2017/000000330790.jpg  \n",
            " extracting: /content/val_images/val2017/000000384850.jpg  \n",
            " extracting: /content/val_images/val2017/000000032735.jpg  \n",
            " extracting: /content/val_images/val2017/000000197004.jpg  \n",
            " extracting: /content/val_images/val2017/000000526751.jpg  \n",
            " extracting: /content/val_images/val2017/000000041488.jpg  \n",
            " extracting: /content/val_images/val2017/000000153632.jpg  \n",
            " extracting: /content/val_images/val2017/000000501523.jpg  \n",
            " extracting: /content/val_images/val2017/000000405691.jpg  \n",
            " extracting: /content/val_images/val2017/000000040757.jpg  \n",
            " extracting: /content/val_images/val2017/000000219485.jpg  \n",
            " extracting: /content/val_images/val2017/000000428280.jpg  \n",
            " extracting: /content/val_images/val2017/000000209222.jpg  \n",
            " extracting: /content/val_images/val2017/000000353051.jpg  \n",
            " extracting: /content/val_images/val2017/000000191471.jpg  \n",
            " extracting: /content/val_images/val2017/000000539962.jpg  \n",
            " extracting: /content/val_images/val2017/000000462371.jpg  \n",
            " extracting: /content/val_images/val2017/000000574315.jpg  \n",
            " extracting: /content/val_images/val2017/000000005037.jpg  \n",
            " extracting: /content/val_images/val2017/000000083540.jpg  \n",
            " extracting: /content/val_images/val2017/000000145665.jpg  \n",
            " extracting: /content/val_images/val2017/000000174231.jpg  \n",
            " extracting: /content/val_images/val2017/000000389812.jpg  \n",
            " extracting: /content/val_images/val2017/000000245513.jpg  \n",
            " extracting: /content/val_images/val2017/000000122046.jpg  \n",
            " extracting: /content/val_images/val2017/000000143931.jpg  \n",
            " extracting: /content/val_images/val2017/000000555005.jpg  \n",
            " extracting: /content/val_images/val2017/000000142472.jpg  \n",
            " extracting: /content/val_images/val2017/000000246883.jpg  \n",
            " extracting: /content/val_images/val2017/000000459272.jpg  \n",
            " extracting: /content/val_images/val2017/000000356261.jpg  \n",
            " extracting: /content/val_images/val2017/000000169996.jpg  \n",
            " extracting: /content/val_images/val2017/000000311909.jpg  \n",
            " extracting: /content/val_images/val2017/000000253433.jpg  \n",
            " extracting: /content/val_images/val2017/000000396568.jpg  \n",
            " extracting: /content/val_images/val2017/000000089045.jpg  \n",
            " extracting: /content/val_images/val2017/000000387383.jpg  \n",
            " extracting: /content/val_images/val2017/000000095155.jpg  \n",
            " extracting: /content/val_images/val2017/000000036494.jpg  \n",
            " extracting: /content/val_images/val2017/000000495054.jpg  \n",
            " extracting: /content/val_images/val2017/000000297595.jpg  \n",
            " extracting: /content/val_images/val2017/000000030213.jpg  \n",
            " extracting: /content/val_images/val2017/000000357903.jpg  \n",
            " extracting: /content/val_images/val2017/000000231237.jpg  \n",
            " extracting: /content/val_images/val2017/000000182805.jpg  \n",
            " extracting: /content/val_images/val2017/000000147740.jpg  \n",
            " extracting: /content/val_images/val2017/000000424721.jpg  \n",
            " extracting: /content/val_images/val2017/000000165257.jpg  \n",
            " extracting: /content/val_images/val2017/000000080340.jpg  \n",
            " extracting: /content/val_images/val2017/000000295420.jpg  \n",
            " extracting: /content/val_images/val2017/000000289659.jpg  \n",
            " extracting: /content/val_images/val2017/000000529528.jpg  \n",
            " extracting: /content/val_images/val2017/000000360951.jpg  \n",
            " extracting: /content/val_images/val2017/000000000885.jpg  \n",
            " extracting: /content/val_images/val2017/000000552842.jpg  \n",
            " extracting: /content/val_images/val2017/000000466156.jpg  \n",
            " extracting: /content/val_images/val2017/000000309452.jpg  \n",
            " extracting: /content/val_images/val2017/000000015254.jpg  \n",
            " extracting: /content/val_images/val2017/000000442323.jpg  \n",
            " extracting: /content/val_images/val2017/000000561335.jpg  \n",
            " extracting: /content/val_images/val2017/000000324927.jpg  \n",
            " extracting: /content/val_images/val2017/000000198489.jpg  \n",
            " extracting: /content/val_images/val2017/000000163290.jpg  \n",
            " extracting: /content/val_images/val2017/000000001425.jpg  \n",
            " extracting: /content/val_images/val2017/000000280891.jpg  \n",
            " extracting: /content/val_images/val2017/000000003661.jpg  \n",
            " extracting: /content/val_images/val2017/000000383838.jpg  \n",
            " extracting: /content/val_images/val2017/000000409268.jpg  \n",
            " extracting: /content/val_images/val2017/000000112798.jpg  \n",
            " extracting: /content/val_images/val2017/000000288584.jpg  \n",
            " extracting: /content/val_images/val2017/000000231879.jpg  \n",
            " extracting: /content/val_images/val2017/000000496571.jpg  \n",
            " extracting: /content/val_images/val2017/000000143998.jpg  \n",
            " extracting: /content/val_images/val2017/000000404191.jpg  \n",
            " extracting: /content/val_images/val2017/000000066817.jpg  \n",
            " extracting: /content/val_images/val2017/000000381360.jpg  \n",
            " extracting: /content/val_images/val2017/000000376307.jpg  \n",
            " extracting: /content/val_images/val2017/000000424545.jpg  \n",
            " extracting: /content/val_images/val2017/000000085576.jpg  \n",
            " extracting: /content/val_images/val2017/000000400044.jpg  \n",
            " extracting: /content/val_images/val2017/000000066886.jpg  \n",
            " extracting: /content/val_images/val2017/000000509656.jpg  \n",
            " extracting: /content/val_images/val2017/000000308753.jpg  \n",
            " extracting: /content/val_images/val2017/000000315492.jpg  \n",
            " extracting: /content/val_images/val2017/000000359855.jpg  \n",
            " extracting: /content/val_images/val2017/000000161820.jpg  \n",
            " extracting: /content/val_images/val2017/000000090208.jpg  \n",
            " extracting: /content/val_images/val2017/000000233567.jpg  \n",
            " extracting: /content/val_images/val2017/000000182441.jpg  \n",
            " extracting: /content/val_images/val2017/000000146825.jpg  \n",
            " extracting: /content/val_images/val2017/000000459757.jpg  \n",
            " extracting: /content/val_images/val2017/000000229311.jpg  \n",
            " extracting: /content/val_images/val2017/000000164115.jpg  \n",
            " extracting: /content/val_images/val2017/000000323799.jpg  \n",
            " extracting: /content/val_images/val2017/000000534041.jpg  \n",
            " extracting: /content/val_images/val2017/000000341094.jpg  \n",
            " extracting: /content/val_images/val2017/000000485480.jpg  \n",
            " extracting: /content/val_images/val2017/000000322829.jpg  \n",
            " extracting: /content/val_images/val2017/000000142585.jpg  \n",
            " extracting: /content/val_images/val2017/000000388215.jpg  \n",
            " extracting: /content/val_images/val2017/000000279887.jpg  \n",
            " extracting: /content/val_images/val2017/000000027972.jpg  \n",
            " extracting: /content/val_images/val2017/000000029393.jpg  \n",
            " extracting: /content/val_images/val2017/000000428562.jpg  \n",
            " extracting: /content/val_images/val2017/000000338624.jpg  \n",
            " extracting: /content/val_images/val2017/000000485027.jpg  \n",
            " extracting: /content/val_images/val2017/000000550714.jpg  \n",
            " extracting: /content/val_images/val2017/000000018833.jpg  \n",
            " extracting: /content/val_images/val2017/000000121506.jpg  \n",
            " extracting: /content/val_images/val2017/000000259690.jpg  \n",
            " extracting: /content/val_images/val2017/000000509258.jpg  \n",
            " extracting: /content/val_images/val2017/000000046048.jpg  \n",
            " extracting: /content/val_images/val2017/000000113354.jpg  \n",
            " extracting: /content/val_images/val2017/000000315187.jpg  \n",
            " extracting: /content/val_images/val2017/000000262487.jpg  \n",
            " extracting: /content/val_images/val2017/000000067180.jpg  \n",
            " extracting: /content/val_images/val2017/000000145591.jpg  \n",
            " extracting: /content/val_images/val2017/000000261097.jpg  \n",
            " extracting: /content/val_images/val2017/000000063552.jpg  \n",
            " extracting: /content/val_images/val2017/000000510329.jpg  \n",
            " extracting: /content/val_images/val2017/000000261061.jpg  \n",
            " extracting: /content/val_images/val2017/000000137950.jpg  \n",
            " extracting: /content/val_images/val2017/000000379533.jpg  \n",
            " extracting: /content/val_images/val2017/000000524280.jpg  \n",
            " extracting: /content/val_images/val2017/000000306700.jpg  \n",
            " extracting: /content/val_images/val2017/000000345252.jpg  \n",
            " extracting: /content/val_images/val2017/000000010583.jpg  \n",
            " extracting: /content/val_images/val2017/000000008277.jpg  \n",
            " extracting: /content/val_images/val2017/000000560371.jpg  \n",
            " extracting: /content/val_images/val2017/000000406611.jpg  \n",
            " extracting: /content/val_images/val2017/000000336053.jpg  \n",
            " extracting: /content/val_images/val2017/000000320664.jpg  \n",
            " extracting: /content/val_images/val2017/000000002587.jpg  \n",
            " extracting: /content/val_images/val2017/000000176446.jpg  \n",
            " extracting: /content/val_images/val2017/000000242678.jpg  \n",
            " extracting: /content/val_images/val2017/000000433192.jpg  \n",
            " extracting: /content/val_images/val2017/000000101780.jpg  \n",
            " extracting: /content/val_images/val2017/000000506178.jpg  \n",
            " extracting: /content/val_images/val2017/000000319607.jpg  \n",
            " extracting: /content/val_images/val2017/000000430048.jpg  \n",
            " extracting: /content/val_images/val2017/000000184978.jpg  \n",
            " extracting: /content/val_images/val2017/000000280325.jpg  \n",
            " extracting: /content/val_images/val2017/000000166768.jpg  \n",
            " extracting: /content/val_images/val2017/000000411817.jpg  \n",
            " extracting: /content/val_images/val2017/000000486046.jpg  \n",
            " extracting: /content/val_images/val2017/000000287545.jpg  \n",
            " extracting: /content/val_images/val2017/000000427338.jpg  \n",
            " extracting: /content/val_images/val2017/000000274066.jpg  \n",
            " extracting: /content/val_images/val2017/000000361147.jpg  \n",
            " extracting: /content/val_images/val2017/000000557501.jpg  \n",
            " extracting: /content/val_images/val2017/000000161642.jpg  \n",
            " extracting: /content/val_images/val2017/000000451043.jpg  \n",
            " extracting: /content/val_images/val2017/000000082085.jpg  \n",
            " extracting: /content/val_images/val2017/000000129945.jpg  \n",
            " extracting: /content/val_images/val2017/000000086956.jpg  \n",
            " extracting: /content/val_images/val2017/000000058655.jpg  \n",
            " extracting: /content/val_images/val2017/000000427500.jpg  \n",
            " extracting: /content/val_images/val2017/000000339870.jpg  \n",
            " extracting: /content/val_images/val2017/000000066706.jpg  \n",
            " extracting: /content/val_images/val2017/000000311190.jpg  \n",
            " extracting: /content/val_images/val2017/000000210855.jpg  \n",
            " extracting: /content/val_images/val2017/000000190007.jpg  \n",
            " extracting: /content/val_images/val2017/000000182021.jpg  \n",
            " extracting: /content/val_images/val2017/000000384136.jpg  \n",
            " extracting: /content/val_images/val2017/000000453634.jpg  \n",
            " extracting: /content/val_images/val2017/000000160666.jpg  \n",
            " extracting: /content/val_images/val2017/000000318080.jpg  \n",
            " extracting: /content/val_images/val2017/000000097337.jpg  \n",
            " extracting: /content/val_images/val2017/000000441586.jpg  \n",
            " extracting: /content/val_images/val2017/000000079034.jpg  \n",
            " extracting: /content/val_images/val2017/000000508730.jpg  \n",
            " extracting: /content/val_images/val2017/000000270705.jpg  \n",
            " extracting: /content/val_images/val2017/000000272049.jpg  \n",
            " extracting: /content/val_images/val2017/000000131273.jpg  \n",
            " extracting: /content/val_images/val2017/000000360661.jpg  \n",
            " extracting: /content/val_images/val2017/000000187585.jpg  \n",
            " extracting: /content/val_images/val2017/000000551660.jpg  \n",
            " extracting: /content/val_images/val2017/000000462576.jpg  \n",
            " extracting: /content/val_images/val2017/000000359937.jpg  \n",
            " extracting: /content/val_images/val2017/000000245915.jpg  \n",
            " extracting: /content/val_images/val2017/000000185890.jpg  \n",
            " extracting: /content/val_images/val2017/000000226154.jpg  \n",
            " extracting: /content/val_images/val2017/000000148508.jpg  \n",
            " extracting: /content/val_images/val2017/000000293300.jpg  \n",
            " extracting: /content/val_images/val2017/000000075393.jpg  \n",
            " extracting: /content/val_images/val2017/000000089296.jpg  \n",
            " extracting: /content/val_images/val2017/000000506707.jpg  \n",
            " extracting: /content/val_images/val2017/000000344614.jpg  \n",
            " extracting: /content/val_images/val2017/000000341973.jpg  \n",
            " extracting: /content/val_images/val2017/000000012639.jpg  \n",
            " extracting: /content/val_images/val2017/000000493442.jpg  \n",
            " extracting: /content/val_images/val2017/000000471756.jpg  \n",
            " extracting: /content/val_images/val2017/000000307172.jpg  \n",
            " extracting: /content/val_images/val2017/000000551215.jpg  \n",
            " extracting: /content/val_images/val2017/000000420230.jpg  \n",
            " extracting: /content/val_images/val2017/000000357737.jpg  \n",
            " extracting: /content/val_images/val2017/000000261732.jpg  \n",
            " extracting: /content/val_images/val2017/000000214205.jpg  \n",
            " extracting: /content/val_images/val2017/000000302107.jpg  \n",
            " extracting: /content/val_images/val2017/000000128476.jpg  \n",
            " extracting: /content/val_images/val2017/000000290293.jpg  \n",
            " extracting: /content/val_images/val2017/000000420069.jpg  \n",
            " extracting: /content/val_images/val2017/000000239274.jpg  \n",
            " extracting: /content/val_images/val2017/000000317024.jpg  \n",
            " extracting: /content/val_images/val2017/000000222235.jpg  \n",
            " extracting: /content/val_images/val2017/000000236845.jpg  \n",
            " extracting: /content/val_images/val2017/000000120420.jpg  \n",
            " extracting: /content/val_images/val2017/000000312406.jpg  \n",
            " extracting: /content/val_images/val2017/000000088345.jpg  \n",
            " extracting: /content/val_images/val2017/000000088218.jpg  \n",
            " extracting: /content/val_images/val2017/000000100489.jpg  \n",
            " extracting: /content/val_images/val2017/000000562059.jpg  \n",
            " extracting: /content/val_images/val2017/000000524456.jpg  \n",
            " extracting: /content/val_images/val2017/000000265816.jpg  \n",
            " extracting: /content/val_images/val2017/000000423944.jpg  \n",
            " extracting: /content/val_images/val2017/000000454798.jpg  \n",
            " extracting: /content/val_images/val2017/000000399560.jpg  \n",
            " extracting: /content/val_images/val2017/000000401991.jpg  \n",
            " extracting: /content/val_images/val2017/000000380913.jpg  \n",
            " extracting: /content/val_images/val2017/000000312278.jpg  \n",
            " extracting: /content/val_images/val2017/000000066561.jpg  \n",
            " extracting: /content/val_images/val2017/000000519208.jpg  \n",
            " extracting: /content/val_images/val2017/000000407646.jpg  \n",
            " extracting: /content/val_images/val2017/000000141821.jpg  \n",
            " extracting: /content/val_images/val2017/000000493905.jpg  \n",
            " extracting: /content/val_images/val2017/000000481567.jpg  \n",
            " extracting: /content/val_images/val2017/000000378673.jpg  \n",
            " extracting: /content/val_images/val2017/000000060363.jpg  \n",
            " extracting: /content/val_images/val2017/000000553664.jpg  \n",
            " extracting: /content/val_images/val2017/000000240767.jpg  \n",
            " extracting: /content/val_images/val2017/000000167159.jpg  \n",
            " extracting: /content/val_images/val2017/000000150417.jpg  \n",
            " extracting: /content/val_images/val2017/000000064462.jpg  \n",
            " extracting: /content/val_images/val2017/000000091619.jpg  \n",
            " extracting: /content/val_images/val2017/000000550471.jpg  \n",
            " extracting: /content/val_images/val2017/000000147223.jpg  \n",
            " extracting: /content/val_images/val2017/000000574823.jpg  \n",
            " extracting: /content/val_images/val2017/000000433774.jpg  \n",
            " extracting: /content/val_images/val2017/000000561465.jpg  \n",
            " extracting: /content/val_images/val2017/000000296969.jpg  \n",
            " extracting: /content/val_images/val2017/000000348045.jpg  \n",
            " extracting: /content/val_images/val2017/000000455219.jpg  \n",
            " extracting: /content/val_images/val2017/000000486438.jpg  \n",
            " extracting: /content/val_images/val2017/000000414638.jpg  \n",
            " extracting: /content/val_images/val2017/000000383339.jpg  \n",
            " extracting: /content/val_images/val2017/000000222455.jpg  \n",
            " extracting: /content/val_images/val2017/000000158744.jpg  \n",
            " extracting: /content/val_images/val2017/000000003255.jpg  \n",
            " extracting: /content/val_images/val2017/000000030504.jpg  \n",
            " extracting: /content/val_images/val2017/000000209757.jpg  \n",
            " extracting: /content/val_images/val2017/000000089271.jpg  \n",
            " extracting: /content/val_images/val2017/000000466835.jpg  \n",
            " extracting: /content/val_images/val2017/000000163117.jpg  \n",
            " extracting: /content/val_images/val2017/000000469246.jpg  \n",
            " extracting: /content/val_images/val2017/000000006763.jpg  \n",
            " extracting: /content/val_images/val2017/000000035963.jpg  \n",
            " extracting: /content/val_images/val2017/000000466085.jpg  \n",
            " extracting: /content/val_images/val2017/000000051712.jpg  \n",
            " extracting: /content/val_images/val2017/000000383384.jpg  \n",
            " extracting: /content/val_images/val2017/000000561889.jpg  \n",
            " extracting: /content/val_images/val2017/000000277005.jpg  \n",
            " extracting: /content/val_images/val2017/000000060932.jpg  \n",
            " extracting: /content/val_images/val2017/000000153011.jpg  \n",
            " extracting: /content/val_images/val2017/000000266892.jpg  \n",
            " extracting: /content/val_images/val2017/000000045070.jpg  \n",
            " extracting: /content/val_images/val2017/000000519039.jpg  \n",
            " extracting: /content/val_images/val2017/000000529966.jpg  \n",
            " extracting: /content/val_images/val2017/000000548780.jpg  \n",
            " extracting: /content/val_images/val2017/000000144784.jpg  \n",
            " extracting: /content/val_images/val2017/000000258541.jpg  \n",
            " extracting: /content/val_images/val2017/000000187271.jpg  \n",
            " extracting: /content/val_images/val2017/000000044699.jpg  \n",
            " extracting: /content/val_images/val2017/000000210099.jpg  \n",
            " extracting: /content/val_images/val2017/000000575081.jpg  \n",
            " extracting: /content/val_images/val2017/000000405279.jpg  \n",
            " extracting: /content/val_images/val2017/000000368982.jpg  \n",
            " extracting: /content/val_images/val2017/000000150224.jpg  \n",
            " extracting: /content/val_images/val2017/000000434247.jpg  \n",
            " extracting: /content/val_images/val2017/000000109916.jpg  \n",
            " extracting: /content/val_images/val2017/000000319369.jpg  \n",
            " extracting: /content/val_images/val2017/000000176701.jpg  \n",
            " extracting: /content/val_images/val2017/000000336209.jpg  \n",
            " extracting: /content/val_images/val2017/000000225946.jpg  \n",
            " extracting: /content/val_images/val2017/000000138115.jpg  \n",
            " extracting: /content/val_images/val2017/000000334977.jpg  \n",
            " extracting: /content/val_images/val2017/000000403584.jpg  \n",
            " extracting: /content/val_images/val2017/000000338905.jpg  \n",
            " extracting: /content/val_images/val2017/000000389109.jpg  \n",
            " extracting: /content/val_images/val2017/000000572388.jpg  \n",
            " extracting: /content/val_images/val2017/000000544605.jpg  \n",
            " extracting: /content/val_images/val2017/000000066135.jpg  \n",
            " extracting: /content/val_images/val2017/000000535578.jpg  \n",
            " extracting: /content/val_images/val2017/000000490515.jpg  \n",
            " extracting: /content/val_images/val2017/000000010764.jpg  \n",
            " extracting: /content/val_images/val2017/000000349594.jpg  \n",
            " extracting: /content/val_images/val2017/000000356498.jpg  \n",
            " extracting: /content/val_images/val2017/000000367680.jpg  \n",
            " extracting: /content/val_images/val2017/000000046872.jpg  \n",
            " extracting: /content/val_images/val2017/000000152465.jpg  \n",
            " extracting: /content/val_images/val2017/000000079144.jpg  \n",
            " extracting: /content/val_images/val2017/000000243204.jpg  \n",
            " extracting: /content/val_images/val2017/000000351530.jpg  \n",
            " extracting: /content/val_images/val2017/000000389451.jpg  \n",
            " extracting: /content/val_images/val2017/000000179765.jpg  \n",
            " extracting: /content/val_images/val2017/000000449312.jpg  \n",
            " extracting: /content/val_images/val2017/000000458702.jpg  \n",
            " extracting: /content/val_images/val2017/000000269632.jpg  \n",
            " extracting: /content/val_images/val2017/000000425361.jpg  \n",
            " extracting: /content/val_images/val2017/000000386457.jpg  \n",
            " extracting: /content/val_images/val2017/000000347265.jpg  \n",
            " extracting: /content/val_images/val2017/000000498463.jpg  \n",
            " extracting: /content/val_images/val2017/000000022623.jpg  \n",
            " extracting: /content/val_images/val2017/000000362434.jpg  \n",
            " extracting: /content/val_images/val2017/000000009378.jpg  \n",
            " extracting: /content/val_images/val2017/000000521509.jpg  \n",
            " extracting: /content/val_images/val2017/000000423519.jpg  \n",
            " extracting: /content/val_images/val2017/000000322610.jpg  \n",
            " extracting: /content/val_images/val2017/000000438304.jpg  \n",
            " extracting: /content/val_images/val2017/000000180383.jpg  \n",
            " extracting: /content/val_images/val2017/000000511999.jpg  \n",
            " extracting: /content/val_images/val2017/000000330396.jpg  \n",
            " extracting: /content/val_images/val2017/000000157098.jpg  \n",
            " extracting: /content/val_images/val2017/000000312237.jpg  \n",
            " extracting: /content/val_images/val2017/000000232348.jpg  \n",
            " extracting: /content/val_images/val2017/000000060899.jpg  \n",
            " extracting: /content/val_images/val2017/000000127955.jpg  \n",
            " extracting: /content/val_images/val2017/000000117425.jpg  \n",
            " extracting: /content/val_images/val2017/000000218249.jpg  \n",
            " extracting: /content/val_images/val2017/000000176037.jpg  \n",
            " extracting: /content/val_images/val2017/000000467176.jpg  \n",
            " extracting: /content/val_images/val2017/000000377239.jpg  \n",
            " extracting: /content/val_images/val2017/000000566923.jpg  \n",
            " extracting: /content/val_images/val2017/000000093261.jpg  \n",
            " extracting: /content/val_images/val2017/000000322959.jpg  \n",
            " extracting: /content/val_images/val2017/000000160728.jpg  \n",
            " extracting: /content/val_images/val2017/000000346968.jpg  \n",
            " extracting: /content/val_images/val2017/000000332570.jpg  \n",
            " extracting: /content/val_images/val2017/000000212166.jpg  \n",
            " extracting: /content/val_images/val2017/000000343315.jpg  \n",
            " extracting: /content/val_images/val2017/000000019924.jpg  \n",
            " extracting: /content/val_images/val2017/000000532901.jpg  \n",
            " extracting: /content/val_images/val2017/000000074733.jpg  \n",
            " extracting: /content/val_images/val2017/000000189698.jpg  \n",
            " extracting: /content/val_images/val2017/000000520871.jpg  \n",
            " extracting: /content/val_images/val2017/000000300842.jpg  \n",
            " extracting: /content/val_images/val2017/000000453722.jpg  \n",
            " extracting: /content/val_images/val2017/000000518326.jpg  \n",
            " extracting: /content/val_images/val2017/000000450559.jpg  \n",
            " extracting: /content/val_images/val2017/000000032038.jpg  \n",
            " extracting: /content/val_images/val2017/000000376093.jpg  \n",
            " extracting: /content/val_images/val2017/000000163640.jpg  \n",
            " extracting: /content/val_images/val2017/000000449909.jpg  \n",
            " extracting: /content/val_images/val2017/000000036844.jpg  \n",
            " extracting: /content/val_images/val2017/000000195045.jpg  \n",
            " extracting: /content/val_images/val2017/000000184400.jpg  \n",
            " extracting: /content/val_images/val2017/000000369757.jpg  \n",
            " extracting: /content/val_images/val2017/000000442822.jpg  \n",
            " extracting: /content/val_images/val2017/000000112626.jpg  \n",
            " extracting: /content/val_images/val2017/000000165336.jpg  \n",
            " extracting: /content/val_images/val2017/000000320632.jpg  \n",
            " extracting: /content/val_images/val2017/000000370818.jpg  \n",
            " extracting: /content/val_images/val2017/000000009400.jpg  \n",
            " extracting: /content/val_images/val2017/000000032285.jpg  \n",
            " extracting: /content/val_images/val2017/000000544052.jpg  \n",
            " extracting: /content/val_images/val2017/000000509131.jpg  \n",
            " extracting: /content/val_images/val2017/000000402096.jpg  \n",
            " extracting: /content/val_images/val2017/000000091406.jpg  \n",
            " extracting: /content/val_images/val2017/000000283785.jpg  \n",
            " extracting: /content/val_images/val2017/000000271471.jpg  \n",
            " extracting: /content/val_images/val2017/000000192964.jpg  \n",
            " extracting: /content/val_images/val2017/000000455085.jpg  \n",
            " extracting: /content/val_images/val2017/000000522007.jpg  \n",
            " extracting: /content/val_images/val2017/000000319100.jpg  \n",
            " extracting: /content/val_images/val2017/000000340175.jpg  \n",
            " extracting: /content/val_images/val2017/000000101884.jpg  \n",
            " extracting: /content/val_images/val2017/000000177893.jpg  \n",
            " extracting: /content/val_images/val2017/000000260925.jpg  \n",
            " extracting: /content/val_images/val2017/000000015272.jpg  \n",
            " extracting: /content/val_images/val2017/000000515350.jpg  \n",
            " extracting: /content/val_images/val2017/000000470924.jpg  \n",
            " extracting: /content/val_images/val2017/000000031118.jpg  \n",
            " extracting: /content/val_images/val2017/000000544519.jpg  \n",
            " extracting: /content/val_images/val2017/000000303908.jpg  \n",
            " extracting: /content/val_images/val2017/000000513580.jpg  \n",
            " extracting: /content/val_images/val2017/000000340697.jpg  \n",
            " extracting: /content/val_images/val2017/000000213255.jpg  \n",
            " extracting: /content/val_images/val2017/000000464786.jpg  \n",
            " extracting: /content/val_images/val2017/000000021879.jpg  \n",
            " extracting: /content/val_images/val2017/000000104119.jpg  \n",
            " extracting: /content/val_images/val2017/000000542776.jpg  \n",
            " extracting: /content/val_images/val2017/000000505565.jpg  \n",
            " extracting: /content/val_images/val2017/000000372349.jpg  \n",
            " extracting: /content/val_images/val2017/000000060835.jpg  \n",
            " extracting: /content/val_images/val2017/000000474164.jpg  \n",
            " extracting: /content/val_images/val2017/000000110784.jpg  \n",
            " extracting: /content/val_images/val2017/000000438955.jpg  \n",
            " extracting: /content/val_images/val2017/000000327769.jpg  \n",
            " extracting: /content/val_images/val2017/000000119088.jpg  \n",
            " extracting: /content/val_images/val2017/000000437110.jpg  \n",
            " extracting: /content/val_images/val2017/000000256916.jpg  \n",
            " extracting: /content/val_images/val2017/000000431848.jpg  \n",
            " extracting: /content/val_images/val2017/000000061658.jpg  \n",
            " extracting: /content/val_images/val2017/000000434459.jpg  \n",
            " extracting: /content/val_images/val2017/000000379476.jpg  \n",
            " extracting: /content/val_images/val2017/000000093437.jpg  \n",
            " extracting: /content/val_images/val2017/000000576955.jpg  \n",
            " extracting: /content/val_images/val2017/000000577735.jpg  \n",
            " extracting: /content/val_images/val2017/000000544565.jpg  \n",
            " extracting: /content/val_images/val2017/000000194471.jpg  \n",
            " extracting: /content/val_images/val2017/000000286422.jpg  \n",
            " extracting: /content/val_images/val2017/000000532530.jpg  \n",
            " extracting: /content/val_images/val2017/000000205647.jpg  \n",
            " extracting: /content/val_images/val2017/000000308587.jpg  \n",
            " extracting: /content/val_images/val2017/000000026926.jpg  \n",
            " extracting: /content/val_images/val2017/000000065455.jpg  \n",
            " extracting: /content/val_images/val2017/000000140420.jpg  \n",
            " extracting: /content/val_images/val2017/000000449579.jpg  \n",
            " extracting: /content/val_images/val2017/000000308430.jpg  \n",
            " extracting: /content/val_images/val2017/000000220310.jpg  \n",
            " extracting: /content/val_images/val2017/000000206831.jpg  \n",
            " extracting: /content/val_images/val2017/000000074646.jpg  \n",
            " extracting: /content/val_images/val2017/000000440475.jpg  \n",
            " extracting: /content/val_images/val2017/000000420472.jpg  \n",
            " extracting: /content/val_images/val2017/000000553731.jpg  \n",
            " extracting: /content/val_images/val2017/000000561958.jpg  \n",
            " extracting: /content/val_images/val2017/000000290081.jpg  \n",
            " extracting: /content/val_images/val2017/000000256192.jpg  \n",
            " extracting: /content/val_images/val2017/000000261318.jpg  \n",
            " extracting: /content/val_images/val2017/000000248980.jpg  \n",
            " extracting: /content/val_images/val2017/000000058384.jpg  \n",
            " extracting: /content/val_images/val2017/000000197022.jpg  \n",
            " extracting: /content/val_images/val2017/000000233771.jpg  \n",
            " extracting: /content/val_images/val2017/000000174004.jpg  \n",
            " extracting: /content/val_images/val2017/000000500477.jpg  \n",
            " extracting: /content/val_images/val2017/000000438862.jpg  \n",
            " extracting: /content/val_images/val2017/000000243344.jpg  \n",
            " extracting: /content/val_images/val2017/000000549220.jpg  \n",
            " extracting: /content/val_images/val2017/000000071451.jpg  \n",
            " extracting: /content/val_images/val2017/000000363666.jpg  \n",
            " extracting: /content/val_images/val2017/000000201676.jpg  \n",
            " extracting: /content/val_images/val2017/000000308531.jpg  \n",
            " extracting: /content/val_images/val2017/000000493799.jpg  \n",
            " extracting: /content/val_images/val2017/000000523807.jpg  \n",
            " extracting: /content/val_images/val2017/000000219578.jpg  \n",
            " extracting: /content/val_images/val2017/000000382088.jpg  \n",
            " extracting: /content/val_images/val2017/000000294831.jpg  \n",
            " extracting: /content/val_images/val2017/000000164602.jpg  \n",
            " extracting: /content/val_images/val2017/000000148783.jpg  \n",
            " extracting: /content/val_images/val2017/000000174482.jpg  \n",
            " extracting: /content/val_images/val2017/000000359677.jpg  \n",
            " extracting: /content/val_images/val2017/000000391648.jpg  \n",
            " extracting: /content/val_images/val2017/000000312552.jpg  \n",
            " extracting: /content/val_images/val2017/000000356248.jpg  \n",
            " extracting: /content/val_images/val2017/000000427256.jpg  \n",
            " extracting: /content/val_images/val2017/000000376112.jpg  \n",
            " extracting: /content/val_images/val2017/000000484415.jpg  \n",
            " extracting: /content/val_images/val2017/000000061584.jpg  \n",
            " extracting: /content/val_images/val2017/000000505789.jpg  \n",
            " extracting: /content/val_images/val2017/000000298396.jpg  \n",
            " extracting: /content/val_images/val2017/000000395633.jpg  \n",
            " extracting: /content/val_images/val2017/000000452122.jpg  \n",
            " extracting: /content/val_images/val2017/000000521717.jpg  \n",
            " extracting: /content/val_images/val2017/000000149568.jpg  \n",
            " extracting: /content/val_images/val2017/000000486104.jpg  \n",
            " extracting: /content/val_images/val2017/000000442661.jpg  \n",
            " extracting: /content/val_images/val2017/000000245311.jpg  \n",
            " extracting: /content/val_images/val2017/000000266409.jpg  \n",
            " extracting: /content/val_images/val2017/000000571804.jpg  \n",
            " extracting: /content/val_images/val2017/000000322844.jpg  \n",
            " extracting: /content/val_images/val2017/000000429718.jpg  \n",
            " extracting: /content/val_images/val2017/000000285047.jpg  \n",
            " extracting: /content/val_images/val2017/000000229601.jpg  \n",
            " extracting: /content/val_images/val2017/000000367569.jpg  \n",
            " extracting: /content/val_images/val2017/000000460347.jpg  \n",
            " extracting: /content/val_images/val2017/000000524742.jpg  \n",
            " extracting: /content/val_images/val2017/000000269932.jpg  \n",
            " extracting: /content/val_images/val2017/000000069106.jpg  \n",
            " extracting: /content/val_images/val2017/000000411665.jpg  \n",
            " extracting: /content/val_images/val2017/000000182155.jpg  \n",
            " extracting: /content/val_images/val2017/000000314914.jpg  \n",
            " extracting: /content/val_images/val2017/000000090284.jpg  \n",
            " extracting: /content/val_images/val2017/000000319617.jpg  \n",
            " extracting: /content/val_images/val2017/000000447313.jpg  \n",
            " extracting: /content/val_images/val2017/000000449432.jpg  \n",
            " extracting: /content/val_images/val2017/000000263068.jpg  \n",
            " extracting: /content/val_images/val2017/000000131131.jpg  \n",
            " extracting: /content/val_images/val2017/000000101762.jpg  \n",
            " extracting: /content/val_images/val2017/000000377497.jpg  \n",
            " extracting: /content/val_images/val2017/000000012748.jpg  \n",
            " extracting: /content/val_images/val2017/000000213445.jpg  \n",
            " extracting: /content/val_images/val2017/000000167128.jpg  \n",
            " extracting: /content/val_images/val2017/000000198915.jpg  \n",
            " extracting: /content/val_images/val2017/000000139872.jpg  \n",
            " extracting: /content/val_images/val2017/000000382734.jpg  \n",
            " extracting: /content/val_images/val2017/000000226408.jpg  \n",
            " extracting: /content/val_images/val2017/000000172083.jpg  \n",
            " extracting: /content/val_images/val2017/000000313588.jpg  \n",
            " extracting: /content/val_images/val2017/000000480021.jpg  \n",
            " extracting: /content/val_images/val2017/000000267946.jpg  \n",
            " extracting: /content/val_images/val2017/000000305695.jpg  \n",
            " extracting: /content/val_images/val2017/000000171740.jpg  \n",
            " extracting: /content/val_images/val2017/000000520301.jpg  \n",
            " extracting: /content/val_images/val2017/000000504711.jpg  \n",
            " extracting: /content/val_images/val2017/000000251824.jpg  \n",
            " extracting: /content/val_images/val2017/000000256407.jpg  \n",
            " extracting: /content/val_images/val2017/000000455157.jpg  \n",
            " extracting: /content/val_images/val2017/000000236308.jpg  \n",
            " extracting: /content/val_images/val2017/000000064495.jpg  \n",
            " extracting: /content/val_images/val2017/000000252701.jpg  \n",
            " extracting: /content/val_images/val2017/000000173830.jpg  \n",
            " extracting: /content/val_images/val2017/000000107339.jpg  \n",
            " extracting: /content/val_images/val2017/000000066841.jpg  \n",
            " extracting: /content/val_images/val2017/000000350148.jpg  \n",
            " extracting: /content/val_images/val2017/000000558073.jpg  \n",
            " extracting: /content/val_images/val2017/000000514586.jpg  \n",
            " extracting: /content/val_images/val2017/000000143068.jpg  \n",
            " extracting: /content/val_images/val2017/000000085376.jpg  \n",
            " extracting: /content/val_images/val2017/000000240250.jpg  \n",
            " extracting: /content/val_images/val2017/000000359781.jpg  \n",
            " extracting: /content/val_images/val2017/000000246968.jpg  \n",
            " extracting: /content/val_images/val2017/000000132587.jpg  \n",
            " extracting: /content/val_images/val2017/000000134689.jpg  \n",
            " extracting: /content/val_images/val2017/000000350833.jpg  \n",
            " extracting: /content/val_images/val2017/000000579158.jpg  \n",
            " extracting: /content/val_images/val2017/000000131386.jpg  \n",
            " extracting: /content/val_images/val2017/000000191580.jpg  \n",
            " extracting: /content/val_images/val2017/000000032861.jpg  \n",
            " extracting: /content/val_images/val2017/000000433515.jpg  \n",
            " extracting: /content/val_images/val2017/000000099053.jpg  \n",
            " extracting: /content/val_images/val2017/000000490936.jpg  \n",
            " extracting: /content/val_images/val2017/000000177065.jpg  \n",
            " extracting: /content/val_images/val2017/000000391140.jpg  \n",
            " extracting: /content/val_images/val2017/000000014888.jpg  \n",
            " extracting: /content/val_images/val2017/000000166165.jpg  \n",
            " extracting: /content/val_images/val2017/000000188296.jpg  \n",
            " extracting: /content/val_images/val2017/000000546829.jpg  \n",
            " extracting: /content/val_images/val2017/000000076211.jpg  \n",
            " extracting: /content/val_images/val2017/000000284445.jpg  \n",
            " extracting: /content/val_images/val2017/000000261888.jpg  \n",
            " extracting: /content/val_images/val2017/000000271402.jpg  \n",
            " extracting: /content/val_images/val2017/000000195918.jpg  \n",
            " extracting: /content/val_images/val2017/000000476787.jpg  \n",
            " extracting: /content/val_images/val2017/000000003934.jpg  \n",
            " extracting: /content/val_images/val2017/000000052007.jpg  \n",
            " extracting: /content/val_images/val2017/000000226903.jpg  \n",
            " extracting: /content/val_images/val2017/000000080057.jpg  \n",
            " extracting: /content/val_images/val2017/000000516173.jpg  \n",
            " extracting: /content/val_images/val2017/000000314177.jpg  \n",
            " extracting: /content/val_images/val2017/000000184791.jpg  \n",
            " extracting: /content/val_images/val2017/000000579900.jpg  \n",
            " extracting: /content/val_images/val2017/000000000285.jpg  \n",
            " extracting: /content/val_images/val2017/000000489046.jpg  \n",
            " extracting: /content/val_images/val2017/000000499768.jpg  \n",
            " extracting: /content/val_images/val2017/000000446522.jpg  \n",
            " extracting: /content/val_images/val2017/000000562818.jpg  \n",
            " extracting: /content/val_images/val2017/000000414795.jpg  \n",
            " extracting: /content/val_images/val2017/000000392933.jpg  \n",
            " extracting: /content/val_images/val2017/000000334555.jpg  \n",
            " extracting: /content/val_images/val2017/000000150649.jpg  \n",
            " extracting: /content/val_images/val2017/000000345397.jpg  \n",
            " extracting: /content/val_images/val2017/000000266768.jpg  \n",
            " extracting: /content/val_images/val2017/000000230166.jpg  \n",
            " extracting: /content/val_images/val2017/000000130613.jpg  \n",
            " extracting: /content/val_images/val2017/000000309964.jpg  \n",
            " extracting: /content/val_images/val2017/000000380203.jpg  \n",
            " extracting: /content/val_images/val2017/000000171190.jpg  \n",
            " extracting: /content/val_images/val2017/000000303653.jpg  \n",
            " extracting: /content/val_images/val2017/000000147725.jpg  \n",
            " extracting: /content/val_images/val2017/000000396903.jpg  \n",
            " extracting: /content/val_images/val2017/000000300155.jpg  \n",
            " extracting: /content/val_images/val2017/000000245576.jpg  \n",
            " extracting: /content/val_images/val2017/000000121417.jpg  \n",
            " extracting: /content/val_images/val2017/000000055150.jpg  \n",
            " extracting: /content/val_images/val2017/000000571313.jpg  \n",
            " extracting: /content/val_images/val2017/000000248810.jpg  \n",
            " extracting: /content/val_images/val2017/000000484978.jpg  \n",
            " extracting: /content/val_images/val2017/000000539883.jpg  \n",
            " extracting: /content/val_images/val2017/000000215644.jpg  \n",
            " extracting: /content/val_images/val2017/000000187990.jpg  \n",
            " extracting: /content/val_images/val2017/000000527528.jpg  \n",
            " extracting: /content/val_images/val2017/000000538364.jpg  \n",
            " extracting: /content/val_images/val2017/000000330818.jpg  \n",
            " extracting: /content/val_images/val2017/000000193926.jpg  \n",
            " extracting: /content/val_images/val2017/000000030785.jpg  \n",
            " extracting: /content/val_images/val2017/000000085089.jpg  \n",
            " extracting: /content/val_images/val2017/000000268996.jpg  \n",
            " extracting: /content/val_images/val2017/000000519688.jpg  \n",
            " extracting: /content/val_images/val2017/000000006040.jpg  \n",
            " extracting: /content/val_images/val2017/000000473219.jpg  \n",
            " extracting: /content/val_images/val2017/000000555597.jpg  \n",
            " extracting: /content/val_images/val2017/000000492362.jpg  \n",
            " extracting: /content/val_images/val2017/000000189451.jpg  \n",
            " extracting: /content/val_images/val2017/000000476215.jpg  \n",
            " extracting: /content/val_images/val2017/000000191614.jpg  \n",
            " extracting: /content/val_images/val2017/000000571893.jpg  \n",
            " extracting: /content/val_images/val2017/000000209613.jpg  \n",
            " extracting: /content/val_images/val2017/000000484893.jpg  \n",
            " extracting: /content/val_images/val2017/000000516804.jpg  \n",
            " extracting: /content/val_images/val2017/000000534673.jpg  \n",
            " extracting: /content/val_images/val2017/000000022479.jpg  \n",
            " extracting: /content/val_images/val2017/000000459153.jpg  \n",
            " extracting: /content/val_images/val2017/000000272136.jpg  \n",
            " extracting: /content/val_images/val2017/000000231508.jpg  \n",
            " extracting: /content/val_images/val2017/000000000724.jpg  \n",
            " extracting: /content/val_images/val2017/000000477955.jpg  \n",
            " extracting: /content/val_images/val2017/000000418959.jpg  \n",
            " extracting: /content/val_images/val2017/000000257478.jpg  \n",
            " extracting: /content/val_images/val2017/000000173371.jpg  \n",
            " extracting: /content/val_images/val2017/000000415716.jpg  \n",
            " extracting: /content/val_images/val2017/000000571598.jpg  \n",
            " extracting: /content/val_images/val2017/000000426268.jpg  \n",
            " extracting: /content/val_images/val2017/000000164363.jpg  \n",
            " extracting: /content/val_images/val2017/000000171757.jpg  \n",
            " extracting: /content/val_images/val2017/000000260105.jpg  \n",
            " extracting: /content/val_images/val2017/000000474021.jpg  \n",
            " extracting: /content/val_images/val2017/000000034760.jpg  \n",
            " extracting: /content/val_images/val2017/000000402615.jpg  \n",
            " extracting: /content/val_images/val2017/000000507042.jpg  \n",
            " extracting: /content/val_images/val2017/000000077396.jpg  \n",
            " extracting: /content/val_images/val2017/000000282037.jpg  \n",
            " extracting: /content/val_images/val2017/000000255912.jpg  \n",
            " extracting: /content/val_images/val2017/000000452784.jpg  \n",
            " extracting: /content/val_images/val2017/000000308476.jpg  \n",
            " extracting: /content/val_images/val2017/000000288391.jpg  \n",
            " extracting: /content/val_images/val2017/000000439525.jpg  \n",
            " extracting: /content/val_images/val2017/000000034139.jpg  \n",
            " extracting: /content/val_images/val2017/000000025057.jpg  \n",
            " extracting: /content/val_images/val2017/000000272148.jpg  \n",
            " extracting: /content/val_images/val2017/000000419882.jpg  \n",
            " extracting: /content/val_images/val2017/000000183709.jpg  \n",
            " extracting: /content/val_images/val2017/000000166521.jpg  \n",
            " extracting: /content/val_images/val2017/000000550084.jpg  \n",
            " extracting: /content/val_images/val2017/000000050149.jpg  \n",
            " extracting: /content/val_images/val2017/000000078843.jpg  \n",
            " extracting: /content/val_images/val2017/000000424776.jpg  \n",
            " extracting: /content/val_images/val2017/000000441468.jpg  \n",
            " extracting: /content/val_images/val2017/000000186938.jpg  \n",
            " extracting: /content/val_images/val2017/000000046804.jpg  \n",
            " extracting: /content/val_images/val2017/000000213605.jpg  \n",
            " extracting: /content/val_images/val2017/000000556193.jpg  \n",
            " extracting: /content/val_images/val2017/000000133087.jpg  \n",
            " extracting: /content/val_images/val2017/000000280918.jpg  \n",
            " extracting: /content/val_images/val2017/000000350019.jpg  \n",
            " extracting: /content/val_images/val2017/000000504415.jpg  \n",
            " extracting: /content/val_images/val2017/000000565962.jpg  \n",
            " extracting: /content/val_images/val2017/000000413689.jpg  \n",
            " extracting: /content/val_images/val2017/000000520832.jpg  \n",
            " extracting: /content/val_images/val2017/000000338560.jpg  \n",
            " extracting: /content/val_images/val2017/000000163682.jpg  \n",
            " extracting: /content/val_images/val2017/000000232692.jpg  \n",
            " extracting: /content/val_images/val2017/000000338428.jpg  \n",
            " extracting: /content/val_images/val2017/000000100510.jpg  \n",
            " extracting: /content/val_images/val2017/000000565469.jpg  \n",
            " extracting: /content/val_images/val2017/000000485130.jpg  \n",
            " extracting: /content/val_images/val2017/000000149770.jpg  \n",
            " extracting: /content/val_images/val2017/000000080666.jpg  \n",
            " extracting: /content/val_images/val2017/000000537827.jpg  \n",
            " extracting: /content/val_images/val2017/000000198960.jpg  \n",
            " extracting: /content/val_images/val2017/000000521540.jpg  \n",
            " extracting: /content/val_images/val2017/000000543047.jpg  \n",
            " extracting: /content/val_images/val2017/000000409358.jpg  \n",
            " extracting: /content/val_images/val2017/000000208901.jpg  \n",
            " extracting: /content/val_images/val2017/000000338625.jpg  \n",
            " extracting: /content/val_images/val2017/000000278463.jpg  \n",
            " extracting: /content/val_images/val2017/000000171050.jpg  \n",
            " extracting: /content/val_images/val2017/000000311002.jpg  \n",
            " extracting: /content/val_images/val2017/000000051598.jpg  \n",
            " extracting: /content/val_images/val2017/000000534605.jpg  \n",
            " extracting: /content/val_images/val2017/000000127092.jpg  \n",
            " extracting: /content/val_images/val2017/000000479732.jpg  \n",
            " extracting: /content/val_images/val2017/000000042102.jpg  \n",
            " extracting: /content/val_images/val2017/000000478420.jpg  \n",
            " extracting: /content/val_images/val2017/000000423617.jpg  \n",
            " extracting: /content/val_images/val2017/000000236412.jpg  \n",
            " extracting: /content/val_images/val2017/000000560266.jpg  \n",
            " extracting: /content/val_images/val2017/000000541123.jpg  \n",
            " extracting: /content/val_images/val2017/000000464872.jpg  \n",
            " extracting: /content/val_images/val2017/000000231339.jpg  \n",
            " extracting: /content/val_images/val2017/000000430056.jpg  \n",
            " extracting: /content/val_images/val2017/000000005193.jpg  \n",
            " extracting: /content/val_images/val2017/000000351823.jpg  \n",
            " extracting: /content/val_images/val2017/000000081988.jpg  \n",
            " extracting: /content/val_images/val2017/000000459954.jpg  \n",
            " extracting: /content/val_images/val2017/000000255917.jpg  \n",
            " extracting: /content/val_images/val2017/000000464689.jpg  \n",
            " extracting: /content/val_images/val2017/000000151938.jpg  \n",
            " extracting: /content/val_images/val2017/000000173057.jpg  \n",
            " extracting: /content/val_images/val2017/000000181666.jpg  \n",
            " extracting: /content/val_images/val2017/000000009891.jpg  \n",
            " extracting: /content/val_images/val2017/000000015497.jpg  \n",
            " extracting: /content/val_images/val2017/000000249025.jpg  \n",
            " extracting: /content/val_images/val2017/000000443303.jpg  \n",
            " extracting: /content/val_images/val2017/000000335658.jpg  \n",
            " extracting: /content/val_images/val2017/000000243626.jpg  \n",
            " extracting: /content/val_images/val2017/000000065074.jpg  \n",
            " extracting: /content/val_images/val2017/000000504580.jpg  \n",
            " extracting: /content/val_images/val2017/000000015751.jpg  \n",
            " extracting: /content/val_images/val2017/000000164969.jpg  \n",
            " extracting: /content/val_images/val2017/000000473121.jpg  \n",
            " extracting: /content/val_images/val2017/000000246308.jpg  \n",
            " extracting: /content/val_images/val2017/000000521719.jpg  \n",
            " extracting: /content/val_images/val2017/000000001000.jpg  \n",
            " extracting: /content/val_images/val2017/000000094157.jpg  \n",
            " extracting: /content/val_images/val2017/000000401446.jpg  \n",
            " extracting: /content/val_images/val2017/000000093154.jpg  \n",
            " extracting: /content/val_images/val2017/000000139077.jpg  \n",
            " extracting: /content/val_images/val2017/000000581357.jpg  \n",
            " extracting: /content/val_images/val2017/000000137246.jpg  \n",
            " extracting: /content/val_images/val2017/000000113403.jpg  \n",
            " extracting: /content/val_images/val2017/000000447169.jpg  \n",
            " extracting: /content/val_images/val2017/000000161978.jpg  \n",
            " extracting: /content/val_images/val2017/000000521405.jpg  \n",
            " extracting: /content/val_images/val2017/000000289222.jpg  \n",
            " extracting: /content/val_images/val2017/000000516318.jpg  \n",
            " extracting: /content/val_images/val2017/000000027768.jpg  \n",
            " extracting: /content/val_images/val2017/000000237517.jpg  \n",
            " extracting: /content/val_images/val2017/000000256941.jpg  \n",
            " extracting: /content/val_images/val2017/000000200162.jpg  \n",
            " extracting: /content/val_images/val2017/000000104603.jpg  \n",
            " extracting: /content/val_images/val2017/000000431545.jpg  \n",
            " extracting: /content/val_images/val2017/000000013597.jpg  \n",
            " extracting: /content/val_images/val2017/000000562448.jpg  \n",
            " extracting: /content/val_images/val2017/000000221754.jpg  \n",
            " extracting: /content/val_images/val2017/000000577976.jpg  \n",
            " extracting: /content/val_images/val2017/000000555009.jpg  \n",
            " extracting: /content/val_images/val2017/000000357081.jpg  \n",
            " extracting: /content/val_images/val2017/000000248631.jpg  \n",
            " extracting: /content/val_images/val2017/000000491130.jpg  \n",
            " extracting: /content/val_images/val2017/000000001584.jpg  \n",
            " extracting: /content/val_images/val2017/000000309938.jpg  \n",
            " extracting: /content/val_images/val2017/000000395180.jpg  \n",
            " extracting: /content/val_images/val2017/000000482487.jpg  \n",
            " extracting: /content/val_images/val2017/000000198510.jpg  \n",
            " extracting: /content/val_images/val2017/000000080153.jpg  \n",
            " extracting: /content/val_images/val2017/000000096427.jpg  \n",
            " extracting: /content/val_images/val2017/000000348012.jpg  \n",
            " extracting: /content/val_images/val2017/000000518213.jpg  \n",
            " extracting: /content/val_images/val2017/000000376278.jpg  \n",
            " extracting: /content/val_images/val2017/000000056350.jpg  \n",
            " extracting: /content/val_images/val2017/000000168458.jpg  \n",
            " extracting: /content/val_images/val2017/000000262587.jpg  \n",
            " extracting: /content/val_images/val2017/000000151480.jpg  \n",
            " extracting: /content/val_images/val2017/000000419312.jpg  \n",
            " extracting: /content/val_images/val2017/000000029187.jpg  \n",
            " extracting: /content/val_images/val2017/000000067406.jpg  \n",
            " extracting: /content/val_images/val2017/000000371749.jpg  \n",
            " extracting: /content/val_images/val2017/000000334767.jpg  \n",
            " extracting: /content/val_images/val2017/000000190307.jpg  \n",
            " extracting: /content/val_images/val2017/000000400794.jpg  \n",
            " extracting: /content/val_images/val2017/000000218091.jpg  \n",
            " extracting: /content/val_images/val2017/000000484029.jpg  \n",
            " extracting: /content/val_images/val2017/000000461405.jpg  \n",
            " extracting: /content/val_images/val2017/000000393056.jpg  \n",
            " extracting: /content/val_images/val2017/000000552612.jpg  \n",
            " extracting: /content/val_images/val2017/000000322574.jpg  \n",
            " extracting: /content/val_images/val2017/000000140640.jpg  \n",
            " extracting: /content/val_images/val2017/000000229753.jpg  \n",
            " extracting: /content/val_images/val2017/000000013291.jpg  \n",
            " extracting: /content/val_images/val2017/000000050896.jpg  \n",
            " extracting: /content/val_images/val2017/000000104619.jpg  \n",
            " extracting: /content/val_images/val2017/000000061108.jpg  \n",
            " extracting: /content/val_images/val2017/000000081394.jpg  \n",
            " extracting: /content/val_images/val2017/000000055950.jpg  \n",
            " extracting: /content/val_images/val2017/000000256195.jpg  \n",
            " extracting: /content/val_images/val2017/000000304404.jpg  \n",
            " extracting: /content/val_images/val2017/000000133645.jpg  \n",
            " extracting: /content/val_images/val2017/000000217872.jpg  \n",
            " extracting: /content/val_images/val2017/000000308631.jpg  \n",
            " extracting: /content/val_images/val2017/000000458410.jpg  \n",
            " extracting: /content/val_images/val2017/000000523175.jpg  \n",
            " extracting: /content/val_images/val2017/000000078823.jpg  \n",
            " extracting: /content/val_images/val2017/000000392722.jpg  \n",
            " extracting: /content/val_images/val2017/000000480122.jpg  \n",
            " extracting: /content/val_images/val2017/000000142620.jpg  \n",
            " extracting: /content/val_images/val2017/000000006471.jpg  \n",
            " extracting: /content/val_images/val2017/000000195165.jpg  \n",
            " extracting: /content/val_images/val2017/000000098520.jpg  \n",
            " extracting: /content/val_images/val2017/000000473974.jpg  \n",
            " extracting: /content/val_images/val2017/000000022371.jpg  \n",
            " extracting: /content/val_images/val2017/000000136633.jpg  \n",
            " extracting: /content/val_images/val2017/000000079408.jpg  \n",
            " extracting: /content/val_images/val2017/000000307145.jpg  \n",
            " extracting: /content/val_images/val2017/000000429623.jpg  \n",
            " extracting: /content/val_images/val2017/000000466416.jpg  \n",
            " extracting: /content/val_images/val2017/000000394677.jpg  \n",
            " extracting: /content/val_images/val2017/000000324818.jpg  \n",
            " extracting: /content/val_images/val2017/000000017115.jpg  \n",
            " extracting: /content/val_images/val2017/000000389197.jpg  \n",
            " extracting: /content/val_images/val2017/000000046378.jpg  \n",
            " extracting: /content/val_images/val2017/000000474452.jpg  \n",
            " extracting: /content/val_images/val2017/000000327605.jpg  \n",
            " extracting: /content/val_images/val2017/000000508370.jpg  \n",
            " extracting: /content/val_images/val2017/000000263425.jpg  \n",
            " extracting: /content/val_images/val2017/000000463527.jpg  \n",
            " extracting: /content/val_images/val2017/000000301981.jpg  \n",
            " extracting: /content/val_images/val2017/000000186632.jpg  \n",
            " extracting: /content/val_images/val2017/000000057244.jpg  \n",
            " extracting: /content/val_images/val2017/000000007088.jpg  \n",
            " extracting: /content/val_images/val2017/000000177489.jpg  \n",
            " extracting: /content/val_images/val2017/000000177861.jpg  \n",
            " extracting: /content/val_images/val2017/000000200152.jpg  \n",
            " extracting: /content/val_images/val2017/000000096960.jpg  \n",
            " extracting: /content/val_images/val2017/000000565391.jpg  \n",
            " extracting: /content/val_images/val2017/000000132408.jpg  \n",
            " extracting: /content/val_images/val2017/000000218997.jpg  \n",
            " extracting: /content/val_images/val2017/000000194832.jpg  \n",
            " extracting: /content/val_images/val2017/000000302882.jpg  \n",
            " extracting: /content/val_images/val2017/000000292997.jpg  \n",
            " extracting: /content/val_images/val2017/000000427077.jpg  \n",
            " extracting: /content/val_images/val2017/000000560011.jpg  \n",
            " extracting: /content/val_images/val2017/000000499031.jpg  \n",
            " extracting: /content/val_images/val2017/000000411530.jpg  \n",
            " extracting: /content/val_images/val2017/000000413395.jpg  \n",
            " extracting: /content/val_images/val2017/000000346638.jpg  \n",
            " extracting: /content/val_images/val2017/000000122217.jpg  \n",
            " extracting: /content/val_images/val2017/000000199055.jpg  \n",
            " extracting: /content/val_images/val2017/000000421923.jpg  \n",
            " extracting: /content/val_images/val2017/000000261161.jpg  \n",
            " extracting: /content/val_images/val2017/000000567825.jpg  \n",
            " extracting: /content/val_images/val2017/000000456303.jpg  \n",
            " extracting: /content/val_images/val2017/000000450488.jpg  \n",
            " extracting: /content/val_images/val2017/000000527960.jpg  \n",
            " extracting: /content/val_images/val2017/000000246454.jpg  \n",
            " extracting: /content/val_images/val2017/000000328117.jpg  \n",
            " extracting: /content/val_images/val2017/000000508602.jpg  \n",
            " extracting: /content/val_images/val2017/000000017436.jpg  \n",
            " extracting: /content/val_images/val2017/000000159311.jpg  \n",
            " extracting: /content/val_images/val2017/000000293858.jpg  \n",
            " extracting: /content/val_images/val2017/000000294163.jpg  \n",
            " extracting: /content/val_images/val2017/000000157138.jpg  \n",
            " extracting: /content/val_images/val2017/000000460229.jpg  \n",
            " extracting: /content/val_images/val2017/000000473821.jpg  \n",
            " extracting: /content/val_images/val2017/000000108244.jpg  \n",
            " extracting: /content/val_images/val2017/000000546219.jpg  \n",
            " extracting: /content/val_images/val2017/000000344888.jpg  \n",
            " extracting: /content/val_images/val2017/000000439290.jpg  \n",
            " extracting: /content/val_images/val2017/000000294855.jpg  \n",
            " extracting: /content/val_images/val2017/000000417608.jpg  \n",
            " extracting: /content/val_images/val2017/000000229997.jpg  \n",
            " extracting: /content/val_images/val2017/000000092124.jpg  \n",
            " extracting: /content/val_images/val2017/000000474078.jpg  \n",
            " extracting: /content/val_images/val2017/000000103548.jpg  \n",
            " extracting: /content/val_images/val2017/000000577959.jpg  \n",
            " extracting: /content/val_images/val2017/000000227985.jpg  \n",
            " extracting: /content/val_images/val2017/000000546976.jpg  \n",
            " extracting: /content/val_images/val2017/000000577932.jpg  \n",
            " extracting: /content/val_images/val2017/000000350003.jpg  \n",
            " extracting: /content/val_images/val2017/000000235784.jpg  \n",
            " extracting: /content/val_images/val2017/000000028285.jpg  \n",
            " extracting: /content/val_images/val2017/000000075612.jpg  \n",
            " extracting: /content/val_images/val2017/000000270677.jpg  \n",
            " extracting: /content/val_images/val2017/000000018150.jpg  \n",
            " extracting: /content/val_images/val2017/000000268000.jpg  \n",
            " extracting: /content/val_images/val2017/000000558854.jpg  \n",
            " extracting: /content/val_images/val2017/000000121586.jpg  \n",
            " extracting: /content/val_images/val2017/000000566758.jpg  \n",
            " extracting: /content/val_images/val2017/000000537153.jpg  \n",
            " extracting: /content/val_images/val2017/000000554002.jpg  \n",
            " extracting: /content/val_images/val2017/000000455937.jpg  \n",
            " extracting: /content/val_images/val2017/000000157928.jpg  \n",
            " extracting: /content/val_images/val2017/000000262048.jpg  \n",
            " extracting: /content/val_images/val2017/000000320490.jpg  \n",
            " extracting: /content/val_images/val2017/000000313130.jpg  \n",
            " extracting: /content/val_images/val2017/000000054628.jpg  \n",
            " extracting: /content/val_images/val2017/000000273493.jpg  \n",
            " extracting: /content/val_images/val2017/000000517056.jpg  \n",
            " extracting: /content/val_images/val2017/000000567432.jpg  \n",
            " extracting: /content/val_images/val2017/000000180792.jpg  \n",
            " extracting: /content/val_images/val2017/000000078959.jpg  \n",
            " extracting: /content/val_images/val2017/000000118405.jpg  \n",
            " extracting: /content/val_images/val2017/000000506279.jpg  \n",
            " extracting: /content/val_images/val2017/000000180101.jpg  \n",
            " extracting: /content/val_images/val2017/000000426795.jpg  \n",
            " extracting: /content/val_images/val2017/000000311928.jpg  \n",
            " extracting: /content/val_images/val2017/000000297085.jpg  \n",
            " extracting: /content/val_images/val2017/000000186296.jpg  \n",
            " extracting: /content/val_images/val2017/000000070254.jpg  \n",
            " extracting: /content/val_images/val2017/000000569565.jpg  \n",
            " extracting: /content/val_images/val2017/000000056288.jpg  \n",
            " extracting: /content/val_images/val2017/000000244411.jpg  \n",
            " extracting: /content/val_images/val2017/000000056127.jpg  \n",
            " extracting: /content/val_images/val2017/000000147415.jpg  \n",
            " extracting: /content/val_images/val2017/000000522638.jpg  \n",
            " extracting: /content/val_images/val2017/000000405205.jpg  \n",
            " extracting: /content/val_images/val2017/000000311394.jpg  \n",
            " extracting: /content/val_images/val2017/000000475064.jpg  \n",
            " extracting: /content/val_images/val2017/000000061418.jpg  \n",
            " extracting: /content/val_images/val2017/000000134034.jpg  \n",
            " extracting: /content/val_images/val2017/000000335177.jpg  \n",
            " extracting: /content/val_images/val2017/000000571857.jpg  \n",
            " extracting: /content/val_images/val2017/000000468233.jpg  \n",
            " extracting: /content/val_images/val2017/000000192047.jpg  \n",
            " extracting: /content/val_images/val2017/000000559513.jpg  \n",
            " extracting: /content/val_images/val2017/000000534664.jpg  \n",
            " extracting: /content/val_images/val2017/000000545129.jpg  \n",
            " extracting: /content/val_images/val2017/000000434479.jpg  \n",
            " extracting: /content/val_images/val2017/000000179141.jpg  \n",
            " extracting: /content/val_images/val2017/000000316666.jpg  \n",
            " extracting: /content/val_images/val2017/000000013546.jpg  \n",
            " extracting: /content/val_images/val2017/000000156372.jpg  \n",
            " extracting: /content/val_images/val2017/000000384808.jpg  \n",
            " extracting: /content/val_images/val2017/000000243989.jpg  \n",
            " extracting: /content/val_images/val2017/000000521052.jpg  \n",
            " extracting: /content/val_images/val2017/000000290163.jpg  \n",
            " extracting: /content/val_images/val2017/000000002299.jpg  \n",
            " extracting: /content/val_images/val2017/000000223738.jpg  \n",
            " extracting: /content/val_images/val2017/000000140439.jpg  \n",
            " extracting: /content/val_images/val2017/000000364884.jpg  \n",
            " extracting: /content/val_images/val2017/000000499266.jpg  \n",
            " extracting: /content/val_images/val2017/000000113720.jpg  \n",
            " extracting: /content/val_images/val2017/000000085478.jpg  \n",
            " extracting: /content/val_images/val2017/000000510095.jpg  \n",
            " extracting: /content/val_images/val2017/000000155571.jpg  \n",
            " extracting: /content/val_images/val2017/000000512564.jpg  \n",
            " extracting: /content/val_images/val2017/000000332351.jpg  \n",
            " extracting: /content/val_images/val2017/000000511453.jpg  \n",
            " extracting: /content/val_images/val2017/000000415882.jpg  \n",
            " extracting: /content/val_images/val2017/000000088269.jpg  \n",
            " extracting: /content/val_images/val2017/000000365521.jpg  \n",
            " extracting: /content/val_images/val2017/000000071226.jpg  \n",
            " extracting: /content/val_images/val2017/000000234526.jpg  \n",
            " extracting: /content/val_images/val2017/000000413404.jpg  \n",
            " extracting: /content/val_images/val2017/000000415990.jpg  \n",
            " extracting: /content/val_images/val2017/000000107087.jpg  \n",
            " extracting: /content/val_images/val2017/000000139099.jpg  \n",
            " extracting: /content/val_images/val2017/000000540962.jpg  \n",
            " extracting: /content/val_images/val2017/000000275791.jpg  \n",
            " extracting: /content/val_images/val2017/000000257169.jpg  \n",
            " extracting: /content/val_images/val2017/000000546826.jpg  \n",
            " extracting: /content/val_images/val2017/000000147498.jpg  \n",
            " extracting: /content/val_images/val2017/000000493286.jpg  \n",
            " extracting: /content/val_images/val2017/000000085682.jpg  \n",
            " extracting: /content/val_images/val2017/000000412286.jpg  \n",
            " extracting: /content/val_images/val2017/000000463283.jpg  \n",
            " extracting: /content/val_images/val2017/000000368335.jpg  \n",
            " extracting: /content/val_images/val2017/000000337498.jpg  \n",
            " extracting: /content/val_images/val2017/000000227044.jpg  \n",
            " extracting: /content/val_images/val2017/000000051938.jpg  \n",
            " extracting: /content/val_images/val2017/000000028809.jpg  \n",
            " extracting: /content/val_images/val2017/000000170474.jpg  \n",
            " extracting: /content/val_images/val2017/000000279774.jpg  \n",
            " extracting: /content/val_images/val2017/000000383386.jpg  \n",
            " extracting: /content/val_images/val2017/000000363461.jpg  \n",
            " extracting: /content/val_images/val2017/000000432553.jpg  \n",
            " extracting: /content/val_images/val2017/000000332455.jpg  \n",
            " extracting: /content/val_images/val2017/000000281447.jpg  \n",
            " extracting: /content/val_images/val2017/000000217425.jpg  \n",
            " extracting: /content/val_images/val2017/000000291664.jpg  \n",
            " extracting: /content/val_images/val2017/000000050679.jpg  \n",
            " extracting: /content/val_images/val2017/000000137106.jpg  \n",
            " extracting: /content/val_images/val2017/000000249643.jpg  \n",
            " extracting: /content/val_images/val2017/000000322352.jpg  \n",
            " extracting: /content/val_images/val2017/000000345356.jpg  \n",
            " extracting: /content/val_images/val2017/000000480936.jpg  \n",
            " extracting: /content/val_images/val2017/000000225532.jpg  \n",
            " extracting: /content/val_images/val2017/000000226147.jpg  \n",
            " extracting: /content/val_images/val2017/000000445365.jpg  \n",
            " extracting: /content/val_images/val2017/000000125072.jpg  \n",
            " extracting: /content/val_images/val2017/000000023034.jpg  \n",
            " extracting: /content/val_images/val2017/000000558421.jpg  \n",
            " extracting: /content/val_images/val2017/000000328430.jpg  \n",
            " extracting: /content/val_images/val2017/000000524850.jpg  \n",
            " extracting: /content/val_images/val2017/000000467511.jpg  \n",
            " extracting: /content/val_images/val2017/000000088250.jpg  \n",
            " extracting: /content/val_images/val2017/000000188906.jpg  \n",
            " extracting: /content/val_images/val2017/000000259625.jpg  \n",
            " extracting: /content/val_images/val2017/000000127182.jpg  \n",
            " extracting: /content/val_images/val2017/000000422998.jpg  \n",
            " extracting: /content/val_images/val2017/000000076261.jpg  \n",
            " extracting: /content/val_images/val2017/000000448448.jpg  \n",
            " extracting: /content/val_images/val2017/000000212895.jpg  \n",
            " extracting: /content/val_images/val2017/000000534827.jpg  \n",
            " extracting: /content/val_images/val2017/000000312421.jpg  \n",
            " extracting: /content/val_images/val2017/000000371677.jpg  \n",
            " extracting: /content/val_images/val2017/000000541664.jpg  \n",
            " extracting: /content/val_images/val2017/000000416885.jpg  \n",
            " extracting: /content/val_images/val2017/000000446703.jpg  \n",
            " extracting: /content/val_images/val2017/000000103585.jpg  \n",
            " extracting: /content/val_images/val2017/000000572555.jpg  \n",
            " extracting: /content/val_images/val2017/000000177934.jpg  \n",
            " extracting: /content/val_images/val2017/000000026465.jpg  \n",
            " extracting: /content/val_images/val2017/000000563702.jpg  \n",
            " extracting: /content/val_images/val2017/000000376442.jpg  \n",
            " extracting: /content/val_images/val2017/000000163057.jpg  \n",
            " extracting: /content/val_images/val2017/000000117374.jpg  \n",
            " extracting: /content/val_images/val2017/000000477623.jpg  \n",
            " extracting: /content/val_images/val2017/000000086220.jpg  \n",
            " extracting: /content/val_images/val2017/000000006771.jpg  \n",
            " extracting: /content/val_images/val2017/000000052891.jpg  \n",
            " extracting: /content/val_images/val2017/000000453584.jpg  \n",
            " extracting: /content/val_images/val2017/000000286849.jpg  \n",
            " extracting: /content/val_images/val2017/000000165351.jpg  \n",
            " extracting: /content/val_images/val2017/000000567011.jpg  \n",
            " extracting: /content/val_images/val2017/000000203629.jpg  \n",
            " extracting: /content/val_images/val2017/000000154000.jpg  \n",
            " extracting: /content/val_images/val2017/000000121153.jpg  \n",
            " extracting: /content/val_images/val2017/000000043737.jpg  \n",
            " extracting: /content/val_images/val2017/000000202445.jpg  \n",
            " extracting: /content/val_images/val2017/000000499313.jpg  \n",
            " extracting: /content/val_images/val2017/000000084170.jpg  \n",
            " extracting: /content/val_images/val2017/000000186345.jpg  \n",
            " extracting: /content/val_images/val2017/000000272364.jpg  \n",
            " extracting: /content/val_images/val2017/000000364557.jpg  \n",
            " extracting: /content/val_images/val2017/000000010995.jpg  \n",
            " extracting: /content/val_images/val2017/000000115885.jpg  \n",
            " extracting: /content/val_images/val2017/000000011760.jpg  \n",
            " extracting: /content/val_images/val2017/000000235064.jpg  \n",
            " extracting: /content/val_images/val2017/000000391144.jpg  \n",
            " extracting: /content/val_images/val2017/000000206579.jpg  \n",
            " extracting: /content/val_images/val2017/000000098018.jpg  \n",
            " extracting: /content/val_images/val2017/000000365207.jpg  \n",
            " extracting: /content/val_images/val2017/000000140270.jpg  \n",
            " extracting: /content/val_images/val2017/000000301563.jpg  \n",
            " extracting: /content/val_images/val2017/000000439854.jpg  \n",
            " extracting: /content/val_images/val2017/000000325114.jpg  \n",
            " extracting: /content/val_images/val2017/000000016228.jpg  \n",
            " extracting: /content/val_images/val2017/000000461751.jpg  \n",
            " extracting: /content/val_images/val2017/000000192607.jpg  \n",
            " extracting: /content/val_images/val2017/000000182923.jpg  \n",
            " extracting: /content/val_images/val2017/000000111036.jpg  \n",
            " extracting: /content/val_images/val2017/000000127517.jpg  \n",
            " extracting: /content/val_images/val2017/000000076416.jpg  \n",
            " extracting: /content/val_images/val2017/000000289516.jpg  \n",
            " extracting: /content/val_images/val2017/000000179898.jpg  \n",
            " extracting: /content/val_images/val2017/000000542127.jpg  \n",
            " extracting: /content/val_images/val2017/000000495732.jpg  \n",
            " extracting: /content/val_images/val2017/000000123480.jpg  \n",
            " extracting: /content/val_images/val2017/000000092660.jpg  \n",
            " extracting: /content/val_images/val2017/000000144706.jpg  \n",
            " extracting: /content/val_images/val2017/000000333772.jpg  \n",
            " extracting: /content/val_images/val2017/000000060823.jpg  \n",
            " extracting: /content/val_images/val2017/000000161397.jpg  \n",
            " extracting: /content/val_images/val2017/000000175438.jpg  \n",
            " extracting: /content/val_images/val2017/000000241602.jpg  \n",
            " extracting: /content/val_images/val2017/000000315257.jpg  \n",
            " extracting: /content/val_images/val2017/000000235836.jpg  \n",
            " extracting: /content/val_images/val2017/000000387098.jpg  \n",
            " extracting: /content/val_images/val2017/000000398742.jpg  \n",
            " extracting: /content/val_images/val2017/000000248616.jpg  \n",
            " extracting: /content/val_images/val2017/000000456559.jpg  \n",
            " extracting: /content/val_images/val2017/000000357888.jpg  \n",
            " extracting: /content/val_images/val2017/000000392228.jpg  \n",
            " extracting: /content/val_images/val2017/000000512330.jpg  \n",
            " extracting: /content/val_images/val2017/000000548506.jpg  \n",
            " extracting: /content/val_images/val2017/000000472298.jpg  \n",
            " extracting: /content/val_images/val2017/000000087875.jpg  \n",
            " extracting: /content/val_images/val2017/000000514508.jpg  \n",
            " extracting: /content/val_images/val2017/000000051976.jpg  \n",
            " extracting: /content/val_images/val2017/000000163118.jpg  \n",
            " extracting: /content/val_images/val2017/000000037777.jpg  \n",
            " extracting: /content/val_images/val2017/000000235057.jpg  \n",
            " extracting: /content/val_images/val2017/000000492937.jpg  \n",
            " extracting: /content/val_images/val2017/000000546556.jpg  \n",
            " extracting: /content/val_images/val2017/000000383337.jpg  \n",
            " extracting: /content/val_images/val2017/000000110638.jpg  \n",
            " extracting: /content/val_images/val2017/000000180798.jpg  \n",
            " extracting: /content/val_images/val2017/000000297022.jpg  \n",
            " extracting: /content/val_images/val2017/000000250758.jpg  \n",
            " extracting: /content/val_images/val2017/000000579970.jpg  \n",
            " extracting: /content/val_images/val2017/000000523241.jpg  \n",
            " extracting: /content/val_images/val2017/000000581062.jpg  \n",
            " extracting: /content/val_images/val2017/000000157365.jpg  \n",
            " extracting: /content/val_images/val2017/000000374052.jpg  \n",
            " extracting: /content/val_images/val2017/000000390246.jpg  \n",
            " extracting: /content/val_images/val2017/000000193743.jpg  \n",
            " extracting: /content/val_images/val2017/000000203294.jpg  \n",
            " extracting: /content/val_images/val2017/000000492077.jpg  \n",
            " extracting: /content/val_images/val2017/000000199551.jpg  \n",
            " extracting: /content/val_images/val2017/000000033368.jpg  \n",
            " extracting: /content/val_images/val2017/000000164885.jpg  \n",
            " extracting: /content/val_images/val2017/000000249219.jpg  \n",
            " extracting: /content/val_images/val2017/000000092939.jpg  \n",
            " extracting: /content/val_images/val2017/000000382125.jpg  \n",
            " extracting: /content/val_images/val2017/000000088432.jpg  \n",
            " extracting: /content/val_images/val2017/000000333956.jpg  \n",
            " extracting: /content/val_images/val2017/000000567197.jpg  \n",
            " extracting: /content/val_images/val2017/000000102356.jpg  \n",
            " extracting: /content/val_images/val2017/000000274460.jpg  \n",
            " extracting: /content/val_images/val2017/000000459662.jpg  \n",
            " extracting: /content/val_images/val2017/000000447342.jpg  \n",
            " extracting: /content/val_images/val2017/000000173004.jpg  \n",
            " extracting: /content/val_images/val2017/000000505169.jpg  \n",
            " extracting: /content/val_images/val2017/000000059635.jpg  \n",
            " extracting: /content/val_images/val2017/000000050331.jpg  \n",
            " extracting: /content/val_images/val2017/000000232684.jpg  \n",
            " extracting: /content/val_images/val2017/000000454978.jpg  \n",
            " extracting: /content/val_images/val2017/000000292005.jpg  \n",
            " extracting: /content/val_images/val2017/000000165518.jpg  \n",
            " extracting: /content/val_images/val2017/000000019042.jpg  \n",
            " extracting: /content/val_images/val2017/000000174123.jpg  \n",
            " extracting: /content/val_images/val2017/000000507893.jpg  \n",
            " extracting: /content/val_images/val2017/000000025393.jpg  \n",
            " extracting: /content/val_images/val2017/000000331352.jpg  \n",
            " extracting: /content/val_images/val2017/000000109992.jpg  \n",
            " extracting: /content/val_images/val2017/000000180751.jpg  \n",
            " extracting: /content/val_images/val2017/000000097230.jpg  \n",
            " extracting: /content/val_images/val2017/000000459887.jpg  \n",
            " extracting: /content/val_images/val2017/000000404601.jpg  \n",
            " extracting: /content/val_images/val2017/000000300233.jpg  \n",
            " extracting: /content/val_images/val2017/000000359219.jpg  \n",
            " extracting: /content/val_images/val2017/000000310622.jpg  \n",
            " extracting: /content/val_images/val2017/000000557672.jpg  \n",
            " extracting: /content/val_images/val2017/000000293794.jpg  \n",
            " extracting: /content/val_images/val2017/000000153797.jpg  \n",
            " extracting: /content/val_images/val2017/000000320232.jpg  \n",
            " extracting: /content/val_images/val2017/000000237984.jpg  \n",
            " extracting: /content/val_images/val2017/000000170955.jpg  \n",
            " extracting: /content/val_images/val2017/000000348881.jpg  \n",
            " extracting: /content/val_images/val2017/000000129062.jpg  \n",
            " extracting: /content/val_images/val2017/000000547816.jpg  \n",
            " extracting: /content/val_images/val2017/000000551822.jpg  \n",
            " extracting: /content/val_images/val2017/000000251065.jpg  \n",
            " extracting: /content/val_images/val2017/000000398237.jpg  \n",
            " extracting: /content/val_images/val2017/000000181969.jpg  \n",
            " extracting: /content/val_images/val2017/000000455301.jpg  \n",
            " extracting: /content/val_images/val2017/000000051309.jpg  \n",
            " extracting: /content/val_images/val2017/000000411938.jpg  \n",
            " extracting: /content/val_images/val2017/000000050844.jpg  \n",
            " extracting: /content/val_images/val2017/000000054967.jpg  \n",
            " extracting: /content/val_images/val2017/000000112997.jpg  \n",
            " extracting: /content/val_images/val2017/000000206994.jpg  \n",
            " extracting: /content/val_images/val2017/000000259854.jpg  \n",
            " extracting: /content/val_images/val2017/000000068093.jpg  \n",
            " extracting: /content/val_images/val2017/000000465180.jpg  \n",
            " extracting: /content/val_images/val2017/000000006213.jpg  \n",
            " extracting: /content/val_images/val2017/000000292330.jpg  \n",
            " extracting: /content/val_images/val2017/000000267434.jpg  \n",
            " extracting: /content/val_images/val2017/000000428867.jpg  \n",
            " extracting: /content/val_images/val2017/000000239347.jpg  \n",
            " extracting: /content/val_images/val2017/000000365642.jpg  \n",
            " extracting: /content/val_images/val2017/000000155451.jpg  \n",
            " extracting: /content/val_images/val2017/000000568290.jpg  \n",
            " extracting: /content/val_images/val2017/000000062554.jpg  \n",
            " extracting: /content/val_images/val2017/000000057597.jpg  \n",
            " extracting: /content/val_images/val2017/000000178469.jpg  \n",
            " extracting: /content/val_images/val2017/000000357238.jpg  \n",
            " extracting: /content/val_images/val2017/000000263966.jpg  \n",
            " extracting: /content/val_images/val2017/000000044260.jpg  \n",
            " extracting: /content/val_images/val2017/000000168974.jpg  \n",
            " extracting: /content/val_images/val2017/000000281179.jpg  \n",
            " extracting: /content/val_images/val2017/000000414673.jpg  \n",
            " extracting: /content/val_images/val2017/000000124975.jpg  \n",
            " extracting: /content/val_images/val2017/000000491470.jpg  \n",
            " extracting: /content/val_images/val2017/000000450439.jpg  \n",
            " extracting: /content/val_images/val2017/000000100723.jpg  \n",
            " extracting: /content/val_images/val2017/000000034071.jpg  \n",
            " extracting: /content/val_images/val2017/000000368684.jpg  \n",
            " extracting: /content/val_images/val2017/000000329041.jpg  \n",
            " extracting: /content/val_images/val2017/000000116068.jpg  \n",
            " extracting: /content/val_images/val2017/000000031093.jpg  \n",
            " extracting: /content/val_images/val2017/000000581317.jpg  \n",
            " extracting: /content/val_images/val2017/000000360960.jpg  \n",
            " extracting: /content/val_images/val2017/000000068286.jpg  \n",
            " extracting: /content/val_images/val2017/000000179285.jpg  \n",
            " extracting: /content/val_images/val2017/000000442480.jpg  \n",
            " extracting: /content/val_images/val2017/000000130599.jpg  \n",
            " extracting: /content/val_images/val2017/000000378244.jpg  \n",
            " extracting: /content/val_images/val2017/000000262227.jpg  \n",
            " extracting: /content/val_images/val2017/000000523229.jpg  \n",
            " extracting: /content/val_images/val2017/000000042276.jpg  \n",
            " extracting: /content/val_images/val2017/000000115118.jpg  \n",
            " extracting: /content/val_images/val2017/000000490470.jpg  \n",
            " extracting: /content/val_images/val2017/000000242287.jpg  \n",
            " extracting: /content/val_images/val2017/000000136772.jpg  \n",
            " extracting: /content/val_images/val2017/000000035682.jpg  \n",
            " extracting: /content/val_images/val2017/000000464251.jpg  \n",
            " extracting: /content/val_images/val2017/000000291791.jpg  \n",
            " extracting: /content/val_images/val2017/000000481159.jpg  \n",
            " extracting: /content/val_images/val2017/000000178028.jpg  \n",
            " extracting: /content/val_images/val2017/000000215245.jpg  \n",
            " extracting: /content/val_images/val2017/000000297578.jpg  \n",
            " extracting: /content/val_images/val2017/000000198928.jpg  \n",
            " extracting: /content/val_images/val2017/000000209972.jpg  \n",
            " extracting: /content/val_images/val2017/000000090956.jpg  \n",
            " extracting: /content/val_images/val2017/000000171788.jpg  \n",
            " extracting: /content/val_images/val2017/000000035770.jpg  \n",
            " extracting: /content/val_images/val2017/000000336658.jpg  \n",
            " extracting: /content/val_images/val2017/000000010092.jpg  \n",
            " extracting: /content/val_images/val2017/000000008899.jpg  \n",
            " extracting: /content/val_images/val2017/000000237316.jpg  \n",
            " extracting: /content/val_images/val2017/000000114770.jpg  \n",
            " extracting: /content/val_images/val2017/000000331799.jpg  \n",
            " extracting: /content/val_images/val2017/000000366141.jpg  \n",
            " extracting: /content/val_images/val2017/000000560178.jpg  \n",
            " extracting: /content/val_images/val2017/000000244099.jpg  \n",
            " extracting: /content/val_images/val2017/000000194940.jpg  \n",
            " extracting: /content/val_images/val2017/000000249180.jpg  \n",
            " extracting: /content/val_images/val2017/000000274272.jpg  \n",
            " extracting: /content/val_images/val2017/000000085823.jpg  \n",
            " extracting: /content/val_images/val2017/000000473406.jpg  \n",
            " extracting: /content/val_images/val2017/000000101787.jpg  \n",
            " extracting: /content/val_images/val2017/000000106389.jpg  \n",
            " extracting: /content/val_images/val2017/000000447314.jpg  \n",
            " extracting: /content/val_images/val2017/000000303713.jpg  \n",
            " extracting: /content/val_images/val2017/000000117525.jpg  \n",
            " extracting: /content/val_images/val2017/000000492905.jpg  \n",
            " extracting: /content/val_images/val2017/000000311950.jpg  \n",
            " extracting: /content/val_images/val2017/000000227511.jpg  \n",
            " extracting: /content/val_images/val2017/000000032811.jpg  \n",
            " extracting: /content/val_images/val2017/000000209530.jpg  \n",
            " extracting: /content/val_images/val2017/000000170670.jpg  \n",
            " extracting: /content/val_images/val2017/000000022892.jpg  \n",
            " extracting: /content/val_images/val2017/000000398905.jpg  \n",
            " extracting: /content/val_images/val2017/000000074457.jpg  \n",
            " extracting: /content/val_images/val2017/000000050828.jpg  \n",
            " extracting: /content/val_images/val2017/000000224664.jpg  \n",
            " extracting: /content/val_images/val2017/000000530624.jpg  \n",
            " extracting: /content/val_images/val2017/000000006460.jpg  \n",
            " extracting: /content/val_images/val2017/000000189078.jpg  \n",
            " extracting: /content/val_images/val2017/000000408112.jpg  \n",
            " extracting: /content/val_images/val2017/000000258911.jpg  \n",
            " extracting: /content/val_images/val2017/000000572303.jpg  \n",
            " extracting: /content/val_images/val2017/000000389684.jpg  \n",
            " extracting: /content/val_images/val2017/000000161861.jpg  \n",
            " extracting: /content/val_images/val2017/000000024243.jpg  \n",
            " extracting: /content/val_images/val2017/000000125572.jpg  \n",
            " extracting: /content/val_images/val2017/000000213033.jpg  \n",
            " extracting: /content/val_images/val2017/000000130826.jpg  \n",
            " extracting: /content/val_images/val2017/000000457262.jpg  \n",
            " extracting: /content/val_images/val2017/000000372317.jpg  \n",
            " extracting: /content/val_images/val2017/000000252294.jpg  \n",
            " extracting: /content/val_images/val2017/000000031322.jpg  \n",
            " extracting: /content/val_images/val2017/000000506933.jpg  \n",
            " extracting: /content/val_images/val2017/000000276018.jpg  \n",
            " extracting: /content/val_images/val2017/000000563603.jpg  \n",
            " extracting: /content/val_images/val2017/000000108864.jpg  \n",
            " extracting: /content/val_images/val2017/000000273232.jpg  \n",
            " extracting: /content/val_images/val2017/000000253452.jpg  \n",
            " extracting: /content/val_images/val2017/000000201775.jpg  \n",
            " extracting: /content/val_images/val2017/000000351589.jpg  \n",
            " extracting: /content/val_images/val2017/000000018519.jpg  \n",
            " extracting: /content/val_images/val2017/000000399296.jpg  \n",
            " extracting: /content/val_images/val2017/000000002473.jpg  \n",
            " extracting: /content/val_images/val2017/000000160772.jpg  \n",
            " extracting: /content/val_images/val2017/000000054593.jpg  \n",
            " extracting: /content/val_images/val2017/000000127270.jpg  \n",
            " extracting: /content/val_images/val2017/000000303566.jpg  \n",
            " extracting: /content/val_images/val2017/000000354547.jpg  \n",
            " extracting: /content/val_images/val2017/000000405432.jpg  \n",
            " extracting: /content/val_images/val2017/000000548267.jpg  \n",
            " extracting: /content/val_images/val2017/000000091654.jpg  \n",
            " extracting: /content/val_images/val2017/000000138639.jpg  \n",
            " extracting: /content/val_images/val2017/000000501368.jpg  \n",
            " extracting: /content/val_images/val2017/000000458255.jpg  \n",
            " extracting: /content/val_images/val2017/000000050006.jpg  \n",
            " extracting: /content/val_images/val2017/000000564127.jpg  \n",
            " extracting: /content/val_images/val2017/000000109976.jpg  \n",
            " extracting: /content/val_images/val2017/000000246963.jpg  \n",
            " extracting: /content/val_images/val2017/000000098839.jpg  \n",
            " extracting: /content/val_images/val2017/000000475779.jpg  \n",
            " extracting: /content/val_images/val2017/000000287959.jpg  \n",
            " extracting: /content/val_images/val2017/000000429761.jpg  \n",
            " extracting: /content/val_images/val2017/000000130699.jpg  \n",
            " extracting: /content/val_images/val2017/000000188439.jpg  \n",
            " extracting: /content/val_images/val2017/000000507235.jpg  \n",
            " extracting: /content/val_images/val2017/000000561256.jpg  \n",
            " extracting: /content/val_images/val2017/000000216296.jpg  \n",
            " extracting: /content/val_images/val2017/000000445439.jpg  \n",
            " extracting: /content/val_images/val2017/000000344621.jpg  \n",
            " extracting: /content/val_images/val2017/000000504439.jpg  \n",
            " extracting: /content/val_images/val2017/000000143961.jpg  \n",
            " extracting: /content/val_images/val2017/000000032570.jpg  \n",
            " extracting: /content/val_images/val2017/000000462756.jpg  \n",
            " extracting: /content/val_images/val2017/000000575372.jpg  \n",
            " extracting: /content/val_images/val2017/000000154947.jpg  \n",
            " extracting: /content/val_images/val2017/000000462629.jpg  \n",
            " extracting: /content/val_images/val2017/000000157807.jpg  \n",
            " extracting: /content/val_images/val2017/000000417632.jpg  \n",
            " extracting: /content/val_images/val2017/000000374083.jpg  \n",
            " extracting: /content/val_images/val2017/000000209753.jpg  \n",
            " extracting: /content/val_images/val2017/000000133000.jpg  \n",
            " extracting: /content/val_images/val2017/000000144932.jpg  \n",
            " extracting: /content/val_images/val2017/000000145597.jpg  \n",
            " extracting: /content/val_images/val2017/000000528314.jpg  \n",
            " extracting: /content/val_images/val2017/000000481480.jpg  \n",
            " extracting: /content/val_images/val2017/000000525286.jpg  \n",
            " extracting: /content/val_images/val2017/000000038210.jpg  \n",
            " extracting: /content/val_images/val2017/000000306893.jpg  \n",
            " extracting: /content/val_images/val2017/000000046497.jpg  \n",
            " extracting: /content/val_images/val2017/000000488075.jpg  \n",
            " extracting: /content/val_images/val2017/000000438907.jpg  \n",
            " extracting: /content/val_images/val2017/000000312586.jpg  \n",
            " extracting: /content/val_images/val2017/000000471087.jpg  \n",
            " extracting: /content/val_images/val2017/000000364322.jpg  \n",
            " extracting: /content/val_images/val2017/000000252559.jpg  \n",
            " extracting: /content/val_images/val2017/000000475732.jpg  \n",
            " extracting: /content/val_images/val2017/000000350405.jpg  \n",
            " extracting: /content/val_images/val2017/000000200421.jpg  \n",
            " extracting: /content/val_images/val2017/000000304180.jpg  \n",
            " extracting: /content/val_images/val2017/000000200961.jpg  \n",
            " extracting: /content/val_images/val2017/000000177015.jpg  \n",
            " extracting: /content/val_images/val2017/000000412887.jpg  \n",
            " extracting: /content/val_images/val2017/000000265108.jpg  \n",
            " extracting: /content/val_images/val2017/000000533145.jpg  \n",
            " extracting: /content/val_images/val2017/000000356432.jpg  \n",
            " extracting: /content/val_images/val2017/000000491464.jpg  \n",
            " extracting: /content/val_images/val2017/000000521956.jpg  \n",
            " extracting: /content/val_images/val2017/000000219440.jpg  \n",
            " extracting: /content/val_images/val2017/000000357816.jpg  \n",
            " extracting: /content/val_images/val2017/000000066635.jpg  \n",
            " extracting: /content/val_images/val2017/000000181499.jpg  \n",
            " extracting: /content/val_images/val2017/000000275058.jpg  \n",
            " extracting: /content/val_images/val2017/000000020553.jpg  \n",
            " extracting: /content/val_images/val2017/000000440617.jpg  \n",
            " extracting: /content/val_images/val2017/000000085195.jpg  \n",
            " extracting: /content/val_images/val2017/000000104455.jpg  \n",
            " extracting: /content/val_images/val2017/000000257566.jpg  \n",
            " extracting: /content/val_images/val2017/000000547886.jpg  \n",
            " extracting: /content/val_images/val2017/000000512836.jpg  \n",
            " extracting: /content/val_images/val2017/000000074092.jpg  \n",
            " extracting: /content/val_images/val2017/000000233370.jpg  \n",
            " extracting: /content/val_images/val2017/000000370711.jpg  \n",
            " extracting: /content/val_images/val2017/000000003156.jpg  \n",
            " extracting: /content/val_images/val2017/000000243867.jpg  \n",
            " extracting: /content/val_images/val2017/000000231747.jpg  \n",
            " extracting: /content/val_images/val2017/000000020992.jpg  \n",
            " extracting: /content/val_images/val2017/000000159458.jpg  \n",
            " extracting: /content/val_images/val2017/000000025593.jpg  \n",
            " extracting: /content/val_images/val2017/000000231097.jpg  \n",
            " extracting: /content/val_images/val2017/000000106881.jpg  \n",
            " extracting: /content/val_images/val2017/000000326248.jpg  \n",
            " extracting: /content/val_images/val2017/000000354072.jpg  \n",
            " extracting: /content/val_images/val2017/000000474028.jpg  \n",
            " extracting: /content/val_images/val2017/000000122969.jpg  \n",
            " extracting: /content/val_images/val2017/000000167353.jpg  \n",
            " extracting: /content/val_images/val2017/000000122962.jpg  \n",
            " extracting: /content/val_images/val2017/000000086483.jpg  \n",
            " extracting: /content/val_images/val2017/000000541291.jpg  \n",
            " extracting: /content/val_images/val2017/000000155341.jpg  \n",
            " extracting: /content/val_images/val2017/000000360325.jpg  \n",
            " extracting: /content/val_images/val2017/000000172396.jpg  \n",
            " extracting: /content/val_images/val2017/000000192716.jpg  \n",
            " extracting: /content/val_images/val2017/000000291551.jpg  \n",
            " extracting: /content/val_images/val2017/000000189475.jpg  \n",
            " extracting: /content/val_images/val2017/000000254016.jpg  \n",
            " extracting: /content/val_images/val2017/000000335427.jpg  \n",
            " extracting: /content/val_images/val2017/000000120777.jpg  \n",
            " extracting: /content/val_images/val2017/000000375430.jpg  \n",
            " extracting: /content/val_images/val2017/000000502599.jpg  \n",
            " extracting: /content/val_images/val2017/000000394559.jpg  \n",
            " extracting: /content/val_images/val2017/000000500423.jpg  \n",
            " extracting: /content/val_images/val2017/000000059386.jpg  \n",
            " extracting: /content/val_images/val2017/000000269316.jpg  \n",
            " extracting: /content/val_images/val2017/000000273198.jpg  \n",
            " extracting: /content/val_images/val2017/000000104782.jpg  \n",
            " extracting: /content/val_images/val2017/000000052591.jpg  \n",
            " extracting: /content/val_images/val2017/000000444879.jpg  \n",
            " extracting: /content/val_images/val2017/000000482477.jpg  \n",
            " extracting: /content/val_images/val2017/000000254814.jpg  \n",
            " extracting: /content/val_images/val2017/000000185473.jpg  \n",
            " extracting: /content/val_images/val2017/000000132544.jpg  \n",
            " extracting: /content/val_images/val2017/000000540502.jpg  \n",
            " extracting: /content/val_images/val2017/000000370677.jpg  \n",
            " extracting: /content/val_images/val2017/000000229948.jpg  \n",
            " extracting: /content/val_images/val2017/000000293625.jpg  \n",
            " extracting: /content/val_images/val2017/000000320642.jpg  \n",
            " extracting: /content/val_images/val2017/000000007977.jpg  \n",
            " extracting: /content/val_images/val2017/000000570782.jpg  \n",
            " extracting: /content/val_images/val2017/000000577862.jpg  \n",
            " extracting: /content/val_images/val2017/000000052462.jpg  \n",
            " extracting: /content/val_images/val2017/000000203580.jpg  \n",
            " extracting: /content/val_images/val2017/000000180487.jpg  \n",
            " extracting: /content/val_images/val2017/000000394510.jpg  \n",
            " extracting: /content/val_images/val2017/000000285894.jpg  \n",
            " extracting: /content/val_images/val2017/000000504589.jpg  \n",
            " extracting: /content/val_images/val2017/000000384468.jpg  \n",
            " extracting: /content/val_images/val2017/000000472046.jpg  \n",
            " extracting: /content/val_images/val2017/000000491683.jpg  \n",
            " extracting: /content/val_images/val2017/000000550322.jpg  \n",
            " extracting: /content/val_images/val2017/000000430961.jpg  \n",
            " extracting: /content/val_images/val2017/000000527750.jpg  \n",
            " extracting: /content/val_images/val2017/000000387387.jpg  \n",
            " extracting: /content/val_images/val2017/000000424521.jpg  \n",
            " extracting: /content/val_images/val2017/000000288862.jpg  \n",
            " extracting: /content/val_images/val2017/000000074256.jpg  \n",
            " extracting: /content/val_images/val2017/000000181816.jpg  \n",
            " extracting: /content/val_images/val2017/000000158945.jpg  \n",
            " extracting: /content/val_images/val2017/000000284698.jpg  \n",
            " extracting: /content/val_images/val2017/000000396205.jpg  \n",
            " extracting: /content/val_images/val2017/000000341921.jpg  \n",
            " extracting: /content/val_images/val2017/000000426166.jpg  \n",
            " extracting: /content/val_images/val2017/000000057672.jpg  \n",
            " extracting: /content/val_images/val2017/000000140203.jpg  \n",
            " extracting: /content/val_images/val2017/000000185292.jpg  \n",
            " extracting: /content/val_images/val2017/000000322968.jpg  \n",
            " extracting: /content/val_images/val2017/000000381587.jpg  \n",
            " extracting: /content/val_images/val2017/000000034205.jpg  \n",
            " extracting: /content/val_images/val2017/000000279278.jpg  \n",
            " extracting: /content/val_images/val2017/000000572900.jpg  \n",
            " extracting: /content/val_images/val2017/000000396863.jpg  \n",
            " extracting: /content/val_images/val2017/000000458223.jpg  \n",
            " extracting: /content/val_images/val2017/000000127624.jpg  \n",
            " extracting: /content/val_images/val2017/000000573626.jpg  \n",
            " extracting: /content/val_images/val2017/000000500663.jpg  \n",
            " extracting: /content/val_images/val2017/000000121591.jpg  \n",
            " extracting: /content/val_images/val2017/000000068933.jpg  \n",
            " extracting: /content/val_images/val2017/000000386352.jpg  \n",
            " extracting: /content/val_images/val2017/000000181796.jpg  \n",
            " extracting: /content/val_images/val2017/000000329542.jpg  \n",
            " extracting: /content/val_images/val2017/000000145020.jpg  \n",
            " extracting: /content/val_images/val2017/000000069224.jpg  \n",
            " extracting: /content/val_images/val2017/000000354307.jpg  \n",
            " extracting: /content/val_images/val2017/000000178982.jpg  \n",
            " extracting: /content/val_images/val2017/000000517523.jpg  \n",
            " extracting: /content/val_images/val2017/000000255165.jpg  \n",
            " extracting: /content/val_images/val2017/000000281687.jpg  \n",
            " extracting: /content/val_images/val2017/000000349184.jpg  \n",
            " extracting: /content/val_images/val2017/000000012576.jpg  \n",
            " extracting: /content/val_images/val2017/000000242411.jpg  \n",
            " extracting: /content/val_images/val2017/000000566042.jpg  \n",
            " extracting: /content/val_images/val2017/000000398810.jpg  \n",
            " extracting: /content/val_images/val2017/000000432898.jpg  \n",
            " extracting: /content/val_images/val2017/000000295797.jpg  \n",
            " extracting: /content/val_images/val2017/000000180011.jpg  \n",
            " extracting: /content/val_images/val2017/000000175443.jpg  \n",
            " extracting: /content/val_images/val2017/000000311303.jpg  \n",
            " extracting: /content/val_images/val2017/000000179653.jpg  \n",
            " extracting: /content/val_images/val2017/000000079588.jpg  \n",
            " extracting: /content/val_images/val2017/000000267351.jpg  \n",
            " extracting: /content/val_images/val2017/000000042889.jpg  \n",
            " extracting: /content/val_images/val2017/000000479912.jpg  \n",
            " extracting: /content/val_images/val2017/000000563882.jpg  \n",
            " extracting: /content/val_images/val2017/000000023899.jpg  \n",
            " extracting: /content/val_images/val2017/000000064718.jpg  \n",
            " extracting: /content/val_images/val2017/000000509014.jpg  \n",
            " extracting: /content/val_images/val2017/000000156076.jpg  \n",
            " extracting: /content/val_images/val2017/000000579321.jpg  \n",
            " extracting: /content/val_images/val2017/000000471450.jpg  \n",
            " extracting: /content/val_images/val2017/000000169169.jpg  \n",
            " extracting: /content/val_images/val2017/000000422706.jpg  \n",
            " extracting: /content/val_images/val2017/000000183391.jpg  \n",
            " extracting: /content/val_images/val2017/000000008690.jpg  \n",
            " extracting: /content/val_images/val2017/000000361919.jpg  \n",
            " extracting: /content/val_images/val2017/000000421757.jpg  \n",
            " extracting: /content/val_images/val2017/000000369503.jpg  \n",
            " extracting: /content/val_images/val2017/000000201148.jpg  \n",
            " extracting: /content/val_images/val2017/000000250205.jpg  \n",
            " extracting: /content/val_images/val2017/000000327592.jpg  \n",
            " extracting: /content/val_images/val2017/000000464476.jpg  \n",
            " extracting: /content/val_images/val2017/000000238866.jpg  \n",
            " extracting: /content/val_images/val2017/000000048153.jpg  \n",
            " extracting: /content/val_images/val2017/000000151662.jpg  \n",
            " extracting: /content/val_images/val2017/000000060770.jpg  \n",
            " extracting: /content/val_images/val2017/000000383921.jpg  \n",
            " extracting: /content/val_images/val2017/000000046252.jpg  \n",
            " extracting: /content/val_images/val2017/000000439522.jpg  \n",
            " extracting: /content/val_images/val2017/000000152120.jpg  \n",
            " extracting: /content/val_images/val2017/000000179265.jpg  \n",
            " extracting: /content/val_images/val2017/000000058393.jpg  \n",
            " extracting: /content/val_images/val2017/000000559348.jpg  \n",
            " extracting: /content/val_images/val2017/000000029397.jpg  \n",
            " extracting: /content/val_images/val2017/000000205542.jpg  \n",
            " extracting: /content/val_images/val2017/000000540280.jpg  \n",
            " extracting: /content/val_images/val2017/000000368752.jpg  \n",
            " extracting: /content/val_images/val2017/000000368940.jpg  \n",
            " extracting: /content/val_images/val2017/000000423506.jpg  \n",
            " extracting: /content/val_images/val2017/000000312263.jpg  \n",
            " extracting: /content/val_images/val2017/000000397279.jpg  \n",
            " extracting: /content/val_images/val2017/000000015956.jpg  \n",
            " extracting: /content/val_images/val2017/000000333402.jpg  \n",
            " extracting: /content/val_images/val2017/000000308391.jpg  \n",
            " extracting: /content/val_images/val2017/000000311295.jpg  \n",
            " extracting: /content/val_images/val2017/000000340272.jpg  \n",
            " extracting: /content/val_images/val2017/000000344268.jpg  \n",
            " extracting: /content/val_images/val2017/000000258388.jpg  \n",
            " extracting: /content/val_images/val2017/000000418281.jpg  \n",
            " extracting: /content/val_images/val2017/000000248314.jpg  \n",
            " extracting: /content/val_images/val2017/000000280710.jpg  \n",
            " extracting: /content/val_images/val2017/000000001761.jpg  \n",
            " extracting: /content/val_images/val2017/000000064084.jpg  \n",
            " extracting: /content/val_images/val2017/000000474167.jpg  \n",
            " extracting: /content/val_images/val2017/000000319184.jpg  \n",
            " extracting: /content/val_images/val2017/000000482719.jpg  \n",
            " extracting: /content/val_images/val2017/000000498032.jpg  \n",
            " extracting: /content/val_images/val2017/000000210520.jpg  \n",
            " extracting: /content/val_images/val2017/000000343937.jpg  \n",
            " extracting: /content/val_images/val2017/000000230819.jpg  \n",
            " extracting: /content/val_images/val2017/000000484760.jpg  \n",
            " extracting: /content/val_images/val2017/000000488385.jpg  \n",
            " extracting: /content/val_images/val2017/000000292415.jpg  \n",
            " extracting: /content/val_images/val2017/000000124659.jpg  \n",
            " extracting: /content/val_images/val2017/000000259597.jpg  \n",
            " extracting: /content/val_images/val2017/000000270883.jpg  \n",
            " extracting: /content/val_images/val2017/000000297698.jpg  \n",
            " extracting: /content/val_images/val2017/000000494869.jpg  \n",
            " extracting: /content/val_images/val2017/000000336628.jpg  \n",
            " extracting: /content/val_images/val2017/000000417911.jpg  \n",
            " extracting: /content/val_images/val2017/000000536343.jpg  \n",
            " extracting: /content/val_images/val2017/000000443844.jpg  \n",
            " extracting: /content/val_images/val2017/000000460841.jpg  \n",
            " extracting: /content/val_images/val2017/000000528977.jpg  \n",
            " extracting: /content/val_images/val2017/000000558114.jpg  \n",
            " extracting: /content/val_images/val2017/000000199310.jpg  \n",
            " extracting: /content/val_images/val2017/000000050811.jpg  \n",
            " extracting: /content/val_images/val2017/000000507797.jpg  \n",
            " extracting: /content/val_images/val2017/000000282298.jpg  \n",
            " extracting: /content/val_images/val2017/000000430973.jpg  \n",
            " extracting: /content/val_images/val2017/000000070229.jpg  \n",
            " extracting: /content/val_images/val2017/000000119677.jpg  \n",
            " extracting: /content/val_images/val2017/000000498919.jpg  \n",
            " extracting: /content/val_images/val2017/000000142324.jpg  \n",
            " extracting: /content/val_images/val2017/000000447611.jpg  \n",
            " extracting: /content/val_images/val2017/000000189775.jpg  \n",
            " extracting: /content/val_images/val2017/000000454661.jpg  \n",
            " extracting: /content/val_images/val2017/000000197870.jpg  \n",
            " extracting: /content/val_images/val2017/000000551820.jpg  \n",
            " extracting: /content/val_images/val2017/000000255664.jpg  \n",
            " extracting: /content/val_images/val2017/000000248112.jpg  \n",
            " extracting: /content/val_images/val2017/000000308193.jpg  \n",
            " extracting: /content/val_images/val2017/000000281032.jpg  \n",
            " extracting: /content/val_images/val2017/000000365208.jpg  \n",
            " extracting: /content/val_images/val2017/000000021839.jpg  \n",
            " extracting: /content/val_images/val2017/000000372466.jpg  \n",
            " extracting: /content/val_images/val2017/000000458790.jpg  \n",
            " extracting: /content/val_images/val2017/000000108440.jpg  \n",
            " extracting: /content/val_images/val2017/000000055167.jpg  \n",
            " extracting: /content/val_images/val2017/000000575187.jpg  \n",
            " extracting: /content/val_images/val2017/000000334417.jpg  \n",
            " extracting: /content/val_images/val2017/000000172648.jpg  \n",
            " extracting: /content/val_images/val2017/000000513524.jpg  \n",
            " extracting: /content/val_images/val2017/000000051738.jpg  \n",
            " extracting: /content/val_images/val2017/000000024567.jpg  \n",
            " extracting: /content/val_images/val2017/000000054592.jpg  \n",
            " extracting: /content/val_images/val2017/000000343149.jpg  \n",
            " extracting: /content/val_images/val2017/000000415748.jpg  \n",
            " extracting: /content/val_images/val2017/000000308394.jpg  \n",
            " extracting: /content/val_images/val2017/000000519522.jpg  \n",
            " extracting: /content/val_images/val2017/000000211674.jpg  \n",
            " extracting: /content/val_images/val2017/000000253835.jpg  \n",
            " extracting: /content/val_images/val2017/000000079031.jpg  \n",
            " extracting: /content/val_images/val2017/000000084664.jpg  \n",
            " extracting: /content/val_images/val2017/000000323496.jpg  \n",
            " extracting: /content/val_images/val2017/000000331604.jpg  \n",
            " extracting: /content/val_images/val2017/000000098261.jpg  \n",
            " extracting: /content/val_images/val2017/000000451879.jpg  \n",
            " extracting: /content/val_images/val2017/000000057027.jpg  \n",
            " extracting: /content/val_images/val2017/000000067310.jpg  \n",
            " extracting: /content/val_images/val2017/000000078748.jpg  \n",
            " extracting: /content/val_images/val2017/000000407574.jpg  \n",
            " extracting: /content/val_images/val2017/000000078266.jpg  \n",
            " extracting: /content/val_images/val2017/000000483531.jpg  \n",
            " extracting: /content/val_images/val2017/000000134856.jpg  \n",
            " extracting: /content/val_images/val2017/000000133567.jpg  \n",
            " extracting: /content/val_images/val2017/000000278848.jpg  \n",
            " extracting: /content/val_images/val2017/000000236914.jpg  \n",
            " extracting: /content/val_images/val2017/000000376365.jpg  \n",
            " extracting: /content/val_images/val2017/000000341719.jpg  \n",
            " extracting: /content/val_images/val2017/000000532481.jpg  \n",
            " extracting: /content/val_images/val2017/000000407518.jpg  \n",
            " extracting: /content/val_images/val2017/000000446651.jpg  \n",
            " extracting: /content/val_images/val2017/000000475387.jpg  \n",
            " extracting: /content/val_images/val2017/000000243199.jpg  \n",
            " extracting: /content/val_images/val2017/000000255824.jpg  \n",
            " extracting: /content/val_images/val2017/000000383621.jpg  \n",
            " extracting: /content/val_images/val2017/000000017959.jpg  \n",
            " extracting: /content/val_images/val2017/000000221281.jpg  \n",
            " extracting: /content/val_images/val2017/000000076625.jpg  \n",
            " extracting: /content/val_images/val2017/000000156278.jpg  \n",
            " extracting: /content/val_images/val2017/000000439994.jpg  \n",
            " extracting: /content/val_images/val2017/000000336232.jpg  \n",
            " extracting: /content/val_images/val2017/000000342367.jpg  \n",
            " extracting: /content/val_images/val2017/000000362520.jpg  \n",
            " extracting: /content/val_images/val2017/000000213086.jpg  \n",
            " extracting: /content/val_images/val2017/000000193348.jpg  \n",
            " extracting: /content/val_images/val2017/000000222094.jpg  \n",
            " extracting: /content/val_images/val2017/000000197528.jpg  \n",
            " extracting: /content/val_images/val2017/000000282296.jpg  \n",
            " extracting: /content/val_images/val2017/000000488710.jpg  \n",
            " extracting: /content/val_images/val2017/000000565989.jpg  \n",
            " extracting: /content/val_images/val2017/000000025181.jpg  \n",
            " extracting: /content/val_images/val2017/000000135410.jpg  \n",
            " extracting: /content/val_images/val2017/000000393226.jpg  \n",
            " extracting: /content/val_images/val2017/000000450202.jpg  \n",
            " extracting: /content/val_images/val2017/000000450075.jpg  \n",
            " extracting: /content/val_images/val2017/000000025394.jpg  \n",
            " extracting: /content/val_images/val2017/000000257370.jpg  \n",
            " extracting: /content/val_images/val2017/000000191672.jpg  \n",
            " extracting: /content/val_images/val2017/000000049810.jpg  \n",
            " extracting: /content/val_images/val2017/000000031749.jpg  \n",
            " extracting: /content/val_images/val2017/000000406417.jpg  \n",
            " extracting: /content/val_images/val2017/000000573258.jpg  \n",
            " extracting: /content/val_images/val2017/000000352900.jpg  \n",
            " extracting: /content/val_images/val2017/000000343803.jpg  \n",
            " extracting: /content/val_images/val2017/000000002923.jpg  \n",
            " extracting: /content/val_images/val2017/000000373315.jpg  \n",
            " extracting: /content/val_images/val2017/000000496854.jpg  \n",
            " extracting: /content/val_images/val2017/000000474170.jpg  \n",
            " extracting: /content/val_images/val2017/000000327780.jpg  \n",
            " extracting: /content/val_images/val2017/000000414510.jpg  \n",
            " extracting: /content/val_images/val2017/000000172649.jpg  \n",
            " extracting: /content/val_images/val2017/000000445999.jpg  \n",
            " extracting: /content/val_images/val2017/000000351609.jpg  \n",
            " extracting: /content/val_images/val2017/000000512776.jpg  \n",
            " extracting: /content/val_images/val2017/000000494188.jpg  \n",
            " extracting: /content/val_images/val2017/000000057760.jpg  \n",
            " extracting: /content/val_images/val2017/000000414170.jpg  \n",
            " extracting: /content/val_images/val2017/000000478721.jpg  \n",
            " extracting: /content/val_images/val2017/000000475150.jpg  \n",
            " extracting: /content/val_images/val2017/000000541055.jpg  \n",
            " extracting: /content/val_images/val2017/000000175251.jpg  \n",
            " extracting: /content/val_images/val2017/000000049759.jpg  \n",
            " extracting: /content/val_images/val2017/000000448810.jpg  \n",
            " extracting: /content/val_images/val2017/000000491213.jpg  \n",
            " extracting: /content/val_images/val2017/000000069356.jpg  \n",
            " extracting: /content/val_images/val2017/000000242934.jpg  \n",
            " extracting: /content/val_images/val2017/000000550939.jpg  \n",
            " extracting: /content/val_images/val2017/000000326970.jpg  \n",
            " extracting: /content/val_images/val2017/000000127263.jpg  \n",
            " extracting: /content/val_images/val2017/000000100274.jpg  \n",
            " extracting: /content/val_images/val2017/000000323571.jpg  \n",
            " extracting: /content/val_images/val2017/000000152870.jpg  \n",
            " extracting: /content/val_images/val2017/000000085911.jpg  \n",
            " extracting: /content/val_images/val2017/000000134882.jpg  \n",
            " extracting: /content/val_images/val2017/000000236426.jpg  \n",
            " extracting: /content/val_images/val2017/000000527695.jpg  \n",
            " extracting: /content/val_images/val2017/000000407002.jpg  \n",
            " extracting: /content/val_images/val2017/000000426836.jpg  \n",
            " extracting: /content/val_images/val2017/000000578967.jpg  \n",
            " extracting: /content/val_images/val2017/000000552883.jpg  \n",
            " extracting: /content/val_images/val2017/000000545219.jpg  \n",
            " extracting: /content/val_images/val2017/000000548555.jpg  \n",
            " extracting: /content/val_images/val2017/000000308545.jpg  \n",
            " extracting: /content/val_images/val2017/000000485071.jpg  \n",
            " extracting: /content/val_images/val2017/000000511398.jpg  \n",
            " extracting: /content/val_images/val2017/000000417779.jpg  \n",
            " extracting: /content/val_images/val2017/000000155051.jpg  \n",
            " extracting: /content/val_images/val2017/000000535608.jpg  \n",
            " extracting: /content/val_images/val2017/000000126107.jpg  \n",
            " extracting: /content/val_images/val2017/000000084752.jpg  \n",
            " extracting: /content/val_images/val2017/000000038576.jpg  \n",
            " extracting: /content/val_images/val2017/000000270474.jpg  \n",
            " extracting: /content/val_images/val2017/000000343524.jpg  \n",
            " extracting: /content/val_images/val2017/000000570834.jpg  \n",
            " extracting: /content/val_images/val2017/000000448263.jpg  \n",
            " extracting: /content/val_images/val2017/000000004395.jpg  \n",
            " extracting: /content/val_images/val2017/000000010707.jpg  \n",
            " extracting: /content/val_images/val2017/000000082688.jpg  \n",
            " extracting: /content/val_images/val2017/000000398028.jpg  \n",
            " extracting: /content/val_images/val2017/000000453708.jpg  \n",
            " extracting: /content/val_images/val2017/000000365098.jpg  \n",
            " extracting: /content/val_images/val2017/000000172946.jpg  \n",
            " extracting: /content/val_images/val2017/000000131556.jpg  \n",
            " extracting: /content/val_images/val2017/000000023126.jpg  \n",
            " extracting: /content/val_images/val2017/000000407614.jpg  \n",
            " extracting: /content/val_images/val2017/000000087476.jpg  \n",
            " extracting: /content/val_images/val2017/000000105923.jpg  \n",
            " extracting: /content/val_images/val2017/000000545730.jpg  \n",
            " extracting: /content/val_images/val2017/000000516316.jpg  \n",
            " extracting: /content/val_images/val2017/000000108026.jpg  \n",
            " extracting: /content/val_images/val2017/000000151962.jpg  \n",
            " extracting: /content/val_images/val2017/000000548524.jpg  \n",
            " extracting: /content/val_images/val2017/000000373353.jpg  \n",
            " extracting: /content/val_images/val2017/000000508586.jpg  \n",
            " extracting: /content/val_images/val2017/000000215072.jpg  \n",
            " extracting: /content/val_images/val2017/000000365387.jpg  \n",
            " extracting: /content/val_images/val2017/000000089556.jpg  \n",
            " extracting: /content/val_images/val2017/000000111179.jpg  \n",
            " extracting: /content/val_images/val2017/000000176778.jpg  \n",
            " extracting: /content/val_images/val2017/000000017379.jpg  \n",
            " extracting: /content/val_images/val2017/000000303499.jpg  \n",
            " extracting: /content/val_images/val2017/000000119641.jpg  \n",
            " extracting: /content/val_images/val2017/000000210032.jpg  \n",
            " extracting: /content/val_images/val2017/000000492878.jpg  \n",
            " extracting: /content/val_images/val2017/000000096493.jpg  \n",
            " extracting: /content/val_images/val2017/000000430377.jpg  \n",
            " extracting: /content/val_images/val2017/000000122745.jpg  \n",
            " extracting: /content/val_images/val2017/000000307598.jpg  \n",
            " extracting: /content/val_images/val2017/000000166391.jpg  \n",
            " extracting: /content/val_images/val2017/000000173033.jpg  \n",
            " extracting: /content/val_images/val2017/000000146498.jpg  \n",
            " extracting: /content/val_images/val2017/000000581206.jpg  \n",
            " extracting: /content/val_images/val2017/000000173044.jpg  \n",
            " extracting: /content/val_images/val2017/000000079837.jpg  \n",
            " extracting: /content/val_images/val2017/000000375469.jpg  \n",
            " extracting: /content/val_images/val2017/000000290619.jpg  \n",
            " extracting: /content/val_images/val2017/000000416256.jpg  \n",
            " extracting: /content/val_images/val2017/000000070158.jpg  \n",
            " extracting: /content/val_images/val2017/000000465836.jpg  \n",
            " extracting: /content/val_images/val2017/000000051008.jpg  \n",
            " extracting: /content/val_images/val2017/000000364126.jpg  \n",
            " extracting: /content/val_images/val2017/000000502732.jpg  \n",
            " extracting: /content/val_images/val2017/000000006012.jpg  \n",
            " extracting: /content/val_images/val2017/000000242946.jpg  \n",
            " extracting: /content/val_images/val2017/000000229747.jpg  \n",
            " extracting: /content/val_images/val2017/000000110972.jpg  \n",
            " extracting: /content/val_images/val2017/000000453302.jpg  \n",
            " extracting: /content/val_images/val2017/000000206025.jpg  \n",
            " extracting: /content/val_images/val2017/000000015517.jpg  \n",
            " extracting: /content/val_images/val2017/000000528524.jpg  \n",
            " extracting: /content/val_images/val2017/000000458045.jpg  \n",
            " extracting: /content/val_images/val2017/000000303863.jpg  \n",
            " extracting: /content/val_images/val2017/000000516916.jpg  \n",
            " extracting: /content/val_images/val2017/000000449198.jpg  \n",
            " extracting: /content/val_images/val2017/000000185250.jpg  \n",
            " extracting: /content/val_images/val2017/000000187513.jpg  \n",
            " extracting: /content/val_images/val2017/000000488664.jpg  \n",
            " extracting: /content/val_images/val2017/000000274687.jpg  \n",
            " extracting: /content/val_images/val2017/000000318455.jpg  \n",
            " extracting: /content/val_images/val2017/000000533536.jpg  \n",
            " extracting: /content/val_images/val2017/000000252216.jpg  \n",
            " extracting: /content/val_images/val2017/000000328683.jpg  \n",
            " extracting: /content/val_images/val2017/000000363072.jpg  \n",
            " extracting: /content/val_images/val2017/000000289415.jpg  \n",
            " extracting: /content/val_images/val2017/000000150726.jpg  \n",
            " extracting: /content/val_images/val2017/000000573391.jpg  \n",
            " extracting: /content/val_images/val2017/000000473869.jpg  \n",
            " extracting: /content/val_images/val2017/000000365886.jpg  \n",
            " extracting: /content/val_images/val2017/000000108495.jpg  \n",
            " extracting: /content/val_images/val2017/000000245651.jpg  \n",
            " extracting: /content/val_images/val2017/000000253386.jpg  \n",
            " extracting: /content/val_images/val2017/000000271728.jpg  \n",
            " extracting: /content/val_images/val2017/000000456292.jpg  \n",
            " extracting: /content/val_images/val2017/000000532071.jpg  \n",
            " extracting: /content/val_images/val2017/000000229358.jpg  \n",
            " extracting: /content/val_images/val2017/000000351096.jpg  \n",
            " extracting: /content/val_images/val2017/000000545826.jpg  \n",
            " extracting: /content/val_images/val2017/000000532129.jpg  \n",
            " extracting: /content/val_images/val2017/000000481582.jpg  \n",
            " extracting: /content/val_images/val2017/000000287347.jpg  \n",
            " extracting: /content/val_images/val2017/000000508639.jpg  \n",
            " extracting: /content/val_images/val2017/000000304396.jpg  \n",
            " extracting: /content/val_images/val2017/000000493284.jpg  \n",
            " extracting: /content/val_images/val2017/000000308799.jpg  \n",
            " extracting: /content/val_images/val2017/000000084650.jpg  \n",
            " extracting: /content/val_images/val2017/000000408120.jpg  \n",
            " extracting: /content/val_images/val2017/000000129416.jpg  \n",
            " extracting: /content/val_images/val2017/000000356169.jpg  \n",
            " extracting: /content/val_images/val2017/000000558213.jpg  \n",
            " extracting: /content/val_images/val2017/000000084031.jpg  \n",
            " extracting: /content/val_images/val2017/000000171611.jpg  \n",
            " extracting: /content/val_images/val2017/000000276720.jpg  \n",
            " extracting: /content/val_images/val2017/000000147338.jpg  \n",
            " extracting: /content/val_images/val2017/000000221291.jpg  \n",
            " extracting: /content/val_images/val2017/000000194216.jpg  \n",
            " extracting: /content/val_images/val2017/000000543528.jpg  \n",
            " extracting: /content/val_images/val2017/000000474039.jpg  \n",
            " extracting: /content/val_images/val2017/000000447088.jpg  \n",
            " extracting: /content/val_images/val2017/000000322163.jpg  \n",
            " extracting: /content/val_images/val2017/000000234757.jpg  \n",
            " extracting: /content/val_images/val2017/000000569030.jpg  \n",
            " extracting: /content/val_images/val2017/000000350388.jpg  \n",
            " extracting: /content/val_images/val2017/000000534639.jpg  \n",
            " extracting: /content/val_images/val2017/000000352584.jpg  \n",
            " extracting: /content/val_images/val2017/000000347544.jpg  \n",
            " extracting: /content/val_images/val2017/000000292446.jpg  \n",
            " extracting: /content/val_images/val2017/000000417465.jpg  \n",
            " extracting: /content/val_images/val2017/000000462031.jpg  \n",
            " extracting: /content/val_images/val2017/000000574520.jpg  \n",
            " extracting: /content/val_images/val2017/000000466986.jpg  \n",
            " extracting: /content/val_images/val2017/000000133343.jpg  \n",
            " extracting: /content/val_images/val2017/000000106266.jpg  \n",
            " extracting: /content/val_images/val2017/000000416170.jpg  \n",
            " extracting: /content/val_images/val2017/000000095069.jpg  \n",
            " extracting: /content/val_images/val2017/000000489305.jpg  \n",
            " extracting: /content/val_images/val2017/000000223188.jpg  \n",
            " extracting: /content/val_images/val2017/000000284106.jpg  \n",
            " extracting: /content/val_images/val2017/000000379332.jpg  \n",
            " extracting: /content/val_images/val2017/000000012667.jpg  \n",
            " extracting: /content/val_images/val2017/000000275392.jpg  \n",
            " extracting: /content/val_images/val2017/000000045728.jpg  \n",
            " extracting: /content/val_images/val2017/000000201072.jpg  \n",
            " extracting: /content/val_images/val2017/000000120584.jpg  \n",
            " extracting: /content/val_images/val2017/000000023937.jpg  \n",
            " extracting: /content/val_images/val2017/000000516601.jpg  \n",
            " extracting: /content/val_images/val2017/000000275198.jpg  \n",
            " extracting: /content/val_images/val2017/000000505942.jpg  \n",
            " extracting: /content/val_images/val2017/000000521231.jpg  \n",
            " extracting: /content/val_images/val2017/000000023023.jpg  \n",
            " extracting: /content/val_images/val2017/000000369541.jpg  \n",
            " extracting: /content/val_images/val2017/000000250766.jpg  \n",
            " extracting: /content/val_images/val2017/000000276284.jpg  \n",
            " extracting: /content/val_images/val2017/000000565776.jpg  \n",
            " extracting: /content/val_images/val2017/000000299355.jpg  \n",
            " extracting: /content/val_images/val2017/000000488270.jpg  \n",
            " extracting: /content/val_images/val2017/000000088040.jpg  \n",
            " extracting: /content/val_images/val2017/000000062353.jpg  \n",
            " extracting: /content/val_images/val2017/000000157418.jpg  \n",
            " extracting: /content/val_images/val2017/000000102707.jpg  \n",
            " extracting: /content/val_images/val2017/000000405195.jpg  \n",
            " extracting: /content/val_images/val2017/000000177935.jpg  \n",
            " extracting: /content/val_images/val2017/000000361180.jpg  \n",
            " extracting: /content/val_images/val2017/000000278973.jpg  \n",
            " extracting: /content/val_images/val2017/000000426376.jpg  \n",
            " extracting: /content/val_images/val2017/000000572408.jpg  \n",
            " extracting: /content/val_images/val2017/000000424162.jpg  \n",
            " extracting: /content/val_images/val2017/000000251140.jpg  \n",
            " extracting: /content/val_images/val2017/000000205282.jpg  \n",
            " extracting: /content/val_images/val2017/000000163155.jpg  \n",
            " extracting: /content/val_images/val2017/000000461573.jpg  \n",
            " extracting: /content/val_images/val2017/000000349837.jpg  \n",
            " extracting: /content/val_images/val2017/000000084362.jpg  \n",
            " extracting: /content/val_images/val2017/000000132375.jpg  \n",
            " extracting: /content/val_images/val2017/000000085157.jpg  \n",
            " extracting: /content/val_images/val2017/000000391290.jpg  \n",
            " extracting: /content/val_images/val2017/000000564280.jpg  \n",
            " extracting: /content/val_images/val2017/000000492992.jpg  \n",
            " extracting: /content/val_images/val2017/000000568814.jpg  \n",
            " extracting: /content/val_images/val2017/000000423123.jpg  \n",
            " extracting: /content/val_images/val2017/000000247806.jpg  \n",
            " extracting: /content/val_images/val2017/000000334399.jpg  \n",
            " extracting: /content/val_images/val2017/000000106048.jpg  \n",
            " extracting: /content/val_images/val2017/000000332901.jpg  \n",
            " extracting: /content/val_images/val2017/000000270244.jpg  \n",
            " extracting: /content/val_images/val2017/000000150930.jpg  \n",
            " extracting: /content/val_images/val2017/000000356428.jpg  \n",
            " extracting: /content/val_images/val2017/000000151657.jpg  \n",
            " extracting: /content/val_images/val2017/000000223789.jpg  \n",
            " extracting: /content/val_images/val2017/000000222863.jpg  \n",
            " extracting: /content/val_images/val2017/000000385997.jpg  \n",
            " extracting: /content/val_images/val2017/000000312489.jpg  \n",
            " extracting: /content/val_images/val2017/000000064499.jpg  \n",
            " extracting: /content/val_images/val2017/000000485895.jpg  \n",
            " extracting: /content/val_images/val2017/000000007991.jpg  \n",
            " extracting: /content/val_images/val2017/000000227478.jpg  \n",
            " extracting: /content/val_images/val2017/000000334483.jpg  \n",
            " extracting: /content/val_images/val2017/000000313182.jpg  \n",
            " extracting: /content/val_images/val2017/000000247917.jpg  \n",
            " extracting: /content/val_images/val2017/000000386277.jpg  \n",
            " extracting: /content/val_images/val2017/000000273642.jpg  \n",
            " extracting: /content/val_images/val2017/000000024610.jpg  \n",
            " extracting: /content/val_images/val2017/000000008844.jpg  \n",
            " extracting: /content/val_images/val2017/000000107226.jpg  \n",
            " extracting: /content/val_images/val2017/000000436738.jpg  \n",
            " extracting: /content/val_images/val2017/000000553788.jpg  \n",
            " extracting: /content/val_images/val2017/000000033104.jpg  \n",
            " extracting: /content/val_images/val2017/000000039956.jpg  \n",
            " extracting: /content/val_images/val2017/000000557884.jpg  \n",
            " extracting: /content/val_images/val2017/000000426297.jpg  \n",
            " extracting: /content/val_images/val2017/000000338718.jpg  \n",
            " extracting: /content/val_images/val2017/000000456496.jpg  \n",
            " extracting: /content/val_images/val2017/000000216419.jpg  \n",
            " extracting: /content/val_images/val2017/000000157213.jpg  \n",
            " extracting: /content/val_images/val2017/000000232649.jpg  \n",
            " extracting: /content/val_images/val2017/000000172571.jpg  \n",
            " extracting: /content/val_images/val2017/000000141597.jpg  \n",
            " extracting: /content/val_images/val2017/000000076547.jpg  \n",
            " extracting: /content/val_images/val2017/000000474881.jpg  \n",
            " extracting: /content/val_images/val2017/000000329323.jpg  \n",
            " extracting: /content/val_images/val2017/000000162858.jpg  \n",
            " extracting: /content/val_images/val2017/000000343496.jpg  \n",
            " extracting: /content/val_images/val2017/000000036539.jpg  \n",
            " extracting: /content/val_images/val2017/000000170116.jpg  \n",
            " extracting: /content/val_images/val2017/000000565607.jpg  \n",
            " extracting: /content/val_images/val2017/000000244496.jpg  \n",
            " extracting: /content/val_images/val2017/000000143572.jpg  \n",
            " extracting: /content/val_images/val2017/000000210273.jpg  \n",
            " extracting: /content/val_images/val2017/000000133778.jpg  \n",
            " extracting: /content/val_images/val2017/000000094852.jpg  \n",
            " extracting: /content/val_images/val2017/000000172856.jpg  \n",
            " extracting: /content/val_images/val2017/000000463647.jpg  \n",
            " extracting: /content/val_images/val2017/000000520324.jpg  \n",
            " extracting: /content/val_images/val2017/000000226802.jpg  \n",
            " extracting: /content/val_images/val2017/000000432085.jpg  \n",
            " extracting: /content/val_images/val2017/000000532761.jpg  \n",
            " extracting: /content/val_images/val2017/000000499622.jpg  \n",
            " extracting: /content/val_images/val2017/000000563604.jpg  \n",
            " extracting: /content/val_images/val2017/000000438269.jpg  \n",
            " extracting: /content/val_images/val2017/000000409211.jpg  \n",
            " extracting: /content/val_images/val2017/000000283037.jpg  \n",
            " extracting: /content/val_images/val2017/000000551815.jpg  \n",
            " extracting: /content/val_images/val2017/000000189226.jpg  \n",
            " extracting: /content/val_images/val2017/000000258793.jpg  \n",
            " extracting: /content/val_images/val2017/000000206411.jpg  \n",
            " extracting: /content/val_images/val2017/000000522940.jpg  \n",
            " extracting: /content/val_images/val2017/000000465806.jpg  \n",
            " extracting: /content/val_images/val2017/000000414340.jpg  \n",
            " extracting: /content/val_images/val2017/000000483667.jpg  \n",
            " extracting: /content/val_images/val2017/000000354829.jpg  \n",
            " extracting: /content/val_images/val2017/000000013659.jpg  \n",
            " extracting: /content/val_images/val2017/000000196141.jpg  \n",
            " extracting: /content/val_images/val2017/000000390902.jpg  \n",
            " extracting: /content/val_images/val2017/000000221693.jpg  \n",
            " extracting: /content/val_images/val2017/000000305609.jpg  \n",
            " extracting: /content/val_images/val2017/000000565153.jpg  \n",
            " extracting: /content/val_images/val2017/000000404805.jpg  \n",
            " extracting: /content/val_images/val2017/000000060090.jpg  \n",
            " extracting: /content/val_images/val2017/000000530820.jpg  \n",
            " extracting: /content/val_images/val2017/000000230450.jpg  \n",
            " extracting: /content/val_images/val2017/000000353180.jpg  \n",
            " extracting: /content/val_images/val2017/000000118515.jpg  \n",
            " extracting: /content/val_images/val2017/000000283520.jpg  \n",
            " extracting: /content/val_images/val2017/000000410712.jpg  \n",
            " extracting: /content/val_images/val2017/000000297353.jpg  \n",
            " extracting: /content/val_images/val2017/000000331317.jpg  \n",
            " extracting: /content/val_images/val2017/000000128051.jpg  \n",
            " extracting: /content/val_images/val2017/000000579635.jpg  \n",
            " extracting: /content/val_images/val2017/000000227482.jpg  \n",
            " extracting: /content/val_images/val2017/000000185409.jpg  \n",
            " extracting: /content/val_images/val2017/000000099182.jpg  \n",
            " extracting: /content/val_images/val2017/000000122927.jpg  \n",
            " extracting: /content/val_images/val2017/000000255718.jpg  \n",
            " extracting: /content/val_images/val2017/000000552371.jpg  \n",
            " extracting: /content/val_images/val2017/000000470952.jpg  \n",
            " extracting: /content/val_images/val2017/000000039405.jpg  \n",
            " extracting: /content/val_images/val2017/000000016010.jpg  \n",
            " extracting: /content/val_images/val2017/000000470173.jpg  \n",
            " extracting: /content/val_images/val2017/000000459437.jpg  \n",
            " extracting: /content/val_images/val2017/000000045472.jpg  \n",
            " extracting: /content/val_images/val2017/000000277020.jpg  \n",
            " extracting: /content/val_images/val2017/000000282912.jpg  \n",
            " extracting: /content/val_images/val2017/000000314034.jpg  \n",
            " extracting: /content/val_images/val2017/000000148730.jpg  \n",
            " extracting: /content/val_images/val2017/000000101068.jpg  \n",
            " extracting: /content/val_images/val2017/000000407960.jpg  \n",
            " extracting: /content/val_images/val2017/000000022396.jpg  \n",
            " extracting: /content/val_images/val2017/000000541634.jpg  \n",
            " extracting: /content/val_images/val2017/000000288762.jpg  \n",
            " extracting: /content/val_images/val2017/000000439426.jpg  \n",
            " extracting: /content/val_images/val2017/000000112110.jpg  \n",
            " extracting: /content/val_images/val2017/000000022705.jpg  \n",
            " extracting: /content/val_images/val2017/000000038829.jpg  \n",
            " extracting: /content/val_images/val2017/000000361730.jpg  \n",
            " extracting: /content/val_images/val2017/000000382030.jpg  \n",
            " extracting: /content/val_images/val2017/000000402783.jpg  \n",
            " extracting: /content/val_images/val2017/000000413247.jpg  \n",
            " extracting: /content/val_images/val2017/000000578792.jpg  \n",
            " extracting: /content/val_images/val2017/000000126226.jpg  \n",
            " extracting: /content/val_images/val2017/000000372307.jpg  \n",
            " extracting: /content/val_images/val2017/000000226984.jpg  \n",
            " extracting: /content/val_images/val2017/000000295231.jpg  \n",
            " extracting: /content/val_images/val2017/000000146358.jpg  \n",
            " extracting: /content/val_images/val2017/000000455981.jpg  \n",
            " extracting: /content/val_images/val2017/000000147518.jpg  \n",
            " extracting: /content/val_images/val2017/000000090155.jpg  \n",
            " extracting: /content/val_images/val2017/000000007795.jpg  \n",
            " extracting: /content/val_images/val2017/000000468245.jpg  \n",
            " extracting: /content/val_images/val2017/000000307074.jpg  \n",
            " extracting: /content/val_images/val2017/000000082696.jpg  \n",
            " extracting: /content/val_images/val2017/000000545958.jpg  \n",
            " extracting: /content/val_images/val2017/000000411774.jpg  \n",
            " extracting: /content/val_images/val2017/000000166747.jpg  \n",
            " extracting: /content/val_images/val2017/000000308466.jpg  \n",
            " extracting: /content/val_images/val2017/000000021167.jpg  \n",
            " extracting: /content/val_images/val2017/000000402473.jpg  \n",
            " extracting: /content/val_images/val2017/000000376625.jpg  \n",
            " extracting: /content/val_images/val2017/000000347174.jpg  \n",
            " extracting: /content/val_images/val2017/000000530146.jpg  \n",
            " extracting: /content/val_images/val2017/000000430871.jpg  \n",
            " extracting: /content/val_images/val2017/000000300913.jpg  \n",
            " extracting: /content/val_images/val2017/000000291861.jpg  \n",
            " extracting: /content/val_images/val2017/000000105912.jpg  \n",
            " extracting: /content/val_images/val2017/000000489339.jpg  \n",
            " extracting: /content/val_images/val2017/000000045090.jpg  \n",
            " extracting: /content/val_images/val2017/000000485424.jpg  \n",
            " extracting: /content/val_images/val2017/000000006723.jpg  \n",
            " extracting: /content/val_images/val2017/000000431896.jpg  \n",
            " extracting: /content/val_images/val2017/000000491497.jpg  \n",
            " extracting: /content/val_images/val2017/000000402992.jpg  \n",
            " extracting: /content/val_images/val2017/000000135872.jpg  \n",
            " extracting: /content/val_images/val2017/000000098716.jpg  \n",
            " extracting: /content/val_images/val2017/000000430875.jpg  \n",
            " extracting: /content/val_images/val2017/000000414385.jpg  \n",
            " extracting: /content/val_images/val2017/000000447917.jpg  \n",
            " extracting: /content/val_images/val2017/000000362682.jpg  \n",
            " extracting: /content/val_images/val2017/000000386210.jpg  \n",
            " extracting: /content/val_images/val2017/000000110282.jpg  \n",
            " extracting: /content/val_images/val2017/000000315001.jpg  \n",
            " extracting: /content/val_images/val2017/000000354753.jpg  \n",
            " extracting: /content/val_images/val2017/000000018770.jpg  \n",
            " extracting: /content/val_images/val2017/000000005001.jpg  \n",
            " extracting: /content/val_images/val2017/000000323355.jpg  \n",
            " extracting: /content/val_images/val2017/000000427649.jpg  \n",
            " extracting: /content/val_images/val2017/000000327617.jpg  \n",
            " extracting: /content/val_images/val2017/000000187745.jpg  \n",
            " extracting: /content/val_images/val2017/000000235778.jpg  \n",
            " extracting: /content/val_images/val2017/000000352760.jpg  \n",
            " extracting: /content/val_images/val2017/000000559707.jpg  \n",
            " extracting: /content/val_images/val2017/000000059920.jpg  \n",
            " extracting: /content/val_images/val2017/000000089880.jpg  \n",
            " extracting: /content/val_images/val2017/000000288882.jpg  \n",
            " extracting: /content/val_images/val2017/000000135670.jpg  \n",
            " extracting: /content/val_images/val2017/000000470773.jpg  \n",
            " extracting: /content/val_images/val2017/000000406570.jpg  \n",
            " extracting: /content/val_images/val2017/000000410510.jpg  \n",
            " extracting: /content/val_images/val2017/000000430073.jpg  \n",
            " extracting: /content/val_images/val2017/000000153529.jpg  \n",
            " extracting: /content/val_images/val2017/000000031217.jpg  \n",
            " extracting: /content/val_images/val2017/000000190753.jpg  \n",
            " extracting: /content/val_images/val2017/000000144798.jpg  \n",
            " extracting: /content/val_images/val2017/000000430286.jpg  \n",
            " extracting: /content/val_images/val2017/000000153299.jpg  \n",
            " extracting: /content/val_images/val2017/000000334521.jpg  \n",
            " extracting: /content/val_images/val2017/000000005477.jpg  \n",
            " extracting: /content/val_images/val2017/000000378515.jpg  \n",
            " extracting: /content/val_images/val2017/000000357501.jpg  \n",
            " extracting: /content/val_images/val2017/000000131444.jpg  \n",
            " extracting: /content/val_images/val2017/000000194746.jpg  \n",
            " extracting: /content/val_images/val2017/000000290592.jpg  \n",
            " extracting: /content/val_images/val2017/000000073118.jpg  \n",
            " extracting: /content/val_images/val2017/000000131431.jpg  \n",
            " extracting: /content/val_images/val2017/000000537270.jpg  \n",
            " extracting: /content/val_images/val2017/000000297681.jpg  \n",
            " extracting: /content/val_images/val2017/000000482275.jpg  \n",
            " extracting: /content/val_images/val2017/000000125211.jpg  \n",
            " extracting: /content/val_images/val2017/000000313454.jpg  \n",
            " extracting: /content/val_images/val2017/000000566282.jpg  \n",
            " extracting: /content/val_images/val2017/000000221017.jpg  \n",
            " extracting: /content/val_images/val2017/000000117744.jpg  \n",
            " extracting: /content/val_images/val2017/000000490413.jpg  \n",
            " extracting: /content/val_images/val2017/000000205834.jpg  \n",
            " extracting: /content/val_images/val2017/000000403565.jpg  \n",
            " extracting: /content/val_images/val2017/000000237928.jpg  \n",
            " extracting: /content/val_images/val2017/000000128598.jpg  \n",
            " extracting: /content/val_images/val2017/000000448256.jpg  \n",
            " extracting: /content/val_images/val2017/000000517069.jpg  \n",
            " extracting: /content/val_images/val2017/000000163562.jpg  \n",
            " extracting: /content/val_images/val2017/000000547336.jpg  \n",
            " extracting: /content/val_images/val2017/000000194875.jpg  \n",
            " extracting: /content/val_images/val2017/000000290843.jpg  \n",
            " extracting: /content/val_images/val2017/000000116362.jpg  \n",
            " extracting: /content/val_images/val2017/000000285349.jpg  \n",
            " extracting: /content/val_images/val2017/000000293245.jpg  \n",
            " extracting: /content/val_images/val2017/000000343561.jpg  \n",
            " extracting: /content/val_images/val2017/000000530457.jpg  \n",
            " extracting: /content/val_images/val2017/000000148620.jpg  \n",
            " extracting: /content/val_images/val2017/000000512657.jpg  \n",
            " extracting: /content/val_images/val2017/000000526256.jpg  \n",
            " extracting: /content/val_images/val2017/000000453001.jpg  \n",
            " extracting: /content/val_images/val2017/000000442463.jpg  \n",
            " extracting: /content/val_images/val2017/000000196754.jpg  \n",
            " extracting: /content/val_images/val2017/000000492758.jpg  \n",
            " extracting: /content/val_images/val2017/000000459467.jpg  \n",
            " extracting: /content/val_images/val2017/000000284743.jpg  \n",
            " extracting: /content/val_images/val2017/000000356505.jpg  \n",
            " extracting: /content/val_images/val2017/000000136466.jpg  \n",
            " extracting: /content/val_images/val2017/000000294162.jpg  \n",
            " extracting: /content/val_images/val2017/000000073533.jpg  \n",
            " extracting: /content/val_images/val2017/000000535253.jpg  \n",
            " extracting: /content/val_images/val2017/000000288685.jpg  \n",
            " extracting: /content/val_images/val2017/000000577149.jpg  \n",
            " extracting: /content/val_images/val2017/000000076731.jpg  \n",
            " extracting: /content/val_images/val2017/000000223130.jpg  \n",
            " extracting: /content/val_images/val2017/000000528578.jpg  \n",
            " extracting: /content/val_images/val2017/000000580757.jpg  \n",
            " extracting: /content/val_images/val2017/000000033854.jpg  \n",
            " extracting: /content/val_images/val2017/000000286182.jpg  \n",
            " extracting: /content/val_images/val2017/000000494863.jpg  \n",
            " extracting: /content/val_images/val2017/000000305309.jpg  \n",
            " extracting: /content/val_images/val2017/000000185599.jpg  \n",
            " extracting: /content/val_images/val2017/000000107554.jpg  \n",
            " extracting: /content/val_images/val2017/000000356125.jpg  \n",
            " extracting: /content/val_images/val2017/000000015278.jpg  \n",
            " extracting: /content/val_images/val2017/000000314251.jpg  \n",
            " extracting: /content/val_images/val2017/000000238039.jpg  \n",
            " extracting: /content/val_images/val2017/000000186873.jpg  \n",
            " extracting: /content/val_images/val2017/000000052413.jpg  \n",
            " extracting: /content/val_images/val2017/000000044590.jpg  \n",
            " extracting: /content/val_images/val2017/000000361551.jpg  \n",
            " extracting: /content/val_images/val2017/000000419201.jpg  \n",
            " extracting: /content/val_images/val2017/000000568213.jpg  \n",
            " extracting: /content/val_images/val2017/000000480212.jpg  \n",
            " extracting: /content/val_images/val2017/000000281414.jpg  \n",
            " extracting: /content/val_images/val2017/000000210299.jpg  \n",
            " extracting: /content/val_images/val2017/000000080949.jpg  \n",
            " extracting: /content/val_images/val2017/000000001675.jpg  \n",
            " extracting: /content/val_images/val2017/000000141671.jpg  \n",
            " extracting: /content/val_images/val2017/000000217948.jpg  \n",
            " extracting: /content/val_images/val2017/000000386912.jpg  \n",
            " extracting: /content/val_images/val2017/000000128654.jpg  \n",
            " extracting: /content/val_images/val2017/000000509403.jpg  \n",
            " extracting: /content/val_images/val2017/000000415194.jpg  \n",
            " extracting: /content/val_images/val2017/000000509451.jpg  \n",
            " extracting: /content/val_images/val2017/000000122606.jpg  \n",
            " extracting: /content/val_images/val2017/000000400082.jpg  \n",
            " extracting: /content/val_images/val2017/000000154718.jpg  \n",
            " extracting: /content/val_images/val2017/000000057149.jpg  \n",
            " extracting: /content/val_images/val2017/000000471789.jpg  \n",
            " extracting: /content/val_images/val2017/000000401862.jpg  \n",
            " extracting: /content/val_images/val2017/000000346707.jpg  \n",
            " extracting: /content/val_images/val2017/000000491366.jpg  \n",
            " extracting: /content/val_images/val2017/000000468332.jpg  \n",
            " extracting: /content/val_images/val2017/000000345941.jpg  \n",
            " extracting: /content/val_images/val2017/000000551794.jpg  \n",
            " extracting: /content/val_images/val2017/000000297830.jpg  \n",
            " extracting: /content/val_images/val2017/000000226592.jpg  \n",
            " extracting: /content/val_images/val2017/000000046463.jpg  \n",
            " extracting: /content/val_images/val2017/000000419098.jpg  \n",
            " extracting: /content/val_images/val2017/000000122166.jpg  \n",
            " extracting: /content/val_images/val2017/000000340451.jpg  \n",
            " extracting: /content/val_images/val2017/000000143556.jpg  \n",
            " extracting: /content/val_images/val2017/000000569825.jpg  \n",
            " extracting: /content/val_images/val2017/000000520659.jpg  \n",
            " extracting: /content/val_images/val2017/000000435205.jpg  \n",
            " extracting: /content/val_images/val2017/000000467848.jpg  \n",
            " extracting: /content/val_images/val2017/000000242060.jpg  \n",
            " extracting: /content/val_images/val2017/000000007784.jpg  \n",
            " extracting: /content/val_images/val2017/000000267537.jpg  \n",
            " extracting: /content/val_images/val2017/000000172330.jpg  \n",
            " extracting: /content/val_images/val2017/000000446117.jpg  \n",
            " extracting: /content/val_images/val2017/000000445602.jpg  \n",
            " extracting: /content/val_images/val2017/000000038070.jpg  \n",
            " extracting: /content/val_images/val2017/000000281409.jpg  \n",
            " extracting: /content/val_images/val2017/000000153527.jpg  \n",
            " extracting: /content/val_images/val2017/000000410612.jpg  \n",
            " extracting: /content/val_images/val2017/000000442993.jpg  \n",
            " extracting: /content/val_images/val2017/000000319721.jpg  \n",
            " extracting: /content/val_images/val2017/000000213830.jpg  \n",
            " extracting: /content/val_images/val2017/000000533206.jpg  \n",
            " extracting: /content/val_images/val2017/000000475484.jpg  \n",
            " extracting: /content/val_images/val2017/000000117645.jpg  \n",
            " extracting: /content/val_images/val2017/000000310862.jpg  \n",
            " extracting: /content/val_images/val2017/000000504074.jpg  \n",
            " extracting: /content/val_images/val2017/000000130579.jpg  \n",
            " extracting: /content/val_images/val2017/000000289741.jpg  \n",
            " extracting: /content/val_images/val2017/000000036936.jpg  \n",
            " extracting: /content/val_images/val2017/000000441553.jpg  \n",
            " extracting: /content/val_images/val2017/000000326627.jpg  \n",
            " extracting: /content/val_images/val2017/000000029675.jpg  \n",
            " extracting: /content/val_images/val2017/000000451144.jpg  \n",
            " extracting: /content/val_images/val2017/000000341058.jpg  \n",
            " extracting: /content/val_images/val2017/000000005586.jpg  \n",
            " extracting: /content/val_images/val2017/000000092091.jpg  \n",
            " extracting: /content/val_images/val2017/000000147745.jpg  \n",
            " extracting: /content/val_images/val2017/000000119233.jpg  \n",
            " extracting: /content/val_images/val2017/000000374727.jpg  \n",
            " extracting: /content/val_images/val2017/000000100624.jpg  \n",
            " extracting: /content/val_images/val2017/000000514979.jpg  \n",
            " extracting: /content/val_images/val2017/000000344059.jpg  \n",
            " extracting: /content/val_images/val2017/000000183049.jpg  \n",
            " extracting: /content/val_images/val2017/000000394275.jpg  \n",
            " extracting: /content/val_images/val2017/000000350054.jpg  \n",
            " extracting: /content/val_images/val2017/000000551780.jpg  \n",
            " extracting: /content/val_images/val2017/000000397303.jpg  \n",
            " extracting: /content/val_images/val2017/000000041990.jpg  \n",
            " extracting: /content/val_images/val2017/000000351810.jpg  \n",
            " extracting: /content/val_images/val2017/000000315450.jpg  \n",
            " extracting: /content/val_images/val2017/000000345385.jpg  \n",
            " extracting: /content/val_images/val2017/000000513041.jpg  \n",
            " extracting: /content/val_images/val2017/000000320554.jpg  \n",
            " extracting: /content/val_images/val2017/000000283113.jpg  \n",
            " extracting: /content/val_images/val2017/000000167067.jpg  \n",
            " extracting: /content/val_images/val2017/000000489014.jpg  \n",
            " extracting: /content/val_images/val2017/000000293324.jpg  \n",
            " extracting: /content/val_images/val2017/000000087742.jpg  \n",
            " extracting: /content/val_images/val2017/000000016439.jpg  \n",
            " extracting: /content/val_images/val2017/000000166166.jpg  \n",
            " extracting: /content/val_images/val2017/000000129492.jpg  \n",
            " extracting: /content/val_images/val2017/000000125405.jpg  \n",
            " extracting: /content/val_images/val2017/000000579307.jpg  \n",
            " extracting: /content/val_images/val2017/000000412531.jpg  \n",
            " extracting: /content/val_images/val2017/000000193674.jpg  \n",
            " extracting: /content/val_images/val2017/000000252776.jpg  \n",
            " extracting: /content/val_images/val2017/000000020059.jpg  \n",
            " extracting: /content/val_images/val2017/000000500478.jpg  \n",
            " extracting: /content/val_images/val2017/000000222735.jpg  \n",
            " extracting: /content/val_images/val2017/000000039769.jpg  \n",
            " extracting: /content/val_images/val2017/000000248334.jpg  \n",
            " extracting: /content/val_images/val2017/000000436883.jpg  \n",
            " extracting: /content/val_images/val2017/000000396729.jpg  \n",
            " extracting: /content/val_images/val2017/000000507015.jpg  \n",
            " extracting: /content/val_images/val2017/000000040036.jpg  \n",
            " extracting: /content/val_images/val2017/000000543043.jpg  \n",
            " extracting: /content/val_images/val2017/000000068078.jpg  \n",
            " extracting: /content/val_images/val2017/000000280930.jpg  \n",
            " extracting: /content/val_images/val2017/000000440336.jpg  \n",
            " extracting: /content/val_images/val2017/000000277197.jpg  \n",
            " extracting: /content/val_images/val2017/000000366225.jpg  \n",
            " extracting: /content/val_images/val2017/000000316054.jpg  \n",
            " extracting: /content/val_images/val2017/000000286994.jpg  \n",
            " extracting: /content/val_images/val2017/000000409542.jpg  \n",
            " extracting: /content/val_images/val2017/000000264335.jpg  \n",
            " extracting: /content/val_images/val2017/000000067896.jpg  \n",
            " extracting: /content/val_images/val2017/000000273712.jpg  \n",
            " extracting: /content/val_images/val2017/000000092177.jpg  \n",
            " extracting: /content/val_images/val2017/000000421455.jpg  \n",
            " extracting: /content/val_images/val2017/000000394206.jpg  \n",
            " extracting: /content/val_images/val2017/000000006818.jpg  \n",
            " extracting: /content/val_images/val2017/000000006614.jpg  \n",
            " extracting: /content/val_images/val2017/000000029596.jpg  \n",
            " extracting: /content/val_images/val2017/000000551439.jpg  \n",
            " extracting: /content/val_images/val2017/000000509824.jpg  \n",
            " extracting: /content/val_images/val2017/000000531036.jpg  \n",
            " extracting: /content/val_images/val2017/000000553094.jpg  \n",
            " extracting: /content/val_images/val2017/000000382696.jpg  \n",
            " extracting: /content/val_images/val2017/000000111207.jpg  \n",
            " extracting: /content/val_images/val2017/000000176901.jpg  \n",
            " extracting: /content/val_images/val2017/000000203488.jpg  \n",
            " extracting: /content/val_images/val2017/000000338532.jpg  \n",
            " extracting: /content/val_images/val2017/000000462904.jpg  \n",
            " extracting: /content/val_images/val2017/000000469828.jpg  \n",
            " extracting: /content/val_images/val2017/000000434230.jpg  \n",
            " extracting: /content/val_images/val2017/000000136334.jpg  \n",
            " extracting: /content/val_images/val2017/000000267191.jpg  \n",
            " extracting: /content/val_images/val2017/000000193162.jpg  \n",
            " extracting: /content/val_images/val2017/000000136915.jpg  \n",
            " extracting: /content/val_images/val2017/000000220732.jpg  \n",
            " extracting: /content/val_images/val2017/000000079188.jpg  \n",
            " extracting: /content/val_images/val2017/000000451693.jpg  \n",
            " extracting: /content/val_images/val2017/000000440171.jpg  \n",
            " extracting: /content/val_images/val2017/000000045550.jpg  \n",
            " extracting: /content/val_images/val2017/000000269942.jpg  \n",
            " extracting: /content/val_images/val2017/000000293044.jpg  \n",
            " extracting: /content/val_images/val2017/000000003553.jpg  \n",
            " extracting: /content/val_images/val2017/000000357748.jpg  \n",
            " extracting: /content/val_images/val2017/000000300659.jpg  \n",
            " extracting: /content/val_images/val2017/000000563470.jpg  \n",
            " extracting: /content/val_images/val2017/000000468954.jpg  \n",
            " extracting: /content/val_images/val2017/000000081061.jpg  \n",
            " extracting: /content/val_images/val2017/000000520910.jpg  \n",
            " extracting: /content/val_images/val2017/000000568195.jpg  \n",
            " extracting: /content/val_images/val2017/000000388927.jpg  \n",
            " extracting: /content/val_images/val2017/000000357742.jpg  \n",
            " extracting: /content/val_images/val2017/000000042296.jpg  \n",
            " extracting: /content/val_images/val2017/000000482978.jpg  \n",
            " extracting: /content/val_images/val2017/000000472375.jpg  \n",
            " extracting: /content/val_images/val2017/000000363840.jpg  \n",
            " extracting: /content/val_images/val2017/000000282046.jpg  \n",
            " extracting: /content/val_images/val2017/000000400573.jpg  \n",
            " extracting: /content/val_images/val2017/000000352618.jpg  \n",
            " extracting: /content/val_images/val2017/000000427655.jpg  \n",
            " extracting: /content/val_images/val2017/000000325527.jpg  \n",
            " extracting: /content/val_images/val2017/000000523811.jpg  \n",
            " extracting: /content/val_images/val2017/000000189820.jpg  \n",
            " extracting: /content/val_images/val2017/000000439715.jpg  \n",
            " extracting: /content/val_images/val2017/000000000785.jpg  \n",
            " extracting: /content/val_images/val2017/000000512476.jpg  \n",
            " extracting: /content/val_images/val2017/000000437331.jpg  \n",
            " extracting: /content/val_images/val2017/000000325347.jpg  \n",
            " extracting: /content/val_images/val2017/000000229659.jpg  \n",
            " extracting: /content/val_images/val2017/000000225670.jpg  \n",
            " extracting: /content/val_images/val2017/000000154087.jpg  \n",
            " extracting: /content/val_images/val2017/000000232538.jpg  \n",
            " extracting: /content/val_images/val2017/000000144333.jpg  \n",
            " extracting: /content/val_images/val2017/000000300039.jpg  \n",
            " extracting: /content/val_images/val2017/000000117719.jpg  \n",
            " extracting: /content/val_images/val2017/000000297084.jpg  \n",
            " extracting: /content/val_images/val2017/000000553669.jpg  \n",
            " extracting: /content/val_images/val2017/000000409475.jpg  \n",
            " extracting: /content/val_images/val2017/000000554579.jpg  \n",
            " extracting: /content/val_images/val2017/000000398377.jpg  \n",
            " extracting: /content/val_images/val2017/000000577182.jpg  \n",
            " extracting: /content/val_images/val2017/000000080274.jpg  \n",
            " extracting: /content/val_images/val2017/000000235241.jpg  \n",
            " extracting: /content/val_images/val2017/000000359540.jpg  \n",
            " extracting: /content/val_images/val2017/000000252716.jpg  \n",
            " extracting: /content/val_images/val2017/000000562243.jpg  \n",
            " extracting: /content/val_images/val2017/000000335450.jpg  \n",
            " extracting: /content/val_images/val2017/000000128675.jpg  \n",
            " extracting: /content/val_images/val2017/000000183648.jpg  \n",
            " extracting: /content/val_images/val2017/000000437514.jpg  \n",
            " extracting: /content/val_images/val2017/000000375763.jpg  \n",
            " extracting: /content/val_images/val2017/000000357060.jpg  \n",
            " extracting: /content/val_images/val2017/000000403353.jpg  \n",
            " extracting: /content/val_images/val2017/000000507473.jpg  \n",
            " extracting: /content/val_images/val2017/000000001353.jpg  \n",
            " extracting: /content/val_images/val2017/000000153782.jpg  \n",
            " extracting: /content/val_images/val2017/000000051610.jpg  \n",
            " extracting: /content/val_images/val2017/000000210915.jpg  \n",
            " extracting: /content/val_images/val2017/000000460494.jpg  \n",
            " extracting: /content/val_images/val2017/000000396526.jpg  \n",
            " extracting: /content/val_images/val2017/000000344611.jpg  \n",
            " extracting: /content/val_images/val2017/000000160012.jpg  \n",
            " extracting: /content/val_images/val2017/000000467315.jpg  \n",
            " extracting: /content/val_images/val2017/000000535156.jpg  \n",
            " extracting: /content/val_images/val2017/000000204329.jpg  \n",
            " extracting: /content/val_images/val2017/000000084477.jpg  \n",
            " extracting: /content/val_images/val2017/000000455448.jpg  \n",
            " extracting: /content/val_images/val2017/000000452084.jpg  \n",
            " extracting: /content/val_images/val2017/000000234607.jpg  \n",
            " extracting: /content/val_images/val2017/000000301376.jpg  \n",
            " extracting: /content/val_images/val2017/000000425906.jpg  \n",
            " extracting: /content/val_images/val2017/000000151857.jpg  \n",
            " extracting: /content/val_images/val2017/000000060449.jpg  \n",
            " extracting: /content/val_images/val2017/000000145781.jpg  \n",
            " extracting: /content/val_images/val2017/000000532493.jpg  \n",
            " extracting: /content/val_images/val2017/000000298697.jpg  \n",
            " extracting: /content/val_images/val2017/000000166478.jpg  \n",
            " extracting: /content/val_images/val2017/000000551804.jpg  \n",
            " extracting: /content/val_images/val2017/000000515828.jpg  \n",
            " extracting: /content/val_images/val2017/000000463842.jpg  \n",
            " extracting: /content/val_images/val2017/000000113867.jpg  \n",
            " extracting: /content/val_images/val2017/000000485802.jpg  \n",
            " extracting: /content/val_images/val2017/000000189310.jpg  \n",
            " extracting: /content/val_images/val2017/000000519569.jpg  \n",
            " extracting: /content/val_images/val2017/000000216739.jpg  \n",
            " extracting: /content/val_images/val2017/000000098497.jpg  \n",
            " extracting: /content/val_images/val2017/000000370478.jpg  \n",
            " extracting: /content/val_images/val2017/000000121242.jpg  \n",
            " extracting: /content/val_images/val2017/000000498286.jpg  \n",
            " extracting: /content/val_images/val2017/000000136715.jpg  \n",
            " extracting: /content/val_images/val2017/000000343218.jpg  \n",
            " extracting: /content/val_images/val2017/000000348243.jpg  \n",
            " extracting: /content/val_images/val2017/000000508917.jpg  \n",
            " extracting: /content/val_images/val2017/000000058705.jpg  \n",
            " extracting: /content/val_images/val2017/000000525600.jpg  \n",
            " extracting: /content/val_images/val2017/000000347370.jpg  \n",
            " extracting: /content/val_images/val2017/000000401244.jpg  \n",
            " extracting: /content/val_images/val2017/000000333069.jpg  \n",
            " extracting: /content/val_images/val2017/000000527215.jpg  \n",
            " extracting: /content/val_images/val2017/000000199395.jpg  \n",
            " extracting: /content/val_images/val2017/000000574810.jpg  \n",
            " extracting: /content/val_images/val2017/000000273711.jpg  \n",
            " extracting: /content/val_images/val2017/000000159282.jpg  \n",
            " extracting: /content/val_images/val2017/000000576052.jpg  \n",
            " extracting: /content/val_images/val2017/000000017182.jpg  \n",
            " extracting: /content/val_images/val2017/000000276285.jpg  \n",
            " extracting: /content/val_images/val2017/000000047769.jpg  \n",
            " extracting: /content/val_images/val2017/000000513484.jpg  \n",
            " extracting: /content/val_images/val2017/000000077460.jpg  \n",
            " extracting: /content/val_images/val2017/000000136355.jpg  \n",
            " extracting: /content/val_images/val2017/000000006954.jpg  \n",
            " extracting: /content/val_images/val2017/000000115245.jpg  \n",
            " extracting: /content/val_images/val2017/000000345466.jpg  \n",
            " extracting: /content/val_images/val2017/000000302536.jpg  \n",
            " extracting: /content/val_images/val2017/000000088951.jpg  \n",
            " extracting: /content/val_images/val2017/000000044195.jpg  \n",
            " extracting: /content/val_images/val2017/000000546626.jpg  \n",
            " extracting: /content/val_images/val2017/000000009448.jpg  \n",
            " extracting: /content/val_images/val2017/000000205324.jpg  \n",
            " extracting: /content/val_images/val2017/000000061471.jpg  \n",
            " extracting: /content/val_images/val2017/000000474786.jpg  \n",
            " extracting: /content/val_images/val2017/000000462643.jpg  \n",
            " extracting: /content/val_images/val2017/000000450399.jpg  \n",
            " extracting: /content/val_images/val2017/000000410735.jpg  \n",
            " extracting: /content/val_images/val2017/000000436551.jpg  \n",
            " extracting: /content/val_images/val2017/000000232489.jpg  \n",
            " extracting: /content/val_images/val2017/000000437205.jpg  \n",
            " extracting: /content/val_images/val2017/000000575357.jpg  \n",
            " extracting: /content/val_images/val2017/000000128699.jpg  \n",
            " extracting: /content/val_images/val2017/000000017031.jpg  \n",
            " extracting: /content/val_images/val2017/000000313034.jpg  \n",
            " extracting: /content/val_images/val2017/000000457848.jpg  \n",
            " extracting: /content/val_images/val2017/000000391375.jpg  \n",
            " extracting: /content/val_images/val2017/000000535094.jpg  \n",
            " extracting: /content/val_images/val2017/000000182162.jpg  \n",
            " extracting: /content/val_images/val2017/000000095843.jpg  \n",
            " extracting: /content/val_images/val2017/000000020247.jpg  \n",
            " extracting: /content/val_images/val2017/000000144300.jpg  \n",
            " extracting: /content/val_images/val2017/000000100283.jpg  \n",
            " extracting: /content/val_images/val2017/000000417249.jpg  \n",
            " extracting: /content/val_images/val2017/000000532855.jpg  \n",
            " extracting: /content/val_images/val2017/000000433915.jpg  \n",
            " extracting: /content/val_images/val2017/000000477288.jpg  \n",
            " extracting: /content/val_images/val2017/000000210502.jpg  \n",
            " extracting: /content/val_images/val2017/000000000776.jpg  \n",
            " extracting: /content/val_images/val2017/000000166277.jpg  \n",
            " extracting: /content/val_images/val2017/000000133631.jpg  \n",
            " extracting: /content/val_images/val2017/000000085665.jpg  \n",
            " extracting: /content/val_images/val2017/000000378284.jpg  \n",
            " extracting: /content/val_images/val2017/000000190853.jpg  \n",
            " extracting: /content/val_images/val2017/000000397354.jpg  \n",
            " extracting: /content/val_images/val2017/000000353518.jpg  \n",
            " extracting: /content/val_images/val2017/000000356427.jpg  \n",
            " extracting: /content/val_images/val2017/000000477227.jpg  \n",
            " extracting: /content/val_images/val2017/000000033114.jpg  \n",
            " extracting: /content/val_images/val2017/000000565045.jpg  \n",
            " extracting: /content/val_images/val2017/000000245102.jpg  \n",
            " extracting: /content/val_images/val2017/000000296657.jpg  \n",
            " extracting: /content/val_images/val2017/000000556158.jpg  \n",
            " extracting: /content/val_images/val2017/000000554595.jpg  \n",
            " extracting: /content/val_images/val2017/000000546717.jpg  \n",
            " extracting: /content/val_images/val2017/000000557916.jpg  \n",
            " extracting: /content/val_images/val2017/000000486040.jpg  \n",
            " extracting: /content/val_images/val2017/000000095862.jpg  \n",
            " extracting: /content/val_images/val2017/000000433374.jpg  \n",
            " extracting: /content/val_images/val2017/000000184762.jpg  \n",
            " extracting: /content/val_images/val2017/000000326541.jpg  \n",
            " extracting: /content/val_images/val2017/000000113235.jpg  \n",
            " extracting: /content/val_images/val2017/000000503855.jpg  \n",
            " extracting: /content/val_images/val2017/000000044068.jpg  \n",
            " extracting: /content/val_images/val2017/000000522156.jpg  \n",
            " extracting: /content/val_images/val2017/000000338219.jpg  \n",
            " extracting: /content/val_images/val2017/000000309173.jpg  \n",
            " extracting: /content/val_images/val2017/000000416330.jpg  \n",
            " extracting: /content/val_images/val2017/000000186042.jpg  \n",
            " extracting: /content/val_images/val2017/000000574297.jpg  \n",
            " extracting: /content/val_images/val2017/000000431693.jpg  \n",
            " extracting: /content/val_images/val2017/000000060347.jpg  \n",
            " extracting: /content/val_images/val2017/000000022192.jpg  \n",
            " extracting: /content/val_images/val2017/000000566524.jpg  \n",
            " extracting: /content/val_images/val2017/000000560312.jpg  \n",
            " extracting: /content/val_images/val2017/000000364636.jpg  \n",
            " extracting: /content/val_images/val2017/000000344100.jpg  \n",
            " extracting: /content/val_images/val2017/000000537506.jpg  \n",
            " extracting: /content/val_images/val2017/000000373382.jpg  \n",
            " extracting: /content/val_images/val2017/000000398438.jpg  \n",
            " extracting: /content/val_images/val2017/000000357459.jpg  \n",
            " extracting: /content/val_images/val2017/000000528399.jpg  \n",
            " extracting: /content/val_images/val2017/000000368038.jpg  \n",
            " extracting: /content/val_images/val2017/000000575815.jpg  \n",
            " extracting: /content/val_images/val2017/000000183965.jpg  \n",
            " extracting: /content/val_images/val2017/000000014380.jpg  \n",
            " extracting: /content/val_images/val2017/000000189213.jpg  \n",
            " extracting: /content/val_images/val2017/000000148957.jpg  \n",
            " extracting: /content/val_images/val2017/000000489842.jpg  \n",
            " extracting: /content/val_images/val2017/000000085329.jpg  \n",
            " extracting: /content/val_images/val2017/000000445834.jpg  \n",
            " extracting: /content/val_images/val2017/000000047571.jpg  \n",
            " extracting: /content/val_images/val2017/000000371472.jpg  \n",
            " extracting: /content/val_images/val2017/000000232244.jpg  \n",
            " extracting: /content/val_images/val2017/000000279145.jpg  \n",
            " extracting: /content/val_images/val2017/000000324158.jpg  \n",
            " extracting: /content/val_images/val2017/000000250901.jpg  \n",
            " extracting: /content/val_images/val2017/000000418062.jpg  \n",
            " extracting: /content/val_images/val2017/000000416269.jpg  \n",
            " extracting: /content/val_images/val2017/000000312340.jpg  \n",
            " extracting: /content/val_images/val2017/000000228771.jpg  \n",
            " extracting: /content/val_images/val2017/000000524108.jpg  \n",
            " extracting: /content/val_images/val2017/000000356094.jpg  \n",
            " extracting: /content/val_images/val2017/000000553776.jpg  \n",
            " extracting: /content/val_images/val2017/000000414133.jpg  \n",
            " extracting: /content/val_images/val2017/000000579818.jpg  \n",
            " extracting: /content/val_images/val2017/000000356387.jpg  \n",
            " extracting: /content/val_images/val2017/000000269121.jpg  \n",
            " extracting: /content/val_images/val2017/000000222458.jpg  \n",
            " extracting: /content/val_images/val2017/000000537812.jpg  \n",
            " extracting: /content/val_images/val2017/000000429598.jpg  \n",
            " extracting: /content/val_images/val2017/000000025986.jpg  \n",
            " extracting: /content/val_images/val2017/000000097022.jpg  \n",
            " extracting: /content/val_images/val2017/000000362716.jpg  \n",
            " extracting: /content/val_images/val2017/000000161875.jpg  \n",
            " extracting: /content/val_images/val2017/000000028993.jpg  \n",
            " extracting: /content/val_images/val2017/000000382743.jpg  \n",
            " extracting: /content/val_images/val2017/000000290248.jpg  \n",
            " extracting: /content/val_images/val2017/000000576031.jpg  \n",
            " extracting: /content/val_images/val2017/000000273420.jpg  \n",
            " extracting: /content/val_images/val2017/000000146667.jpg  \n",
            " extracting: /content/val_images/val2017/000000369370.jpg  \n",
            " extracting: /content/val_images/val2017/000000402720.jpg  \n",
            " extracting: /content/val_images/val2017/000000056545.jpg  \n",
            " extracting: /content/val_images/val2017/000000082846.jpg  \n",
            " extracting: /content/val_images/val2017/000000454750.jpg  \n",
            " extracting: /content/val_images/val2017/000000295478.jpg  \n",
            " extracting: /content/val_images/val2017/000000194724.jpg  \n",
            " extracting: /content/val_images/val2017/000000139684.jpg  \n",
            " extracting: /content/val_images/val2017/000000451435.jpg  \n",
            " extracting: /content/val_images/val2017/000000032901.jpg  \n",
            " extracting: /content/val_images/val2017/000000580410.jpg  \n",
            " extracting: /content/val_images/val2017/000000579070.jpg  \n",
            " extracting: /content/val_images/val2017/000000355677.jpg  \n",
            " extracting: /content/val_images/val2017/000000393093.jpg  \n",
            " extracting: /content/val_images/val2017/000000370270.jpg  \n",
            " extracting: /content/val_images/val2017/000000155179.jpg  \n",
            " extracting: /content/val_images/val2017/000000256518.jpg  \n",
            " extracting: /content/val_images/val2017/000000048555.jpg  \n",
            " extracting: /content/val_images/val2017/000000119995.jpg  \n",
            " extracting: /content/val_images/val2017/000000512248.jpg  \n",
            " extracting: /content/val_images/val2017/000000038678.jpg  \n",
            " extracting: /content/val_images/val2017/000000135673.jpg  \n",
            " extracting: /content/val_images/val2017/000000498857.jpg  \n",
            " extracting: /content/val_images/val2017/000000166642.jpg  \n",
            " extracting: /content/val_images/val2017/000000542625.jpg  \n",
            " extracting: /content/val_images/val2017/000000534601.jpg  \n",
            " extracting: /content/val_images/val2017/000000255401.jpg  \n",
            " extracting: /content/val_images/val2017/000000097278.jpg  \n",
            " extracting: /content/val_images/val2017/000000291490.jpg  \n",
            " extracting: /content/val_images/val2017/000000537964.jpg  \n",
            " extracting: /content/val_images/val2017/000000369812.jpg  \n",
            " extracting: /content/val_images/val2017/000000459500.jpg  \n",
            " extracting: /content/val_images/val2017/000000322211.jpg  \n",
            " extracting: /content/val_images/val2017/000000370208.jpg  \n",
            " extracting: /content/val_images/val2017/000000550691.jpg  \n",
            " extracting: /content/val_images/val2017/000000226130.jpg  \n",
            " extracting: /content/val_images/val2017/000000212800.jpg  \n",
            " extracting: /content/val_images/val2017/000000093353.jpg  \n",
            " extracting: /content/val_images/val2017/000000161925.jpg  \n",
            " extracting: /content/val_images/val2017/000000342006.jpg  \n",
            " extracting: /content/val_images/val2017/000000128148.jpg  \n",
            " extracting: /content/val_images/val2017/000000396200.jpg  \n",
            " extracting: /content/val_images/val2017/000000396580.jpg  \n",
            " extracting: /content/val_images/val2017/000000450303.jpg  \n",
            " extracting: /content/val_images/val2017/000000463618.jpg  \n",
            " extracting: /content/val_images/val2017/000000491613.jpg  \n",
            " extracting: /content/val_images/val2017/000000433204.jpg  \n",
            " extracting: /content/val_images/val2017/000000491008.jpg  \n",
            " extracting: /content/val_images/val2017/000000152740.jpg  \n",
            " extracting: /content/val_images/val2017/000000119445.jpg  \n",
            " extracting: /content/val_images/val2017/000000089648.jpg  \n",
            " extracting: /content/val_images/val2017/000000061268.jpg  \n",
            " extracting: /content/val_images/val2017/000000570169.jpg  \n",
            " extracting: /content/val_images/val2017/000000168593.jpg  \n",
            " extracting: /content/val_images/val2017/000000526103.jpg  \n",
            " extracting: /content/val_images/val2017/000000329614.jpg  \n",
            " extracting: /content/val_images/val2017/000000079229.jpg  \n",
            " extracting: /content/val_images/val2017/000000529148.jpg  \n",
            " extracting: /content/val_images/val2017/000000034452.jpg  \n",
            " extracting: /content/val_images/val2017/000000341196.jpg  \n",
            " extracting: /content/val_images/val2017/000000457559.jpg  \n",
            " extracting: /content/val_images/val2017/000000210394.jpg  \n",
            " extracting: /content/val_images/val2017/000000471023.jpg  \n",
            " extracting: /content/val_images/val2017/000000181753.jpg  \n",
            " extracting: /content/val_images/val2017/000000497599.jpg  \n",
            " extracting: /content/val_images/val2017/000000384513.jpg  \n",
            " extracting: /content/val_images/val2017/000000559956.jpg  \n",
            " extracting: /content/val_images/val2017/000000149622.jpg  \n",
            " extracting: /content/val_images/val2017/000000529762.jpg  \n",
            " extracting: /content/val_images/val2017/000000119516.jpg  \n",
            " extracting: /content/val_images/val2017/000000295138.jpg  \n",
            " extracting: /content/val_images/val2017/000000515579.jpg  \n",
            " extracting: /content/val_images/val2017/000000559842.jpg  \n",
            " extracting: /content/val_images/val2017/000000439623.jpg  \n",
            " extracting: /content/val_images/val2017/000000557172.jpg  \n",
            " extracting: /content/val_images/val2017/000000284623.jpg  \n",
            " extracting: /content/val_images/val2017/000000277584.jpg  \n",
            " extracting: /content/val_images/val2017/000000476514.jpg  \n",
            " extracting: /content/val_images/val2017/000000463690.jpg  \n",
            " extracting: /content/val_images/val2017/000000330369.jpg  \n",
            " extracting: /content/val_images/val2017/000000116825.jpg  \n",
            " extracting: /content/val_images/val2017/000000505451.jpg  \n",
            " extracting: /content/val_images/val2017/000000070048.jpg  \n",
            " extracting: /content/val_images/val2017/000000565877.jpg  \n",
            " extracting: /content/val_images/val2017/000000220764.jpg  \n",
            " extracting: /content/val_images/val2017/000000482585.jpg  \n",
            " extracting: /content/val_images/val2017/000000468925.jpg  \n",
            " extracting: /content/val_images/val2017/000000364102.jpg  \n",
            " extracting: /content/val_images/val2017/000000407868.jpg  \n",
            " extracting: /content/val_images/val2017/000000370042.jpg  \n",
            " extracting: /content/val_images/val2017/000000581615.jpg  \n",
            " extracting: /content/val_images/val2017/000000311081.jpg  \n",
            " extracting: /content/val_images/val2017/000000502229.jpg  \n",
            " extracting: /content/val_images/val2017/000000425227.jpg  \n",
            " extracting: /content/val_images/val2017/000000157847.jpg  \n",
            " extracting: /content/val_images/val2017/000000376310.jpg  \n",
            " extracting: /content/val_images/val2017/000000170595.jpg  \n",
            " extracting: /content/val_images/val2017/000000226171.jpg  \n",
            " extracting: /content/val_images/val2017/000000082765.jpg  \n",
            " extracting: /content/val_images/val2017/000000005992.jpg  \n",
            " extracting: /content/val_images/val2017/000000435299.jpg  \n",
            " extracting: /content/val_images/val2017/000000266206.jpg  \n",
            " extracting: /content/val_images/val2017/000000121744.jpg  \n",
            " extracting: /content/val_images/val2017/000000216497.jpg  \n",
            " extracting: /content/val_images/val2017/000000425226.jpg  \n",
            " extracting: /content/val_images/val2017/000000402519.jpg  \n",
            " extracting: /content/val_images/val2017/000000326462.jpg  \n",
            " extracting: /content/val_images/val2017/000000094326.jpg  \n",
            " extracting: /content/val_images/val2017/000000549674.jpg  \n",
            " extracting: /content/val_images/val2017/000000163951.jpg  \n",
            " extracting: /content/val_images/val2017/000000455555.jpg  \n",
            " extracting: /content/val_images/val2017/000000575205.jpg  \n",
            " extracting: /content/val_images/val2017/000000502336.jpg  \n",
            " extracting: /content/val_images/val2017/000000526197.jpg  \n",
            " extracting: /content/val_images/val2017/000000504389.jpg  \n",
            " extracting: /content/val_images/val2017/000000138550.jpg  \n",
            " extracting: /content/val_images/val2017/000000255965.jpg  \n",
            " extracting: /content/val_images/val2017/000000405306.jpg  \n",
            " extracting: /content/val_images/val2017/000000199681.jpg  \n",
            " extracting: /content/val_images/val2017/000000286660.jpg  \n",
            " extracting: /content/val_images/val2017/000000300341.jpg  \n",
            " extracting: /content/val_images/val2017/000000325483.jpg  \n",
            " extracting: /content/val_images/val2017/000000187144.jpg  \n",
            " extracting: /content/val_images/val2017/000000281929.jpg  \n",
            " extracting: /content/val_images/val2017/000000451155.jpg  \n",
            " extracting: /content/val_images/val2017/000000313562.jpg  \n",
            " extracting: /content/val_images/val2017/000000231549.jpg  \n",
            " extracting: /content/val_images/val2017/000000038825.jpg  \n",
            " extracting: /content/val_images/val2017/000000259571.jpg  \n",
            " extracting: /content/val_images/val2017/000000494913.jpg  \n",
            " extracting: /content/val_images/val2017/000000213935.jpg  \n",
            " extracting: /content/val_images/val2017/000000203864.jpg  \n",
            " extracting: /content/val_images/val2017/000000334530.jpg  \n",
            " extracting: /content/val_images/val2017/000000372718.jpg  \n",
            " extracting: /content/val_images/val2017/000000356968.jpg  \n",
            " extracting: /content/val_images/val2017/000000416837.jpg  \n",
            " extracting: /content/val_images/val2017/000000514540.jpg  \n",
            " extracting: /content/val_images/val2017/000000457884.jpg  \n",
            " extracting: /content/val_images/val2017/000000511321.jpg  \n",
            " extracting: /content/val_images/val2017/000000095899.jpg  \n",
            " extracting: /content/val_images/val2017/000000064868.jpg  \n",
            " extracting: /content/val_images/val2017/000000482100.jpg  \n",
            " extracting: /content/val_images/val2017/000000442456.jpg  \n",
            " extracting: /content/val_images/val2017/000000308328.jpg  \n",
            " extracting: /content/val_images/val2017/000000528705.jpg  \n",
            " extracting: /content/val_images/val2017/000000512929.jpg  \n",
            " extracting: /content/val_images/val2017/000000569972.jpg  \n",
            " extracting: /content/val_images/val2017/000000023230.jpg  \n",
            " extracting: /content/val_images/val2017/000000319534.jpg  \n",
            " extracting: /content/val_images/val2017/000000167898.jpg  \n",
            " extracting: /content/val_images/val2017/000000139871.jpg  \n",
            " extracting: /content/val_images/val2017/000000363875.jpg  \n",
            " extracting: /content/val_images/val2017/000000017207.jpg  \n",
            " extracting: /content/val_images/val2017/000000384670.jpg  \n",
            " extracting: /content/val_images/val2017/000000489091.jpg  \n",
            " extracting: /content/val_images/val2017/000000514797.jpg  \n",
            " extracting: /content/val_images/val2017/000000274708.jpg  \n",
            " extracting: /content/val_images/val2017/000000342971.jpg  \n",
            " extracting: /content/val_images/val2017/000000126592.jpg  \n",
            " extracting: /content/val_images/val2017/000000393282.jpg  \n",
            " extracting: /content/val_images/val2017/000000150265.jpg  \n",
            " extracting: /content/val_images/val2017/000000400922.jpg  \n",
            " extracting: /content/val_images/val2017/000000050943.jpg  \n",
            " extracting: /content/val_images/val2017/000000002532.jpg  \n",
            " extracting: /content/val_images/val2017/000000290179.jpg  \n",
            " extracting: /content/val_images/val2017/000000055528.jpg  \n",
            " extracting: /content/val_images/val2017/000000429281.jpg  \n",
            " extracting: /content/val_images/val2017/000000385190.jpg  \n",
            " extracting: /content/val_images/val2017/000000372203.jpg  \n",
            " extracting: /content/val_images/val2017/000000213035.jpg  \n",
            " extracting: /content/val_images/val2017/000000377635.jpg  \n",
            " extracting: /content/val_images/val2017/000000042178.jpg  \n",
            " extracting: /content/val_images/val2017/000000309484.jpg  \n",
            " extracting: /content/val_images/val2017/000000287527.jpg  \n",
            " extracting: /content/val_images/val2017/000000412894.jpg  \n",
            " extracting: /content/val_images/val2017/000000308793.jpg  \n",
            " extracting: /content/val_images/val2017/000000357430.jpg  \n",
            " extracting: /content/val_images/val2017/000000245764.jpg  \n",
            " extracting: /content/val_images/val2017/000000416534.jpg  \n",
            " extracting: /content/val_images/val2017/000000314709.jpg  \n",
            " extracting: /content/val_images/val2017/000000415536.jpg  \n",
            " extracting: /content/val_images/val2017/000000392818.jpg  \n",
            " extracting: /content/val_images/val2017/000000339442.jpg  \n",
            " extracting: /content/val_images/val2017/000000270402.jpg  \n",
            " extracting: /content/val_images/val2017/000000146457.jpg  \n",
            " extracting: /content/val_images/val2017/000000428454.jpg  \n",
            " extracting: /content/val_images/val2017/000000268378.jpg  \n",
            " extracting: /content/val_images/val2017/000000033638.jpg  \n",
            " extracting: /content/val_images/val2017/000000307658.jpg  \n",
            " extracting: /content/val_images/val2017/000000132329.jpg  \n",
            " extracting: /content/val_images/val2017/000000394940.jpg  \n",
            " extracting: /content/val_images/val2017/000000455872.jpg  \n",
            " extracting: /content/val_images/val2017/000000099242.jpg  \n",
            " extracting: /content/val_images/val2017/000000530466.jpg  \n",
            " extracting: /content/val_images/val2017/000000482319.jpg  \n",
            " extracting: /content/val_images/val2017/000000190923.jpg  \n",
            " extracting: /content/val_images/val2017/000000543581.jpg  \n",
            " extracting: /content/val_images/val2017/000000201646.jpg  \n",
            " extracting: /content/val_images/val2017/000000011511.jpg  \n",
            " extracting: /content/val_images/val2017/000000402433.jpg  \n",
            " extracting: /content/val_images/val2017/000000376206.jpg  \n",
            " extracting: /content/val_images/val2017/000000007281.jpg  \n",
            " extracting: /content/val_images/val2017/000000445658.jpg  \n",
            " extracting: /content/val_images/val2017/000000479030.jpg  \n",
            " extracting: /content/val_images/val2017/000000321118.jpg  \n",
            " extracting: /content/val_images/val2017/000000120572.jpg  \n",
            " extracting: /content/val_images/val2017/000000186282.jpg  \n",
            " extracting: /content/val_images/val2017/000000477805.jpg  \n",
            " extracting: /content/val_images/val2017/000000438226.jpg  \n",
            " extracting: /content/val_images/val2017/000000036660.jpg  \n",
            " extracting: /content/val_images/val2017/000000230362.jpg  \n",
            " extracting: /content/val_images/val2017/000000175535.jpg  \n",
            " extracting: /content/val_images/val2017/000000255747.jpg  \n",
            " extracting: /content/val_images/val2017/000000328959.jpg  \n",
            " extracting: /content/val_images/val2017/000000460379.jpg  \n",
            " extracting: /content/val_images/val2017/000000261982.jpg  \n",
            " extracting: /content/val_images/val2017/000000461009.jpg  \n",
            " extracting: /content/val_images/val2017/000000105264.jpg  \n",
            " extracting: /content/val_images/val2017/000000525322.jpg  \n",
            " extracting: /content/val_images/val2017/000000260266.jpg  \n",
            " extracting: /content/val_images/val2017/000000001503.jpg  \n",
            " extracting: /content/val_images/val2017/000000057232.jpg  \n",
            " extracting: /content/val_images/val2017/000000374982.jpg  \n",
            " extracting: /content/val_images/val2017/000000106757.jpg  \n",
            " extracting: /content/val_images/val2017/000000132703.jpg  \n",
            " extracting: /content/val_images/val2017/000000236690.jpg  \n",
            " extracting: /content/val_images/val2017/000000405970.jpg  \n",
            " extracting: /content/val_images/val2017/000000456662.jpg  \n",
            " extracting: /content/val_images/val2017/000000259640.jpg  \n",
            " extracting: /content/val_images/val2017/000000025560.jpg  \n",
            " extracting: /content/val_images/val2017/000000134096.jpg  \n",
            " extracting: /content/val_images/val2017/000000379441.jpg  \n",
            " extracting: /content/val_images/val2017/000000217400.jpg  \n",
            " extracting: /content/val_images/val2017/000000039670.jpg  \n",
            " extracting: /content/val_images/val2017/000000236599.jpg  \n",
            " extracting: /content/val_images/val2017/000000052996.jpg  \n",
            " extracting: /content/val_images/val2017/000000214869.jpg  \n",
            " extracting: /content/val_images/val2017/000000008211.jpg  \n",
            " extracting: /content/val_images/val2017/000000106912.jpg  \n",
            " extracting: /content/val_images/val2017/000000154004.jpg  \n",
            " extracting: /content/val_images/val2017/000000173302.jpg  \n",
            " extracting: /content/val_images/val2017/000000537355.jpg  \n",
            " extracting: /content/val_images/val2017/000000221502.jpg  \n",
            " extracting: /content/val_images/val2017/000000098287.jpg  \n",
            " extracting: /content/val_images/val2017/000000343706.jpg  \n",
            " extracting: /content/val_images/val2017/000000251537.jpg  \n",
            " extracting: /content/val_images/val2017/000000238410.jpg  \n",
            " extracting: /content/val_images/val2017/000000364166.jpg  \n",
            " extracting: /content/val_images/val2017/000000187243.jpg  \n",
            " extracting: /content/val_images/val2017/000000076468.jpg  \n",
            " extracting: /content/val_images/val2017/000000387148.jpg  \n",
            " extracting: /content/val_images/val2017/000000465549.jpg  \n",
            " extracting: /content/val_images/val2017/000000153568.jpg  \n",
            " extracting: /content/val_images/val2017/000000192191.jpg  \n",
            " extracting: /content/val_images/val2017/000000379453.jpg  \n",
            " extracting: /content/val_images/val2017/000000224093.jpg  \n",
            " extracting: /content/val_images/val2017/000000349678.jpg  \n",
            " extracting: /content/val_images/val2017/000000325838.jpg  \n",
            " extracting: /content/val_images/val2017/000000042528.jpg  \n",
            " extracting: /content/val_images/val2017/000000448365.jpg  \n",
            " extracting: /content/val_images/val2017/000000388056.jpg  \n",
            " extracting: /content/val_images/val2017/000000124442.jpg  \n",
            " extracting: /content/val_images/val2017/000000361238.jpg  \n",
            " extracting: /content/val_images/val2017/000000572462.jpg  \n",
            " extracting: /content/val_images/val2017/000000161008.jpg  \n",
            " extracting: /content/val_images/val2017/000000509735.jpg  \n",
            " extracting: /content/val_images/val2017/000000465718.jpg  \n",
            " extracting: /content/val_images/val2017/000000080413.jpg  \n",
            " extracting: /content/val_images/val2017/000000185157.jpg  \n",
            " extracting: /content/val_images/val2017/000000360393.jpg  \n",
            " extracting: /content/val_images/val2017/000000496954.jpg  \n",
            " extracting: /content/val_images/val2017/000000335529.jpg  \n",
            " extracting: /content/val_images/val2017/000000559543.jpg  \n",
            " extracting: /content/val_images/val2017/000000063965.jpg  \n",
            " extracting: /content/val_images/val2017/000000467776.jpg  \n",
            " extracting: /content/val_images/val2017/000000309467.jpg  \n",
            " extracting: /content/val_images/val2017/000000516708.jpg  \n",
            " extracting: /content/val_images/val2017/000000417043.jpg  \n",
            " extracting: /content/val_images/val2017/000000375278.jpg  \n",
            " extracting: /content/val_images/val2017/000000336265.jpg  \n",
            " extracting: /content/val_images/val2017/000000552902.jpg  \n",
            " extracting: /content/val_images/val2017/000000188592.jpg  \n",
            " extracting: /content/val_images/val2017/000000161044.jpg  \n",
            " extracting: /content/val_images/val2017/000000530052.jpg  \n",
            " extracting: /content/val_images/val2017/000000431568.jpg  \n",
            " extracting: /content/val_images/val2017/000000192871.jpg  \n",
            " extracting: /content/val_images/val2017/000000217285.jpg  \n",
            " extracting: /content/val_images/val2017/000000210789.jpg  \n",
            " extracting: /content/val_images/val2017/000000482917.jpg  \n",
            " extracting: /content/val_images/val2017/000000040083.jpg  \n",
            " extracting: /content/val_images/val2017/000000106330.jpg  \n",
            " extracting: /content/val_images/val2017/000000320696.jpg  \n",
            " extracting: /content/val_images/val2017/000000002006.jpg  \n",
            " extracting: /content/val_images/val2017/000000025228.jpg  \n",
            " extracting: /content/val_images/val2017/000000072813.jpg  \n",
            " extracting: /content/val_images/val2017/000000259097.jpg  \n",
            " extracting: /content/val_images/val2017/000000077595.jpg  \n",
            " extracting: /content/val_images/val2017/000000209829.jpg  \n",
            " extracting: /content/val_images/val2017/000000554156.jpg  \n",
            " extracting: /content/val_images/val2017/000000262938.jpg  \n",
            " extracting: /content/val_images/val2017/000000236592.jpg  \n",
            " extracting: /content/val_images/val2017/000000556873.jpg  \n",
            " extracting: /content/val_images/val2017/000000064359.jpg  \n",
            " extracting: /content/val_images/val2017/000000206487.jpg  \n",
            " extracting: /content/val_images/val2017/000000432468.jpg  \n",
            " extracting: /content/val_images/val2017/000000001296.jpg  \n",
            " extracting: /content/val_images/val2017/000000027186.jpg  \n",
            " extracting: /content/val_images/val2017/000000406997.jpg  \n",
            " extracting: /content/val_images/val2017/000000546823.jpg  \n",
            " extracting: /content/val_images/val2017/000000236730.jpg  \n",
            " extracting: /content/val_images/val2017/000000460683.jpg  \n",
            " extracting: /content/val_images/val2017/000000206271.jpg  \n",
            " extracting: /content/val_images/val2017/000000213422.jpg  \n",
            " extracting: /content/val_images/val2017/000000526392.jpg  \n",
            " extracting: /content/val_images/val2017/000000337055.jpg  \n",
            " extracting: /content/val_images/val2017/000000456394.jpg  \n",
            " extracting: /content/val_images/val2017/000000378605.jpg  \n",
            " extracting: /content/val_images/val2017/000000328238.jpg  \n",
            " extracting: /content/val_images/val2017/000000522713.jpg  \n",
            " extracting: /content/val_images/val2017/000000426241.jpg  \n",
            " extracting: /content/val_images/val2017/000000048396.jpg  \n",
            " extracting: /content/val_images/val2017/000000416104.jpg  \n",
            " extracting: /content/val_images/val2017/000000041633.jpg  \n",
            " extracting: /content/val_images/val2017/000000396338.jpg  \n",
            " extracting: /content/val_images/val2017/000000404534.jpg  \n",
            " extracting: /content/val_images/val2017/000000518770.jpg  \n",
            " extracting: /content/val_images/val2017/000000500211.jpg  \n",
            " extracting: /content/val_images/val2017/000000299720.jpg  \n",
            " extracting: /content/val_images/val2017/000000177357.jpg  \n",
            " extracting: /content/val_images/val2017/000000252332.jpg  \n",
            " extracting: /content/val_images/val2017/000000276804.jpg  \n",
            " extracting: /content/val_images/val2017/000000214224.jpg  \n",
            " extracting: /content/val_images/val2017/000000484296.jpg  \n",
            " extracting: /content/val_images/val2017/000000297396.jpg  \n",
            " extracting: /content/val_images/val2017/000000214720.jpg  \n",
            " extracting: /content/val_images/val2017/000000486479.jpg  \n",
            " extracting: /content/val_images/val2017/000000023666.jpg  \n",
            " extracting: /content/val_images/val2017/000000340930.jpg  \n",
            " extracting: /content/val_images/val2017/000000528980.jpg  \n",
            " extracting: /content/val_images/val2017/000000267300.jpg  \n",
            " extracting: /content/val_images/val2017/000000559160.jpg  \n",
            " extracting: /content/val_images/val2017/000000007386.jpg  \n",
            " extracting: /content/val_images/val2017/000000105455.jpg  \n",
            " extracting: /content/val_images/val2017/000000489764.jpg  \n",
            " extracting: /content/val_images/val2017/000000537053.jpg  \n",
            " extracting: /content/val_images/val2017/000000084674.jpg  \n",
            " extracting: /content/val_images/val2017/000000117197.jpg  \n",
            " extracting: /content/val_images/val2017/000000361586.jpg  \n",
            " extracting: /content/val_images/val2017/000000250282.jpg  \n",
            " extracting: /content/val_images/val2017/000000203931.jpg  \n",
            " extracting: /content/val_images/val2017/000000050638.jpg  \n",
            " extracting: /content/val_images/val2017/000000115946.jpg  \n",
            " extracting: /content/val_images/val2017/000000538067.jpg  \n",
            " extracting: /content/val_images/val2017/000000366178.jpg  \n",
            " extracting: /content/val_images/val2017/000000402334.jpg  \n",
            " extracting: /content/val_images/val2017/000000329827.jpg  \n",
            " extracting: /content/val_images/val2017/000000127476.jpg  \n",
            " extracting: /content/val_images/val2017/000000228214.jpg  \n",
            " extracting: /content/val_images/val2017/000000347335.jpg  \n",
            " extracting: /content/val_images/val2017/000000485972.jpg  \n",
            " extracting: /content/val_images/val2017/000000496722.jpg  \n",
            " extracting: /content/val_images/val2017/000000156071.jpg  \n",
            " extracting: /content/val_images/val2017/000000434996.jpg  \n",
            " extracting: /content/val_images/val2017/000000277051.jpg  \n",
            " extracting: /content/val_images/val2017/000000579655.jpg  \n",
            " extracting: /content/val_images/val2017/000000131379.jpg  \n",
            " extracting: /content/val_images/val2017/000000110721.jpg  \n",
            " extracting: /content/val_images/val2017/000000401250.jpg  \n",
            " extracting: /content/val_images/val2017/000000162130.jpg  \n",
            " extracting: /content/val_images/val2017/000000418696.jpg  \n",
            " extracting: /content/val_images/val2017/000000286553.jpg  \n",
            " extracting: /content/val_images/val2017/000000231822.jpg  \n",
            " extracting: /content/val_images/val2017/000000268831.jpg  \n",
            " extracting: /content/val_images/val2017/000000098633.jpg  \n",
            " extracting: /content/val_images/val2017/000000423104.jpg  \n",
            " extracting: /content/val_images/val2017/000000168330.jpg  \n",
            " extracting: /content/val_images/val2017/000000172977.jpg  \n",
            " extracting: /content/val_images/val2017/000000078426.jpg  \n",
            " extracting: /content/val_images/val2017/000000279714.jpg  \n",
            " extracting: /content/val_images/val2017/000000181542.jpg  \n",
            " extracting: /content/val_images/val2017/000000404839.jpg  \n",
            " extracting: /content/val_images/val2017/000000167540.jpg  \n",
            " extracting: /content/val_images/val2017/000000159791.jpg  \n",
            " extracting: /content/val_images/val2017/000000004795.jpg  \n",
            " extracting: /content/val_images/val2017/000000208363.jpg  \n",
            " extracting: /content/val_images/val2017/000000351331.jpg  \n",
            " extracting: /content/val_images/val2017/000000511599.jpg  \n",
            " extracting: /content/val_images/val2017/000000572517.jpg  \n",
            " extracting: /content/val_images/val2017/000000517832.jpg  \n",
            " extracting: /content/val_images/val2017/000000568981.jpg  \n",
            " extracting: /content/val_images/val2017/000000422886.jpg  \n",
            " extracting: /content/val_images/val2017/000000568147.jpg  \n",
            " extracting: /content/val_images/val2017/000000448410.jpg  \n",
            " extracting: /content/val_images/val2017/000000167902.jpg  \n",
            " extracting: /content/val_images/val2017/000000278749.jpg  \n",
            " extracting: /content/val_images/val2017/000000335800.jpg  \n",
            " extracting: /content/val_images/val2017/000000224222.jpg  \n",
            " extracting: /content/val_images/val2017/000000002592.jpg  \n",
            " extracting: /content/val_images/val2017/000000010363.jpg  \n",
            " extracting: /content/val_images/val2017/000000109055.jpg  \n",
            " extracting: /content/val_images/val2017/000000138979.jpg  \n",
            " extracting: /content/val_images/val2017/000000220584.jpg  \n",
            " extracting: /content/val_images/val2017/000000006894.jpg  \n",
            " extracting: /content/val_images/val2017/000000416991.jpg  \n",
            " extracting: /content/val_images/val2017/000000368961.jpg  \n",
            " extracting: /content/val_images/val2017/000000395575.jpg  \n",
            " extracting: /content/val_images/val2017/000000384527.jpg  \n",
            " extracting: /content/val_images/val2017/000000078032.jpg  \n",
            " extracting: /content/val_images/val2017/000000032610.jpg  \n",
            " extracting: /content/val_images/val2017/000000563758.jpg  \n",
            " extracting: /content/val_images/val2017/000000050326.jpg  \n",
            " extracting: /content/val_images/val2017/000000157046.jpg  \n",
            " extracting: /content/val_images/val2017/000000140929.jpg  \n",
            " extracting: /content/val_images/val2017/000000489611.jpg  \n",
            " extracting: /content/val_images/val2017/000000017714.jpg  \n",
            " extracting: /content/val_images/val2017/000000506310.jpg  \n",
            " extracting: /content/val_images/val2017/000000065288.jpg  \n",
            " extracting: /content/val_images/val2017/000000061333.jpg  \n",
            " extracting: /content/val_images/val2017/000000465430.jpg  \n",
            " extracting: /content/val_images/val2017/000000316404.jpg  \n",
            " extracting: /content/val_images/val2017/000000037751.jpg  \n",
            " extracting: /content/val_images/val2017/000000189436.jpg  \n",
            " extracting: /content/val_images/val2017/000000193884.jpg  \n",
            " extracting: /content/val_images/val2017/000000552775.jpg  \n",
            " extracting: /content/val_images/val2017/000000387916.jpg  \n",
            " extracting: /content/val_images/val2017/000000402774.jpg  \n",
            " extracting: /content/val_images/val2017/000000327601.jpg  \n",
            " extracting: /content/val_images/val2017/000000532690.jpg  \n",
            " extracting: /content/val_images/val2017/000000162366.jpg  \n",
            " extracting: /content/val_images/val2017/000000286503.jpg  \n",
            " extracting: /content/val_images/val2017/000000102411.jpg  \n",
            " extracting: /content/val_images/val2017/000000378139.jpg  \n",
            " extracting: /content/val_images/val2017/000000032081.jpg  \n",
            " extracting: /content/val_images/val2017/000000138241.jpg  \n",
            " extracting: /content/val_images/val2017/000000417085.jpg  \n",
            " extracting: /content/val_images/val2017/000000047828.jpg  \n",
            " extracting: /content/val_images/val2017/000000527784.jpg  \n",
            " extracting: /content/val_images/val2017/000000578489.jpg  \n",
            " extracting: /content/val_images/val2017/000000011122.jpg  \n",
            " extracting: /content/val_images/val2017/000000484351.jpg  \n",
            " extracting: /content/val_images/val2017/000000039480.jpg  \n",
            " extracting: /content/val_images/val2017/000000243495.jpg  \n",
            " extracting: /content/val_images/val2017/000000324614.jpg  \n",
            " extracting: /content/val_images/val2017/000000505573.jpg  \n",
            " extracting: /content/val_images/val2017/000000525083.jpg  \n",
            " extracting: /content/val_images/val2017/000000453860.jpg  \n",
            " extracting: /content/val_images/val2017/000000370813.jpg  \n",
            " extracting: /content/val_images/val2017/000000470779.jpg  \n",
            " extracting: /content/val_images/val2017/000000578500.jpg  \n",
            " extracting: /content/val_images/val2017/000000286908.jpg  \n",
            " extracting: /content/val_images/val2017/000000337987.jpg  \n",
            " extracting: /content/val_images/val2017/000000498747.jpg  \n",
            " extracting: /content/val_images/val2017/000000403385.jpg  \n",
            " extracting: /content/val_images/val2017/000000400815.jpg  \n",
            " extracting: /content/val_images/val2017/000000211069.jpg  \n",
            " extracting: /content/val_images/val2017/000000082180.jpg  \n",
            " extracting: /content/val_images/val2017/000000361506.jpg  \n",
            " extracting: /content/val_images/val2017/000000281754.jpg  \n",
            " extracting: /content/val_images/val2017/000000508312.jpg  \n",
            " extracting: /content/val_images/val2017/000000166426.jpg  \n",
            " extracting: /content/val_images/val2017/000000015597.jpg  \n",
            " extracting: /content/val_images/val2017/000000371552.jpg  \n",
            " extracting: /content/val_images/val2017/000000136600.jpg  \n",
            " extracting: /content/val_images/val2017/000000446574.jpg  \n",
            " extracting: /content/val_images/val2017/000000575243.jpg  \n",
            " extracting: /content/val_images/val2017/000000193494.jpg  \n",
            " extracting: /content/val_images/val2017/000000066523.jpg  \n",
            " extracting: /content/val_images/val2017/000000331569.jpg  \n",
            " extracting: /content/val_images/val2017/000000475572.jpg  \n",
            " extracting: /content/val_images/val2017/000000149222.jpg  \n",
            " extracting: /content/val_images/val2017/000000557258.jpg  \n",
            " extracting: /content/val_images/val2017/000000200839.jpg  \n",
            " extracting: /content/val_images/val2017/000000369751.jpg  \n",
            " extracting: /content/val_images/val2017/000000561366.jpg  \n",
            " extracting: /content/val_images/val2017/000000426253.jpg  \n",
            " extracting: /content/val_images/val2017/000000244750.jpg  \n",
            " extracting: /content/val_images/val2017/000000514376.jpg  \n",
            " extracting: /content/val_images/val2017/000000019221.jpg  \n",
            " extracting: /content/val_images/val2017/000000460682.jpg  \n",
            " extracting: /content/val_images/val2017/000000453841.jpg  \n",
            " extracting: /content/val_images/val2017/000000497628.jpg  \n",
            " extracting: /content/val_images/val2017/000000215778.jpg  \n",
            " extracting: /content/val_images/val2017/000000523033.jpg  \n",
            " extracting: /content/val_images/val2017/000000144003.jpg  \n",
            " extracting: /content/val_images/val2017/000000507081.jpg  \n",
            " extracting: /content/val_images/val2017/000000293200.jpg  \n",
            " extracting: /content/val_images/val2017/000000032334.jpg  \n",
            " extracting: /content/val_images/val2017/000000393115.jpg  \n",
            " extracting: /content/val_images/val2017/000000010977.jpg  \n",
            " extracting: /content/val_images/val2017/000000492284.jpg  \n",
            " extracting: /content/val_images/val2017/000000409867.jpg  \n",
            " extracting: /content/val_images/val2017/000000251572.jpg  \n",
            " extracting: /content/val_images/val2017/000000441491.jpg  \n",
            " extracting: /content/val_images/val2017/000000309678.jpg  \n",
            " extracting: /content/val_images/val2017/000000232563.jpg  \n",
            " extracting: /content/val_images/val2017/000000373705.jpg  \n",
            " extracting: /content/val_images/val2017/000000327890.jpg  \n",
            " extracting: /content/val_images/val2017/000000269314.jpg  \n",
            " extracting: /content/val_images/val2017/000000562121.jpg  \n",
            " extracting: /content/val_images/val2017/000000530470.jpg  \n",
            " extracting: /content/val_images/val2017/000000108503.jpg  \n",
            " extracting: /content/val_images/val2017/000000410428.jpg  \n",
            " extracting: /content/val_images/val2017/000000369771.jpg  \n",
            " extracting: /content/val_images/val2017/000000207844.jpg  \n",
            " extracting: /content/val_images/val2017/000000509699.jpg  \n",
            " extracting: /content/val_images/val2017/000000393014.jpg  \n",
            " extracting: /content/val_images/val2017/000000560911.jpg  \n",
            " extracting: /content/val_images/val2017/000000570471.jpg  \n",
            " extracting: /content/val_images/val2017/000000384350.jpg  \n",
            " extracting: /content/val_images/val2017/000000410880.jpg  \n",
            " extracting: /content/val_images/val2017/000000325031.jpg  \n",
            " extracting: /content/val_images/val2017/000000031620.jpg  \n",
            " extracting: /content/val_images/val2017/000000464522.jpg  \n",
            " extracting: /content/val_images/val2017/000000547502.jpg  \n",
            " extracting: /content/val_images/val2017/000000320706.jpg  \n",
            " extracting: /content/val_images/val2017/000000501243.jpg  \n",
            " extracting: /content/val_images/val2017/000000417285.jpg  \n",
            " extracting: /content/val_images/val2017/000000165039.jpg  \n",
            " extracting: /content/val_images/val2017/000000078420.jpg  \n",
            " extracting: /content/val_images/val2017/000000322944.jpg  \n",
            " extracting: /content/val_images/val2017/000000468501.jpg  \n",
            " extracting: /content/val_images/val2017/000000068765.jpg  \n",
            " extracting: /content/val_images/val2017/000000570456.jpg  \n",
            " extracting: /content/val_images/val2017/000000468577.jpg  \n",
            " extracting: /content/val_images/val2017/000000072281.jpg  \n",
            " extracting: /content/val_images/val2017/000000322429.jpg  \n",
            " extracting: /content/val_images/val2017/000000075456.jpg  \n",
            " extracting: /content/val_images/val2017/000000159684.jpg  \n",
            " extracting: /content/val_images/val2017/000000361268.jpg  \n",
            " extracting: /content/val_images/val2017/000000404923.jpg  \n",
            " extracting: /content/val_images/val2017/000000205401.jpg  \n",
            " extracting: /content/val_images/val2017/000000225757.jpg  \n",
            " extracting: /content/val_images/val2017/000000199977.jpg  \n",
            " extracting: /content/val_images/val2017/000000161128.jpg  \n",
            " extracting: /content/val_images/val2017/000000086582.jpg  \n",
            " extracting: /content/val_images/val2017/000000426203.jpg  \n",
            " extracting: /content/val_images/val2017/000000266082.jpg  \n",
            " extracting: /content/val_images/val2017/000000229553.jpg  \n",
            " extracting: /content/val_images/val2017/000000224807.jpg  \n",
            " extracting: /content/val_images/val2017/000000133418.jpg  \n",
            " extracting: /content/val_images/val2017/000000261712.jpg  \n",
            " extracting: /content/val_images/val2017/000000442161.jpg  \n",
            " extracting: /content/val_images/val2017/000000477118.jpg  \n",
            " extracting: /content/val_images/val2017/000000525247.jpg  \n",
            " extracting: /content/val_images/val2017/000000227765.jpg  \n",
            " extracting: /content/val_images/val2017/000000537672.jpg  \n",
            " extracting: /content/val_images/val2017/000000065350.jpg  \n",
            " extracting: /content/val_images/val2017/000000126216.jpg  \n",
            " extracting: /content/val_images/val2017/000000125129.jpg  \n",
            " extracting: /content/val_images/val2017/000000347930.jpg  \n",
            " extracting: /content/val_images/val2017/000000560474.jpg  \n",
            " extracting: /content/val_images/val2017/000000112298.jpg  \n",
            " extracting: /content/val_images/val2017/000000012670.jpg  \n",
            " extracting: /content/val_images/val2017/000000039484.jpg  \n",
            " extracting: /content/val_images/val2017/000000389316.jpg  \n",
            " extracting: /content/val_images/val2017/000000435003.jpg  \n",
            " extracting: /content/val_images/val2017/000000130386.jpg  \n",
            " extracting: /content/val_images/val2017/000000231831.jpg  \n",
            " extracting: /content/val_images/val2017/000000057238.jpg  \n",
            " extracting: /content/val_images/val2017/000000148707.jpg  \n",
            " extracting: /content/val_images/val2017/000000074860.jpg  \n",
            " extracting: /content/val_images/val2017/000000409630.jpg  \n",
            " extracting: /content/val_images/val2017/000000463174.jpg  \n",
            " extracting: /content/val_images/val2017/000000453040.jpg  \n",
            " extracting: /content/val_images/val2017/000000149406.jpg  \n",
            " extracting: /content/val_images/val2017/000000101420.jpg  \n",
            " extracting: /content/val_images/val2017/000000224200.jpg  \n",
            " extracting: /content/val_images/val2017/000000377575.jpg  \n",
            " extracting: /content/val_images/val2017/000000278353.jpg  \n",
            " extracting: /content/val_images/val2017/000000200252.jpg  \n",
            " extracting: /content/val_images/val2017/000000239857.jpg  \n",
            " extracting: /content/val_images/val2017/000000286708.jpg  \n",
            " extracting: /content/val_images/val2017/000000440507.jpg  \n",
            " extracting: /content/val_images/val2017/000000347163.jpg  \n",
            " extracting: /content/val_images/val2017/000000493864.jpg  \n",
            " extracting: /content/val_images/val2017/000000238013.jpg  \n",
            " extracting: /content/val_images/val2017/000000290768.jpg  \n",
            " extracting: /content/val_images/val2017/000000151820.jpg  \n",
            " extracting: /content/val_images/val2017/000000087144.jpg  \n",
            " extracting: /content/val_images/val2017/000000513283.jpg  \n",
            " extracting: /content/val_images/val2017/000000018575.jpg  \n",
            " extracting: /content/val_images/val2017/000000070739.jpg  \n",
            " extracting: /content/val_images/val2017/000000292456.jpg  \n",
            " extracting: /content/val_images/val2017/000000042628.jpg  \n",
            " extracting: /content/val_images/val2017/000000047121.jpg  \n",
            " extracting: /content/val_images/val2017/000000323751.jpg  \n",
            " extracting: /content/val_images/val2017/000000479099.jpg  \n",
            " extracting: /content/val_images/val2017/000000397327.jpg  \n",
            " extracting: /content/val_images/val2017/000000356612.jpg  \n",
            " extracting: /content/val_images/val2017/000000366711.jpg  \n",
            " extracting: /content/val_images/val2017/000000163314.jpg  \n",
            " extracting: /content/val_images/val2017/000000005503.jpg  \n",
            " extracting: /content/val_images/val2017/000000066038.jpg  \n",
            " extracting: /content/val_images/val2017/000000392481.jpg  \n",
            " extracting: /content/val_images/val2017/000000125778.jpg  \n",
            " extracting: /content/val_images/val2017/000000562843.jpg  \n",
            " extracting: /content/val_images/val2017/000000393569.jpg  \n",
            " extracting: /content/val_images/val2017/000000428111.jpg  \n",
            " extracting: /content/val_images/val2017/000000099054.jpg  \n",
            " extracting: /content/val_images/val2017/000000484404.jpg  \n",
            " extracting: /content/val_images/val2017/000000205776.jpg  \n",
            " extracting: /content/val_images/val2017/000000210708.jpg  \n",
            " extracting: /content/val_images/val2017/000000049091.jpg  \n",
            " extracting: /content/val_images/val2017/000000013004.jpg  \n",
            " extracting: /content/val_images/val2017/000000134722.jpg  \n",
            " extracting: /content/val_images/val2017/000000174018.jpg  \n",
            " extracting: /content/val_images/val2017/000000142238.jpg  \n",
            " extracting: /content/val_images/val2017/000000140658.jpg  \n",
            " extracting: /content/val_images/val2017/000000521282.jpg  \n",
            " extracting: /content/val_images/val2017/000000344909.jpg  \n",
            " extracting: /content/val_images/val2017/000000181303.jpg  \n",
            " extracting: /content/val_images/val2017/000000037988.jpg  \n",
            " extracting: /content/val_images/val2017/000000537991.jpg  \n",
            " extracting: /content/val_images/val2017/000000174371.jpg  \n",
            " extracting: /content/val_images/val2017/000000001532.jpg  \n",
            " extracting: /content/val_images/val2017/000000344795.jpg  \n",
            " extracting: /content/val_images/val2017/000000131138.jpg  \n",
            " extracting: /content/val_images/val2017/000000429690.jpg  \n",
            " extracting: /content/val_images/val2017/000000263299.jpg  \n",
            " extracting: /content/val_images/val2017/000000135561.jpg  \n",
            " extracting: /content/val_images/val2017/000000016958.jpg  \n",
            " extracting: /content/val_images/val2017/000000367095.jpg  \n",
            " extracting: /content/val_images/val2017/000000082715.jpg  \n",
            " extracting: /content/val_images/val2017/000000516038.jpg  \n",
            " extracting: /content/val_images/val2017/000000243148.jpg  \n",
            " extracting: /content/val_images/val2017/000000390826.jpg  \n",
            " extracting: /content/val_images/val2017/000000262631.jpg  \n",
            " extracting: /content/val_images/val2017/000000498807.jpg  \n",
            " extracting: /content/val_images/val2017/000000483050.jpg  \n",
            " extracting: /content/val_images/val2017/000000451308.jpg  \n",
            " extracting: /content/val_images/val2017/000000058539.jpg  \n",
            " extracting: /content/val_images/val2017/000000047112.jpg  \n",
            " extracting: /content/val_images/val2017/000000406129.jpg  \n",
            " extracting: /content/val_images/val2017/000000545407.jpg  \n",
            " extracting: /content/val_images/val2017/000000565853.jpg  \n",
            " extracting: /content/val_images/val2017/000000326082.jpg  \n",
            " extracting: /content/val_images/val2017/000000272416.jpg  \n",
            " extracting: /content/val_images/val2017/000000071756.jpg  \n",
            " extracting: /content/val_images/val2017/000000577864.jpg  \n",
            " extracting: /content/val_images/val2017/000000481386.jpg  \n",
            " extracting: /content/val_images/val2017/000000007574.jpg  \n",
            " extracting: /content/val_images/val2017/000000039551.jpg  \n",
            " extracting: /content/val_images/val2017/000000264441.jpg  \n",
            " extracting: /content/val_images/val2017/000000146831.jpg  \n",
            " extracting: /content/val_images/val2017/000000366884.jpg  \n",
            " extracting: /content/val_images/val2017/000000416758.jpg  \n",
            " extracting: /content/val_images/val2017/000000153229.jpg  \n",
            " extracting: /content/val_images/val2017/000000061747.jpg  \n",
            " extracting: /content/val_images/val2017/000000021503.jpg  \n",
            " extracting: /content/val_images/val2017/000000179487.jpg  \n",
            " extracting: /content/val_images/val2017/000000526728.jpg  \n",
            " extracting: /content/val_images/val2017/000000252219.jpg  \n",
            " extracting: /content/val_images/val2017/000000190841.jpg  \n",
            " extracting: /content/val_images/val2017/000000073153.jpg  \n",
            " extracting: /content/val_images/val2017/000000129812.jpg  \n",
            " extracting: /content/val_images/val2017/000000488166.jpg  \n",
            " extracting: /content/val_images/val2017/000000258883.jpg  \n",
            " extracting: /content/val_images/val2017/000000206838.jpg  \n",
            " extracting: /content/val_images/val2017/000000013177.jpg  \n",
            " extracting: /content/val_images/val2017/000000094185.jpg  \n",
            " extracting: /content/val_images/val2017/000000460967.jpg  \n",
            " extracting: /content/val_images/val2017/000000342128.jpg  \n",
            " extracting: /content/val_images/val2017/000000284296.jpg  \n",
            " extracting: /content/val_images/val2017/000000538458.jpg  \n",
            " extracting: /content/val_images/val2017/000000032887.jpg  \n",
            " extracting: /content/val_images/val2017/000000529122.jpg  \n",
            " extracting: /content/val_images/val2017/000000481573.jpg  \n",
            " extracting: /content/val_images/val2017/000000442009.jpg  \n",
            " extracting: /content/val_images/val2017/000000574702.jpg  \n",
            " extracting: /content/val_images/val2017/000000177383.jpg  \n",
            " extracting: /content/val_images/val2017/000000416745.jpg  \n",
            " extracting: /content/val_images/val2017/000000008021.jpg  \n",
            " extracting: /content/val_images/val2017/000000478862.jpg  \n",
            " extracting: /content/val_images/val2017/000000190140.jpg  \n",
            " extracting: /content/val_images/val2017/000000468632.jpg  \n",
            " extracting: /content/val_images/val2017/000000109118.jpg  \n",
            " extracting: /content/val_images/val2017/000000011149.jpg  \n",
            " extracting: /content/val_images/val2017/000000083531.jpg  \n",
            " extracting: /content/val_images/val2017/000000372577.jpg  \n",
            " extracting: /content/val_images/val2017/000000102331.jpg  \n",
            " extracting: /content/val_images/val2017/000000227898.jpg  \n",
            " extracting: /content/val_images/val2017/000000419601.jpg  \n",
            " extracting: /content/val_images/val2017/000000157390.jpg  \n",
            " extracting: /content/val_images/val2017/000000025424.jpg  \n",
            " extracting: /content/val_images/val2017/000000024919.jpg  \n",
            " extracting: /content/val_images/val2017/000000537241.jpg  \n",
            " extracting: /content/val_images/val2017/000000255749.jpg  \n",
            " extracting: /content/val_images/val2017/000000377723.jpg  \n",
            " extracting: /content/val_images/val2017/000000486112.jpg  \n",
            " extracting: /content/val_images/val2017/000000325991.jpg  \n",
            " extracting: /content/val_images/val2017/000000369323.jpg  \n",
            " extracting: /content/val_images/val2017/000000563648.jpg  \n",
            " extracting: /content/val_images/val2017/000000163746.jpg  \n",
            " extracting: /content/val_images/val2017/000000458755.jpg  \n",
            " extracting: /content/val_images/val2017/000000399655.jpg  \n",
            " extracting: /content/val_images/val2017/000000265518.jpg  \n",
            " extracting: /content/val_images/val2017/000000302165.jpg  \n",
            " extracting: /content/val_images/val2017/000000021465.jpg  \n",
            " extracting: /content/val_images/val2017/000000063154.jpg  \n",
            " extracting: /content/val_images/val2017/000000279769.jpg  \n",
            " extracting: /content/val_images/val2017/000000248111.jpg  \n",
            " extracting: /content/val_images/val2017/000000485844.jpg  \n",
            " extracting: /content/val_images/val2017/000000289702.jpg  \n",
            " extracting: /content/val_images/val2017/000000123131.jpg  \n",
            " extracting: /content/val_images/val2017/000000581482.jpg  \n",
            " extracting: /content/val_images/val2017/000000579902.jpg  \n",
            " extracting: /content/val_images/val2017/000000230993.jpg  \n",
            " extracting: /content/val_images/val2017/000000165831.jpg  \n",
            " extracting: /content/val_images/val2017/000000479248.jpg  \n",
            " extracting: /content/val_images/val2017/000000051961.jpg  \n",
            " extracting: /content/val_images/val2017/000000136033.jpg  \n",
            " extracting: /content/val_images/val2017/000000458768.jpg  \n",
            " extracting: /content/val_images/val2017/000000111951.jpg  \n",
            " extracting: /content/val_images/val2017/000000450686.jpg  \n",
            " extracting: /content/val_images/val2017/000000460333.jpg  \n",
            " extracting: /content/val_images/val2017/000000407083.jpg  \n",
            " extracting: /content/val_images/val2017/000000277689.jpg  \n",
            " extracting: /content/val_images/val2017/000000403817.jpg  \n",
            " extracting: /content/val_images/val2017/000000480842.jpg  \n",
            " extracting: /content/val_images/val2017/000000119452.jpg  \n",
            " extracting: /content/val_images/val2017/000000173091.jpg  \n",
            " extracting: /content/val_images/val2017/000000125806.jpg  \n",
            " extracting: /content/val_images/val2017/000000321790.jpg  \n",
            " extracting: /content/val_images/val2017/000000450758.jpg  \n",
            " extracting: /content/val_images/val2017/000000224724.jpg  \n",
            " extracting: /content/val_images/val2017/000000287874.jpg  \n",
            " extracting: /content/val_images/val2017/000000361142.jpg  \n",
            " extracting: /content/val_images/val2017/000000439180.jpg  \n",
            " extracting: /content/val_images/val2017/000000177539.jpg  \n",
            " extracting: /content/val_images/val2017/000000228981.jpg  \n",
            " extracting: /content/val_images/val2017/000000509719.jpg  \n",
            " extracting: /content/val_images/val2017/000000071938.jpg  \n",
            " extracting: /content/val_images/val2017/000000016502.jpg  \n",
            " extracting: /content/val_images/val2017/000000098853.jpg  \n",
            " extracting: /content/val_images/val2017/000000094944.jpg  \n",
            " extracting: /content/val_images/val2017/000000168883.jpg  \n",
            " extracting: /content/val_images/val2017/000000267169.jpg  \n",
            " extracting: /content/val_images/val2017/000000422670.jpg  \n",
            " extracting: /content/val_images/val2017/000000269866.jpg  \n",
            " extracting: /content/val_images/val2017/000000135604.jpg  \n",
            " extracting: /content/val_images/val2017/000000009772.jpg  \n",
            " extracting: /content/val_images/val2017/000000050380.jpg  \n",
            " extracting: /content/val_images/val2017/000000404484.jpg  \n",
            " extracting: /content/val_images/val2017/000000009483.jpg  \n",
            " extracting: /content/val_images/val2017/000000413552.jpg  \n",
            " extracting: /content/val_images/val2017/000000131938.jpg  \n",
            " extracting: /content/val_images/val2017/000000348216.jpg  \n",
            " extracting: /content/val_images/val2017/000000460160.jpg  \n",
            " extracting: /content/val_images/val2017/000000109827.jpg  \n",
            " extracting: /content/val_images/val2017/000000009590.jpg  \n",
            " extracting: /content/val_images/val2017/000000271457.jpg  \n",
            " extracting: /content/val_images/val2017/000000260470.jpg  \n",
            " extracting: /content/val_images/val2017/000000570448.jpg  \n",
            " extracting: /content/val_images/val2017/000000167240.jpg  \n",
            " extracting: /content/val_images/val2017/000000009914.jpg  \n",
            " extracting: /content/val_images/val2017/000000495146.jpg  \n",
            " extracting: /content/val_images/val2017/000000112378.jpg  \n",
            " extracting: /content/val_images/val2017/000000104424.jpg  \n",
            " extracting: /content/val_images/val2017/000000420916.jpg  \n",
            " extracting: /content/val_images/val2017/000000110042.jpg  \n",
            " extracting: /content/val_images/val2017/000000051314.jpg  \n",
            " extracting: /content/val_images/val2017/000000457078.jpg  \n",
            " extracting: /content/val_images/val2017/000000405249.jpg  \n",
            " extracting: /content/val_images/val2017/000000476491.jpg  \n",
            " extracting: /content/val_images/val2017/000000367228.jpg  \n",
            " extracting: /content/val_images/val2017/000000187249.jpg  \n",
            " extracting: /content/val_images/val2017/000000472623.jpg  \n",
            " extracting: /content/val_images/val2017/000000555972.jpg  \n",
            " extracting: /content/val_images/val2017/000000304817.jpg  \n",
            " extracting: /content/val_images/val2017/000000397133.jpg  \n",
            " extracting: /content/val_images/val2017/000000578236.jpg  \n",
            " extracting: /content/val_images/val2017/000000214192.jpg  \n",
            " extracting: /content/val_images/val2017/000000478393.jpg  \n",
            " extracting: /content/val_images/val2017/000000573094.jpg  \n",
            " extracting: /content/val_images/val2017/000000560256.jpg  \n",
            " extracting: /content/val_images/val2017/000000047801.jpg  \n",
            " extracting: /content/val_images/val2017/000000325306.jpg  \n",
            " extracting: /content/val_images/val2017/000000434548.jpg  \n",
            " extracting: /content/val_images/val2017/000000215723.jpg  \n",
            " extracting: /content/val_images/val2017/000000130566.jpg  \n",
            " extracting: /content/val_images/val2017/000000308165.jpg  \n",
            " extracting: /content/val_images/val2017/000000463522.jpg  \n",
            " extracting: /content/val_images/val2017/000000099039.jpg  \n",
            " extracting: /content/val_images/val2017/000000037689.jpg  \n",
            " extracting: /content/val_images/val2017/000000066926.jpg  \n",
            " extracting: /content/val_images/val2017/000000036678.jpg  \n",
            " extracting: /content/val_images/val2017/000000384651.jpg  \n",
            " extracting: /content/val_images/val2017/000000458109.jpg  \n",
            " extracting: /content/val_images/val2017/000000191288.jpg  \n",
            " extracting: /content/val_images/val2017/000000488251.jpg  \n",
            " extracting: /content/val_images/val2017/000000453981.jpg  \n",
            " extracting: /content/val_images/val2017/000000225405.jpg  \n",
            " extracting: /content/val_images/val2017/000000091495.jpg  \n",
            " extracting: /content/val_images/val2017/000000569273.jpg  \n",
            " extracting: /content/val_images/val2017/000000295809.jpg  \n",
            " extracting: /content/val_images/val2017/000000193181.jpg  \n",
            " extracting: /content/val_images/val2017/000000439593.jpg  \n",
            " extracting: /content/val_images/val2017/000000366199.jpg  \n",
            " extracting: /content/val_images/val2017/000000303305.jpg  \n",
            " extracting: /content/val_images/val2017/000000562229.jpg  \n",
            " extracting: /content/val_images/val2017/000000283070.jpg  \n",
            " extracting: /content/val_images/val2017/000000245448.jpg  \n",
            " extracting: /content/val_images/val2017/000000123585.jpg  \n",
            " extracting: /content/val_images/val2017/000000251119.jpg  \n",
            " extracting: /content/val_images/val2017/000000513567.jpg  \n",
            " extracting: /content/val_images/val2017/000000572678.jpg  \n",
            " extracting: /content/val_images/val2017/000000163611.jpg  \n",
            " extracting: /content/val_images/val2017/000000083113.jpg  \n",
            " extracting: /content/val_images/val2017/000000321214.jpg  \n",
            " extracting: /content/val_images/val2017/000000292236.jpg  \n",
            " extracting: /content/val_images/val2017/000000172877.jpg  \n",
            " extracting: /content/val_images/val2017/000000412240.jpg  \n",
            " extracting: /content/val_images/val2017/000000493772.jpg  \n",
            " extracting: /content/val_images/val2017/000000368212.jpg  \n",
            " extracting: /content/val_images/val2017/000000424551.jpg  \n",
            " extracting: /content/val_images/val2017/000000305317.jpg  \n",
            " extracting: /content/val_images/val2017/000000466256.jpg  \n",
            " extracting: /content/val_images/val2017/000000383676.jpg  \n",
            " extracting: /content/val_images/val2017/000000580197.jpg  \n",
            " extracting: /content/val_images/val2017/000000395801.jpg  \n",
            " extracting: /content/val_images/val2017/000000530836.jpg  \n",
            " extracting: /content/val_images/val2017/000000530975.jpg  \n",
            " extracting: /content/val_images/val2017/000000569917.jpg  \n",
            " extracting: /content/val_images/val2017/000000127135.jpg  \n",
            " extracting: /content/val_images/val2017/000000304984.jpg  \n",
            " extracting: /content/val_images/val2017/000000121497.jpg  \n",
            " extracting: /content/val_images/val2017/000000159977.jpg  \n",
            " extracting: /content/val_images/val2017/000000102820.jpg  \n",
            " extracting: /content/val_images/val2017/000000275749.jpg  \n",
            " extracting: /content/val_images/val2017/000000029984.jpg  \n",
            " extracting: /content/val_images/val2017/000000486573.jpg  \n",
            " extracting: /content/val_images/val2017/000000013348.jpg  \n",
            " extracting: /content/val_images/val2017/000000539143.jpg  \n",
            " extracting: /content/val_images/val2017/000000031735.jpg  \n",
            " extracting: /content/val_images/val2017/000000210230.jpg  \n",
            " extracting: /content/val_images/val2017/000000025603.jpg  \n",
            " extracting: /content/val_images/val2017/000000114884.jpg  \n",
            " extracting: /content/val_images/val2017/000000036861.jpg  \n",
            " extracting: /content/val_images/val2017/000000232088.jpg  \n",
            " extracting: /content/val_images/val2017/000000473118.jpg  \n",
            " extracting: /content/val_images/val2017/000000008532.jpg  \n",
            " extracting: /content/val_images/val2017/000000382111.jpg  \n",
            " extracting: /content/val_images/val2017/000000217060.jpg  \n",
            " extracting: /content/val_images/val2017/000000237864.jpg  \n",
            " extracting: /content/val_images/val2017/000000198641.jpg  \n",
            " extracting: /content/val_images/val2017/000000327701.jpg  \n",
            " extracting: /content/val_images/val2017/000000072795.jpg  \n",
            " extracting: /content/val_images/val2017/000000118921.jpg  \n",
            " extracting: /content/val_images/val2017/000000196009.jpg  \n",
            " extracting: /content/val_images/val2017/000000286458.jpg  \n",
            " extracting: /content/val_images/val2017/000000533958.jpg  \n",
            " extracting: /content/val_images/val2017/000000002261.jpg  \n",
            " extracting: /content/val_images/val2017/000000522751.jpg  \n",
            " extracting: /content/val_images/val2017/000000509260.jpg  \n",
            " extracting: /content/val_images/val2017/000000440508.jpg  \n",
            " extracting: /content/val_images/val2017/000000536073.jpg  \n",
            " extracting: /content/val_images/val2017/000000207728.jpg  \n",
            " extracting: /content/val_images/val2017/000000378454.jpg  \n",
            " extracting: /content/val_images/val2017/000000068409.jpg  \n",
            " extracting: /content/val_images/val2017/000000140076.jpg  \n",
            " extracting: /content/val_images/val2017/000000454067.jpg  \n",
            " extracting: /content/val_images/val2017/000000483999.jpg  \n",
            " extracting: /content/val_images/val2017/000000570736.jpg  \n",
            " extracting: /content/val_images/val2017/000000475904.jpg  \n",
            " extracting: /content/val_images/val2017/000000292060.jpg  \n",
            " extracting: /content/val_images/val2017/000000549738.jpg  \n",
            " extracting: /content/val_images/val2017/000000216636.jpg  \n",
            " extracting: /content/val_images/val2017/000000297427.jpg  \n",
            " extracting: /content/val_images/val2017/000000541773.jpg  \n",
            " extracting: /content/val_images/val2017/000000269113.jpg  \n",
            " extracting: /content/val_images/val2017/000000207306.jpg  \n",
            " extracting: /content/val_images/val2017/000000475191.jpg  \n",
            " extracting: /content/val_images/val2017/000000519611.jpg  \n",
            " extracting: /content/val_images/val2017/000000138954.jpg  \n",
            " extracting: /content/val_images/val2017/000000214539.jpg  \n",
            " extracting: /content/val_images/val2017/000000376322.jpg  \n",
            " extracting: /content/val_images/val2017/000000176606.jpg  \n",
            " extracting: /content/val_images/val2017/000000165500.jpg  \n",
            " extracting: /content/val_images/val2017/000000289393.jpg  \n",
            " extracting: /content/val_images/val2017/000000164883.jpg  \n",
            " extracting: /content/val_images/val2017/000000565563.jpg  \n",
            " extracting: /content/val_images/val2017/000000389933.jpg  \n",
            " extracting: /content/val_images/val2017/000000343076.jpg  \n",
            " extracting: /content/val_images/val2017/000000287649.jpg  \n",
            " extracting: /content/val_images/val2017/000000180560.jpg  \n",
            " extracting: /content/val_images/val2017/000000047819.jpg  \n",
            " extracting: /content/val_images/val2017/000000289992.jpg  \n",
            " extracting: /content/val_images/val2017/000000189752.jpg  \n",
            " extracting: /content/val_images/val2017/000000550797.jpg  \n",
            " extracting: /content/val_images/val2017/000000152686.jpg  \n",
            " extracting: /content/val_images/val2017/000000184384.jpg  \n",
            " extracting: /content/val_images/val2017/000000039785.jpg  \n",
            " extracting: /content/val_images/val2017/000000148719.jpg  \n",
            " extracting: /content/val_images/val2017/000000185472.jpg  \n",
            " extracting: /content/val_images/val2017/000000568584.jpg  \n",
            " extracting: /content/val_images/val2017/000000545007.jpg  \n",
            " extracting: /content/val_images/val2017/000000002157.jpg  \n",
            " extracting: /content/val_images/val2017/000000008629.jpg  \n",
            " extracting: /content/val_images/val2017/000000089670.jpg  \n",
            " extracting: /content/val_images/val2017/000000577539.jpg  \n",
            " extracting: /content/val_images/val2017/000000060052.jpg  \n",
            " extracting: /content/val_images/val2017/000000334006.jpg  \n",
            " extracting: /content/val_images/val2017/000000167122.jpg  \n",
            " extracting: /content/val_images/val2017/000000416343.jpg  \n",
            " extracting: /content/val_images/val2017/000000055299.jpg  \n",
            " extracting: /content/val_images/val2017/000000202228.jpg  \n",
            " extracting: /content/val_images/val2017/000000478286.jpg  \n",
            " extracting: /content/val_images/val2017/000000197388.jpg  \n",
            " extracting: /content/val_images/val2017/000000013923.jpg  \n",
            " extracting: /content/val_images/val2017/000000026941.jpg  \n",
            " extracting: /content/val_images/val2017/000000239041.jpg  \n",
            " extracting: /content/val_images/val2017/000000302452.jpg  \n",
            " extracting: /content/val_images/val2017/000000018737.jpg  \n",
            " extracting: /content/val_images/val2017/000000127494.jpg  \n",
            " extracting: /content/val_images/val2017/000000179174.jpg  \n",
            " extracting: /content/val_images/val2017/000000419974.jpg  \n",
            " extracting: /content/val_images/val2017/000000300276.jpg  \n",
            " extracting: /content/val_images/val2017/000000393838.jpg  \n",
            " extracting: /content/val_images/val2017/000000455267.jpg  \n",
            " extracting: /content/val_images/val2017/000000007278.jpg  \n",
            " extracting: /content/val_images/val2017/000000209747.jpg  \n",
            " extracting: /content/val_images/val2017/000000311180.jpg  \n",
            " extracting: /content/val_images/val2017/000000224051.jpg  \n",
            " extracting: /content/val_images/val2017/000000092839.jpg  \n",
            " extracting: /content/val_images/val2017/000000460927.jpg  \n",
            " extracting: /content/val_images/val2017/000000268375.jpg  \n",
            " extracting: /content/val_images/val2017/000000135902.jpg  \n",
            " extracting: /content/val_images/val2017/000000162415.jpg  \n",
            " extracting: /content/val_images/val2017/000000140840.jpg  \n",
            " extracting: /content/val_images/val2017/000000395388.jpg  \n",
            " extracting: /content/val_images/val2017/000000208423.jpg  \n",
            " extracting: /content/val_images/val2017/000000180296.jpg  \n",
            " extracting: /content/val_images/val2017/000000535523.jpg  \n",
            " extracting: /content/val_images/val2017/000000348488.jpg  \n",
            " extracting: /content/val_images/val2017/000000196759.jpg  \n",
            " extracting: /content/val_images/val2017/000000023751.jpg  \n",
            " extracting: /content/val_images/val2017/000000041888.jpg  \n",
            " extracting: /content/val_images/val2017/000000039477.jpg  \n",
            " extracting: /content/val_images/val2017/000000014831.jpg  \n",
            " extracting: /content/val_images/val2017/000000007888.jpg  \n",
            " extracting: /content/val_images/val2017/000000531771.jpg  \n",
            " extracting: /content/val_images/val2017/000000016249.jpg  \n",
            " extracting: /content/val_images/val2017/000000458054.jpg  \n",
            " extracting: /content/val_images/val2017/000000183675.jpg  \n",
            " extracting: /content/val_images/val2017/000000424135.jpg  \n",
            " extracting: /content/val_images/val2017/000000139260.jpg  \n",
            " extracting: /content/val_images/val2017/000000079565.jpg  \n",
            " extracting: /content/val_images/val2017/000000482735.jpg  \n",
            " extracting: /content/val_images/val2017/000000133969.jpg  \n",
            " extracting: /content/val_images/val2017/000000060886.jpg  \n",
            " extracting: /content/val_images/val2017/000000578545.jpg  \n",
            " extracting: /content/val_images/val2017/000000554291.jpg  \n",
            " extracting: /content/val_images/val2017/000000084270.jpg  \n",
            " extracting: /content/val_images/val2017/000000233139.jpg  \n",
            " extracting: /content/val_images/val2017/000000222559.jpg  \n",
            " extracting: /content/val_images/val2017/000000415741.jpg  \n",
            " extracting: /content/val_images/val2017/000000241668.jpg  \n",
            " extracting: /content/val_images/val2017/000000220858.jpg  \n",
            " extracting: /content/val_images/val2017/000000180878.jpg  \n",
            " extracting: /content/val_images/val2017/000000316015.jpg  \n",
            " extracting: /content/val_images/val2017/000000286507.jpg  \n",
            " extracting: /content/val_images/val2017/000000226417.jpg  \n",
            " extracting: /content/val_images/val2017/000000133233.jpg  \n",
            " extracting: /content/val_images/val2017/000000253742.jpg  \n",
            " extracting: /content/val_images/val2017/000000317433.jpg  \n",
            " extracting: /content/val_images/val2017/000000110999.jpg  \n",
            " extracting: /content/val_images/val2017/000000438876.jpg  \n",
            " extracting: /content/val_images/val2017/000000372260.jpg  \n",
            " extracting: /content/val_images/val2017/000000024021.jpg  \n",
            " extracting: /content/val_images/val2017/000000491757.jpg  \n",
            " extracting: /content/val_images/val2017/000000377882.jpg  \n",
            " extracting: /content/val_images/val2017/000000094751.jpg  \n",
            " extracting: /content/val_images/val2017/000000104572.jpg  \n",
            " extracting: /content/val_images/val2017/000000141328.jpg  \n",
            " extracting: /content/val_images/val2017/000000247838.jpg  \n",
            " extracting: /content/val_images/val2017/000000377393.jpg  \n",
            " extracting: /content/val_images/val2017/000000318114.jpg  \n",
            " extracting: /content/val_images/val2017/000000229216.jpg  \n",
            " extracting: /content/val_images/val2017/000000448076.jpg  \n",
            " extracting: /content/val_images/val2017/000000248752.jpg  \n",
            " extracting: /content/val_images/val2017/000000502168.jpg  \n",
            " extracting: /content/val_images/val2017/000000463802.jpg  \n",
            " extracting: /content/val_images/val2017/000000129054.jpg  \n",
            " extracting: /content/val_images/val2017/000000288430.jpg  \n",
            " extracting: /content/val_images/val2017/000000049060.jpg  \n",
            " extracting: /content/val_images/val2017/000000195754.jpg  \n",
            " extracting: /content/val_images/val2017/000000115898.jpg  \n",
            " extracting: /content/val_images/val2017/000000349480.jpg  \n",
            " extracting: /content/val_images/val2017/000000186929.jpg  \n",
            " extracting: /content/val_images/val2017/000000069138.jpg  \n",
            " extracting: /content/val_images/val2017/000000551350.jpg  \n",
            " extracting: /content/val_images/val2017/000000256868.jpg  \n",
            " extracting: /content/val_images/val2017/000000191013.jpg  \n",
            " extracting: /content/val_images/val2017/000000276434.jpg  \n",
            " extracting: /content/val_images/val2017/000000289059.jpg  \n",
            " extracting: /content/val_images/val2017/000000311518.jpg  \n",
            " extracting: /content/val_images/val2017/000000507975.jpg  \n",
            " extracting: /content/val_images/val2017/000000383842.jpg  \n",
            " extracting: /content/val_images/val2017/000000410496.jpg  \n",
            " extracting: /content/val_images/val2017/000000497344.jpg  \n",
            " extracting: /content/val_images/val2017/000000561223.jpg  \n",
            " extracting: /content/val_images/val2017/000000235399.jpg  \n",
            " extracting: /content/val_images/val2017/000000321557.jpg  \n",
            " extracting: /content/val_images/val2017/000000355817.jpg  \n",
            " extracting: /content/val_images/val2017/000000356424.jpg  \n",
            " extracting: /content/val_images/val2017/000000068833.jpg  \n",
            " extracting: /content/val_images/val2017/000000297562.jpg  \n",
            " extracting: /content/val_images/val2017/000000394611.jpg  \n",
            " extracting: /content/val_images/val2017/000000549167.jpg  \n",
            " extracting: /content/val_images/val2017/000000512985.jpg  \n",
            " extracting: /content/val_images/val2017/000000347664.jpg  \n",
            " extracting: /content/val_images/val2017/000000333745.jpg  \n",
            " extracting: /content/val_images/val2017/000000147205.jpg  \n",
            " extracting: /content/val_images/val2017/000000099114.jpg  \n",
            " extracting: /content/val_images/val2017/000000368294.jpg  \n",
            " extracting: /content/val_images/val2017/000000001490.jpg  \n",
            " extracting: /content/val_images/val2017/000000556000.jpg  \n",
            " extracting: /content/val_images/val2017/000000345361.jpg  \n",
            " extracting: /content/val_images/val2017/000000471869.jpg  \n",
            " extracting: /content/val_images/val2017/000000271116.jpg  \n",
            " extracting: /content/val_images/val2017/000000050145.jpg  \n",
            " extracting: /content/val_images/val2017/000000565597.jpg  \n",
            " extracting: /content/val_images/val2017/000000473237.jpg  \n",
            " extracting: /content/val_images/val2017/000000311789.jpg  \n",
            " extracting: /content/val_images/val2017/000000241326.jpg  \n",
            " extracting: /content/val_images/val2017/000000549930.jpg  \n",
            " extracting: /content/val_images/val2017/000000507223.jpg  \n",
            " extracting: /content/val_images/val2017/000000204186.jpg  \n",
            " extracting: /content/val_images/val2017/000000562443.jpg  \n",
            " extracting: /content/val_images/val2017/000000546964.jpg  \n",
            " extracting: /content/val_images/val2017/000000155145.jpg  \n",
            " extracting: /content/val_images/val2017/000000206135.jpg  \n",
            " extracting: /content/val_images/val2017/000000508101.jpg  \n",
            " extracting: /content/val_images/val2017/000000212072.jpg  \n",
            " extracting: /content/val_images/val2017/000000249786.jpg  \n",
            " extracting: /content/val_images/val2017/000000163258.jpg  \n",
            " extracting: /content/val_images/val2017/000000052017.jpg  \n",
            " extracting: /content/val_images/val2017/000000095707.jpg  \n",
            " extracting: /content/val_images/val2017/000000295713.jpg  \n",
            " extracting: /content/val_images/val2017/000000007816.jpg  \n",
            " extracting: /content/val_images/val2017/000000034257.jpg  \n",
            " extracting: /content/val_images/val2017/000000267903.jpg  \n",
            " extracting: /content/val_images/val2017/000000381639.jpg  \n",
            " extracting: /content/val_images/val2017/000000479953.jpg  \n",
            " extracting: /content/val_images/val2017/000000025139.jpg  \n",
            " extracting: /content/val_images/val2017/000000350023.jpg  \n",
            " extracting: /content/val_images/val2017/000000026690.jpg  \n",
            " extracting: /content/val_images/val2017/000000393469.jpg  \n",
            " extracting: /content/val_images/val2017/000000578871.jpg  \n",
            " extracting: /content/val_images/val2017/000000044877.jpg  \n",
            " extracting: /content/val_images/val2017/000000157756.jpg  \n",
            " extracting: /content/val_images/val2017/000000274411.jpg  \n",
            " extracting: /content/val_images/val2017/000000261116.jpg  \n",
            " extracting: /content/val_images/val2017/000000097988.jpg  \n",
            " extracting: /content/val_images/val2017/000000154213.jpg  \n",
            " extracting: /content/val_images/val2017/000000205333.jpg  \n",
            " extracting: /content/val_images/val2017/000000502737.jpg  \n",
            " extracting: /content/val_images/val2017/000000529568.jpg  \n",
            " extracting: /content/val_images/val2017/000000496597.jpg  \n",
            " extracting: /content/val_images/val2017/000000263474.jpg  \n",
            " extracting: /content/val_images/val2017/000000399462.jpg  \n",
            " extracting: /content/val_images/val2017/000000445248.jpg  \n",
            " extracting: /content/val_images/val2017/000000292024.jpg  \n",
            " extracting: /content/val_images/val2017/000000405972.jpg  \n",
            " extracting: /content/val_images/val2017/000000233238.jpg  \n",
            " extracting: /content/val_images/val2017/000000383443.jpg  \n",
            " extracting: /content/val_images/val2017/000000474293.jpg  \n",
            " extracting: /content/val_images/val2017/000000127660.jpg  \n",
            " extracting: /content/val_images/val2017/000000357567.jpg  \n",
            " extracting: /content/val_images/val2017/000000303893.jpg  \n",
            " extracting: /content/val_images/val2017/000000166918.jpg  \n",
            " extracting: /content/val_images/val2017/000000193429.jpg  \n",
            " extracting: /content/val_images/val2017/000000445722.jpg  \n",
            " extracting: /content/val_images/val2017/000000479126.jpg  \n",
            " extracting: /content/val_images/val2017/000000550426.jpg  \n",
            " extracting: /content/val_images/val2017/000000463542.jpg  \n",
            " extracting: /content/val_images/val2017/000000339823.jpg  \n",
            " extracting: /content/val_images/val2017/000000447200.jpg  \n",
            " extracting: /content/val_images/val2017/000000472678.jpg  \n",
            " extracting: /content/val_images/val2017/000000263463.jpg  \n",
            " extracting: /content/val_images/val2017/000000201418.jpg  \n",
            " extracting: /content/val_images/val2017/000000480275.jpg  \n",
            " extracting: /content/val_images/val2017/000000031817.jpg  \n",
            " extracting: /content/val_images/val2017/000000163257.jpg  \n",
            " extracting: /content/val_images/val2017/000000035279.jpg  \n",
            " extracting: /content/val_images/val2017/000000019402.jpg  \n",
            " extracting: /content/val_images/val2017/000000411953.jpg  \n",
            " extracting: /content/val_images/val2017/000000123321.jpg  \n",
            " extracting: /content/val_images/val2017/000000571264.jpg  \n",
            " extracting: /content/val_images/val2017/000000263594.jpg  \n",
            " extracting: /content/val_images/val2017/000000043581.jpg  \n",
            " extracting: /content/val_images/val2017/000000211042.jpg  \n",
            " extracting: /content/val_images/val2017/000000231088.jpg  \n",
            " extracting: /content/val_images/val2017/000000167572.jpg  \n",
            " extracting: /content/val_images/val2017/000000244833.jpg  \n",
            " extracting: /content/val_images/val2017/000000235857.jpg  \n",
            " extracting: /content/val_images/val2017/000000542073.jpg  \n",
            " extracting: /content/val_images/val2017/000000224337.jpg  \n",
            " extracting: /content/val_images/val2017/000000453341.jpg  \n",
            " extracting: /content/val_images/val2017/000000379842.jpg  \n",
            " extracting: /content/val_images/val2017/000000161609.jpg  \n",
            " extracting: /content/val_images/val2017/000000440184.jpg  \n",
            " extracting: /content/val_images/val2017/000000281693.jpg  \n",
            " extracting: /content/val_images/val2017/000000253002.jpg  \n",
            " extracting: /content/val_images/val2017/000000476119.jpg  \n",
            " extracting: /content/val_images/val2017/000000574425.jpg  \n",
            " extracting: /content/val_images/val2017/000000482800.jpg  \n",
            " extracting: /content/val_images/val2017/000000458663.jpg  \n",
            " extracting: /content/val_images/val2017/000000159112.jpg  \n",
            " extracting: /content/val_images/val2017/000000199771.jpg  \n",
            " extracting: /content/val_images/val2017/000000142092.jpg  \n",
            " extracting: /content/val_images/val2017/000000550349.jpg  \n",
            " extracting: /content/val_images/val2017/000000463199.jpg  \n",
            " extracting: /content/val_images/val2017/000000332318.jpg  \n",
            " extracting: /content/val_images/val2017/000000231169.jpg  \n",
            " extracting: /content/val_images/val2017/000000517687.jpg  \n",
            " extracting: /content/val_images/val2017/000000118209.jpg  \n",
            " extracting: /content/val_images/val2017/000000455624.jpg  \n",
            " extracting: /content/val_images/val2017/000000534394.jpg  \n",
            " extracting: /content/val_images/val2017/000000110884.jpg  \n",
            " extracting: /content/val_images/val2017/000000065798.jpg  \n",
            " extracting: /content/val_images/val2017/000000438774.jpg  \n",
            " extracting: /content/val_images/val2017/000000090062.jpg  \n",
            " extracting: /content/val_images/val2017/000000285788.jpg  \n",
            " extracting: /content/val_images/val2017/000000004765.jpg  \n",
            " extracting: /content/val_images/val2017/000000482970.jpg  \n",
            " extracting: /content/val_images/val2017/000000284279.jpg  \n",
            " extracting: /content/val_images/val2017/000000187236.jpg  \n",
            " extracting: /content/val_images/val2017/000000564336.jpg  \n",
            " extracting: /content/val_images/val2017/000000290833.jpg  \n",
            " extracting: /content/val_images/val2017/000000082812.jpg  \n",
            " extracting: /content/val_images/val2017/000000433103.jpg  \n",
            " extracting: /content/val_images/val2017/000000421834.jpg  \n",
            " extracting: /content/val_images/val2017/000000211120.jpg  \n",
            " extracting: /content/val_images/val2017/000000415727.jpg  \n",
            " extracting: /content/val_images/val2017/000000340894.jpg  \n",
            " extracting: /content/val_images/val2017/000000542423.jpg  \n",
            " extracting: /content/val_images/val2017/000000434204.jpg  \n",
            " extracting: /content/val_images/val2017/000000022755.jpg  \n",
            " extracting: /content/val_images/val2017/000000367386.jpg  \n",
            " extracting: /content/val_images/val2017/000000146363.jpg  \n",
            " extracting: /content/val_images/val2017/000000346703.jpg  \n",
            " extracting: /content/val_images/val2017/000000125850.jpg  \n",
            " extracting: /content/val_images/val2017/000000229858.jpg  \n",
            " extracting: /content/val_images/val2017/000000017178.jpg  \n",
            " extracting: /content/val_images/val2017/000000080932.jpg  \n",
            " extracting: /content/val_images/val2017/000000113589.jpg  \n",
            " extracting: /content/val_images/val2017/000000491090.jpg  \n",
            " extracting: /content/val_images/val2017/000000257896.jpg  \n",
            " extracting: /content/val_images/val2017/000000389315.jpg  \n",
            " extracting: /content/val_images/val2017/000000575970.jpg  \n",
            " extracting: /content/val_images/val2017/000000331280.jpg  \n",
            " extracting: /content/val_images/val2017/000000102644.jpg  \n",
            " extracting: /content/val_images/val2017/000000511760.jpg  \n",
            " extracting: /content/val_images/val2017/000000256775.jpg  \n",
            " extracting: /content/val_images/val2017/000000237118.jpg  \n",
            " extracting: /content/val_images/val2017/000000182417.jpg  \n",
            " extracting: /content/val_images/val2017/000000527427.jpg  \n",
            " extracting: /content/val_images/val2017/000000273551.jpg  \n",
            " extracting: /content/val_images/val2017/000000078915.jpg  \n",
            " extracting: /content/val_images/val2017/000000283412.jpg  \n",
            " extracting: /content/val_images/val2017/000000021604.jpg  \n",
            " extracting: /content/val_images/val2017/000000091779.jpg  \n",
            " extracting: /content/val_images/val2017/000000212453.jpg  \n",
            " extracting: /content/val_images/val2017/000000559099.jpg  \n",
            " extracting: /content/val_images/val2017/000000137727.jpg  \n",
            " extracting: /content/val_images/val2017/000000233825.jpg  \n",
            " extracting: /content/val_images/val2017/000000184611.jpg  \n",
            " extracting: /content/val_images/val2017/000000511647.jpg  \n",
            " extracting: /content/val_images/val2017/000000342186.jpg  \n",
            " extracting: /content/val_images/val2017/000000558558.jpg  \n",
            " extracting: /content/val_images/val2017/000000479596.jpg  \n",
            " extracting: /content/val_images/val2017/000000290771.jpg  \n",
            " extracting: /content/val_images/val2017/000000061960.jpg  \n",
            " extracting: /content/val_images/val2017/000000436617.jpg  \n",
            " extracting: /content/val_images/val2017/000000109900.jpg  \n",
            " extracting: /content/val_images/val2017/000000138856.jpg  \n",
            " extracting: /content/val_images/val2017/000000087038.jpg  \n",
            " extracting: /content/val_images/val2017/000000273760.jpg  \n",
            " extracting: /content/val_images/val2017/000000276921.jpg  \n",
            " extracting: /content/val_images/val2017/000000360097.jpg  \n",
            " extracting: /content/val_images/val2017/000000299609.jpg  \n",
            " extracting: /content/val_images/val2017/000000309391.jpg  \n",
            " extracting: /content/val_images/val2017/000000138819.jpg  \n",
            " extracting: /content/val_images/val2017/000000407650.jpg  \n",
            " extracting: /content/val_images/val2017/000000465822.jpg  \n",
            " extracting: /content/val_images/val2017/000000264535.jpg  \n",
            " extracting: /content/val_images/val2017/000000201025.jpg  \n",
            " extracting: /content/val_images/val2017/000000531134.jpg  \n",
            " extracting: /content/val_images/val2017/000000396274.jpg  \n",
            " extracting: /content/val_images/val2017/000000023359.jpg  \n",
            " extracting: /content/val_images/val2017/000000266400.jpg  \n",
            " extracting: /content/val_images/val2017/000000400161.jpg  \n",
            " extracting: /content/val_images/val2017/000000504635.jpg  \n",
            " extracting: /content/val_images/val2017/000000129756.jpg  \n",
            " extracting: /content/val_images/val2017/000000129113.jpg  \n",
            " extracting: /content/val_images/val2017/000000170191.jpg  \n",
            " extracting: /content/val_images/val2017/000000058350.jpg  \n",
            " extracting: /content/val_images/val2017/000000109798.jpg  \n",
            " extracting: /content/val_images/val2017/000000464358.jpg  \n",
            " extracting: /content/val_images/val2017/000000239843.jpg  \n",
            " extracting: /content/val_images/val2017/000000385719.jpg  \n",
            " extracting: /content/val_images/val2017/000000341469.jpg  \n",
            " extracting: /content/val_images/val2017/000000094871.jpg  \n",
            " extracting: /content/val_images/val2017/000000404678.jpg  \n",
            " extracting: /content/val_images/val2017/000000001818.jpg  \n",
            " extracting: /content/val_images/val2017/000000161799.jpg  \n",
            " extracting: /content/val_images/val2017/000000287667.jpg  \n",
            " extracting: /content/val_images/val2017/000000556498.jpg  \n",
            " extracting: /content/val_images/val2017/000000334309.jpg  \n",
            " extracting: /content/val_images/val2017/000000097679.jpg  \n",
            " extracting: /content/val_images/val2017/000000384616.jpg  \n",
            " extracting: /content/val_images/val2017/000000222991.jpg  \n",
            " extracting: /content/val_images/val2017/000000507037.jpg  \n",
            " extracting: /content/val_images/val2017/000000166664.jpg  \n",
            " extracting: /content/val_images/val2017/000000536947.jpg  \n",
            " extracting: /content/val_images/val2017/000000090003.jpg  \n",
            " extracting: /content/val_images/val2017/000000545594.jpg  \n",
            " extracting: /content/val_images/val2017/000000397351.jpg  \n",
            " extracting: /content/val_images/val2017/000000399205.jpg  \n",
            " extracting: /content/val_images/val2017/000000376264.jpg  \n",
            " extracting: /content/val_images/val2017/000000463849.jpg  \n",
            " extracting: /content/val_images/val2017/000000492282.jpg  \n",
            " extracting: /content/val_images/val2017/000000101022.jpg  \n",
            " extracting: /content/val_images/val2017/000000202339.jpg  \n",
            " extracting: /content/val_images/val2017/000000292488.jpg  \n",
            " extracting: /content/val_images/val2017/000000057150.jpg  \n",
            " extracting: /content/val_images/val2017/000000031050.jpg  \n",
            " extracting: /content/val_images/val2017/000000501005.jpg  \n",
            " extracting: /content/val_images/val2017/000000576566.jpg  \n",
            " extracting: /content/val_images/val2017/000000064574.jpg  \n",
            " extracting: /content/val_images/val2017/000000423971.jpg  \n",
            " extracting: /content/val_images/val2017/000000291634.jpg  \n",
            " extracting: /content/val_images/val2017/000000022589.jpg  \n",
            " extracting: /content/val_images/val2017/000000511384.jpg  \n",
            " extracting: /content/val_images/val2017/000000013774.jpg  \n",
            " extracting: /content/val_images/val2017/000000491725.jpg  \n",
            " extracting: /content/val_images/val2017/000000361621.jpg  \n",
            " extracting: /content/val_images/val2017/000000567640.jpg  \n",
            " extracting: /content/val_images/val2017/000000507667.jpg  \n",
            " extracting: /content/val_images/val2017/000000567886.jpg  \n",
            " extracting: /content/val_images/val2017/000000451714.jpg  \n",
            " extracting: /content/val_images/val2017/000000314264.jpg  \n",
            " extracting: /content/val_images/val2017/000000246522.jpg  \n",
            " extracting: /content/val_images/val2017/000000497867.jpg  \n",
            " extracting: /content/val_images/val2017/000000500270.jpg  \n",
            " extracting: /content/val_images/val2017/000000351559.jpg  \n",
            " extracting: /content/val_images/val2017/000000116479.jpg  \n",
            " extracting: /content/val_images/val2017/000000129135.jpg  \n",
            " extracting: /content/val_images/val2017/000000087470.jpg  \n",
            " extracting: /content/val_images/val2017/000000019109.jpg  \n",
            " extracting: /content/val_images/val2017/000000035326.jpg  \n",
            " extracting: /content/val_images/val2017/000000054605.jpg  \n",
            " extracting: /content/val_images/val2017/000000045596.jpg  \n",
            " extracting: /content/val_images/val2017/000000067315.jpg  \n",
            " extracting: /content/val_images/val2017/000000506656.jpg  \n",
            " extracting: /content/val_images/val2017/000000275727.jpg  \n",
            " extracting: /content/val_images/val2017/000000148739.jpg  \n",
            " extracting: /content/val_images/val2017/000000441543.jpg  \n",
            " extracting: /content/val_images/val2017/000000353096.jpg  \n",
            " extracting: /content/val_images/val2017/000000226111.jpg  \n",
            " extracting: /content/val_images/val2017/000000419379.jpg  \n",
            " extracting: /content/val_images/val2017/000000544444.jpg  \n",
            " extracting: /content/val_images/val2017/000000203389.jpg  \n",
            " extracting: /content/val_images/val2017/000000206027.jpg  \n",
            " extracting: /content/val_images/val2017/000000469652.jpg  \n",
            " extracting: /content/val_images/val2017/000000283318.jpg  \n",
            " extracting: /content/val_images/val2017/000000255483.jpg  \n",
            " extracting: /content/val_images/val2017/000000042070.jpg  \n",
            " extracting: /content/val_images/val2017/000000452793.jpg  \n",
            " extracting: /content/val_images/val2017/000000491216.jpg  \n",
            " extracting: /content/val_images/val2017/000000369442.jpg  \n",
            " extracting: /content/val_images/val2017/000000310200.jpg  \n",
            " extracting: /content/val_images/val2017/000000455352.jpg  \n",
            " extracting: /content/val_images/val2017/000000294783.jpg  \n",
            " extracting: /content/val_images/val2017/000000079651.jpg  \n",
            " extracting: /content/val_images/val2017/000000239717.jpg  \n",
            " extracting: /content/val_images/val2017/000000231125.jpg  \n",
            " extracting: /content/val_images/val2017/000000505638.jpg  \n",
            " extracting: /content/val_images/val2017/000000293071.jpg  \n",
            " extracting: /content/val_images/val2017/000000299553.jpg  \n",
            " extracting: /content/val_images/val2017/000000365766.jpg  \n",
            " extracting: /content/val_images/val2017/000000166563.jpg  \n",
            " extracting: /content/val_images/val2017/000000019742.jpg  \n",
            " extracting: /content/val_images/val2017/000000088485.jpg  \n",
            " extracting: /content/val_images/val2017/000000245320.jpg  \n",
            " extracting: /content/val_images/val2017/000000134322.jpg  \n",
            " extracting: /content/val_images/val2017/000000564023.jpg  \n",
            " extracting: /content/val_images/val2017/000000383606.jpg  \n",
            " extracting: /content/val_images/val2017/000000179392.jpg  \n",
            " extracting: /content/val_images/val2017/000000353027.jpg  \n",
            " extracting: /content/val_images/val2017/000000028452.jpg  \n",
            " extracting: /content/val_images/val2017/000000530099.jpg  \n",
            " extracting: /content/val_images/val2017/000000125936.jpg  \n",
            " extracting: /content/val_images/val2017/000000446206.jpg  \n",
            " extracting: /content/val_images/val2017/000000234366.jpg  \n",
            " extracting: /content/val_images/val2017/000000053994.jpg  \n",
            " extracting: /content/val_images/val2017/000000031269.jpg  \n",
            " extracting: /content/val_images/val2017/000000260657.jpg  \n",
            " extracting: /content/val_images/val2017/000000053626.jpg  \n",
            " extracting: /content/val_images/val2017/000000456015.jpg  \n",
            " extracting: /content/val_images/val2017/000000326542.jpg  \n",
            " extracting: /content/val_images/val2017/000000100428.jpg  \n",
            " extracting: /content/val_images/val2017/000000104669.jpg  \n",
            " extracting: /content/val_images/val2017/000000349302.jpg  \n",
            " extracting: /content/val_images/val2017/000000116206.jpg  \n",
            " extracting: /content/val_images/val2017/000000400803.jpg  \n",
            " extracting: /content/val_images/val2017/000000444142.jpg  \n",
            " extracting: /content/val_images/val2017/000000047740.jpg  \n",
            " extracting: /content/val_images/val2017/000000039951.jpg  \n",
            " extracting: /content/val_images/val2017/000000566436.jpg  \n",
            " extracting: /content/val_images/val2017/000000312213.jpg  \n",
            " extracting: /content/val_images/val2017/000000039914.jpg  \n",
            " extracting: /content/val_images/val2017/000000411754.jpg  \n",
            " extracting: /content/val_images/val2017/000000462728.jpg  \n",
            " extracting: /content/val_images/val2017/000000296284.jpg  \n",
            " extracting: /content/val_images/val2017/000000349152.jpg  \n",
            " extracting: /content/val_images/val2017/000000538236.jpg  \n",
            " extracting: /content/val_images/val2017/000000035062.jpg  \n",
            " extracting: /content/val_images/val2017/000000549390.jpg  \n",
            " extracting: /content/val_images/val2017/000000267670.jpg  \n",
            " extracting: /content/val_images/val2017/000000153343.jpg  \n",
            " extracting: /content/val_images/val2017/000000005600.jpg  \n",
            " extracting: /content/val_images/val2017/000000533493.jpg  \n",
            " extracting: /content/val_images/val2017/000000279541.jpg  \n",
            " extracting: /content/val_images/val2017/000000208208.jpg  \n",
            " extracting: /content/val_images/val2017/000000363188.jpg  \n",
            " extracting: /content/val_images/val2017/000000063740.jpg  \n",
            " extracting: /content/val_images/val2017/000000262895.jpg  \n",
            " extracting: /content/val_images/val2017/000000494427.jpg  \n",
            " extracting: /content/val_images/val2017/000000002431.jpg  \n",
            " extracting: /content/val_images/val2017/000000013729.jpg  \n",
            " extracting: /content/val_images/val2017/000000022935.jpg  \n",
            " extracting: /content/val_images/val2017/000000358427.jpg  \n",
            " extracting: /content/val_images/val2017/000000423229.jpg  \n",
            " extracting: /content/val_images/val2017/000000270122.jpg  \n",
            " extracting: /content/val_images/val2017/000000521141.jpg  \n",
            " extracting: /content/val_images/val2017/000000060102.jpg  \n",
            " extracting: /content/val_images/val2017/000000451090.jpg  \n",
            " extracting: /content/val_images/val2017/000000479155.jpg  \n",
            " extracting: /content/val_images/val2017/000000529105.jpg  \n",
            " extracting: /content/val_images/val2017/000000460929.jpg  \n",
            " extracting: /content/val_images/val2017/000000344029.jpg  \n",
            " extracting: /content/val_images/val2017/000000240754.jpg  \n",
            " extracting: /content/val_images/val2017/000000236166.jpg  \n",
            " extracting: /content/val_images/val2017/000000187734.jpg  \n",
            " extracting: /content/val_images/val2017/000000424349.jpg  \n",
            " extracting: /content/val_images/val2017/000000229849.jpg  \n",
            " extracting: /content/val_images/val2017/000000433243.jpg  \n",
            " extracting: /content/val_images/val2017/000000459634.jpg  \n",
            " extracting: /content/val_images/val2017/000000154339.jpg  \n",
            " extracting: /content/val_images/val2017/000000386134.jpg  \n",
            " extracting: /content/val_images/val2017/000000542089.jpg  \n",
            " extracting: /content/val_images/val2017/000000093965.jpg  \n",
            " extracting: /content/val_images/val2017/000000222317.jpg  \n",
            " extracting: /content/val_images/val2017/000000499181.jpg  \n",
            " extracting: /content/val_images/val2017/000000414676.jpg  \n",
            " extracting: /content/val_images/val2017/000000527029.jpg  \n",
            " extracting: /content/val_images/val2017/000000230983.jpg  \n",
            " extracting: /content/val_images/val2017/000000176857.jpg  \n",
            " extracting: /content/val_images/val2017/000000139883.jpg  \n",
            " extracting: /content/val_images/val2017/000000326128.jpg  \n",
            " extracting: /content/val_images/val2017/000000073946.jpg  \n",
            " extracting: /content/val_images/val2017/000000160864.jpg  \n",
            " extracting: /content/val_images/val2017/000000099024.jpg  \n",
            " extracting: /content/val_images/val2017/000000369081.jpg  \n",
            " extracting: /content/val_images/val2017/000000273715.jpg  \n",
            " extracting: /content/val_images/val2017/000000329080.jpg  \n",
            " extracting: /content/val_images/val2017/000000227686.jpg  \n",
            " extracting: /content/val_images/val2017/000000514914.jpg  \n",
            " extracting: /content/val_images/val2017/000000336309.jpg  \n",
            " extracting: /content/val_images/val2017/000000177714.jpg  \n",
            " extracting: /content/val_images/val2017/000000027982.jpg  \n",
            " extracting: /content/val_images/val2017/000000312192.jpg  \n",
            " extracting: /content/val_images/val2017/000000123213.jpg  \n",
            " extracting: /content/val_images/val2017/000000125952.jpg  \n",
            " extracting: /content/val_images/val2017/000000125245.jpg  \n",
            " extracting: /content/val_images/val2017/000000146489.jpg  \n",
            " extracting: /content/val_images/val2017/000000419408.jpg  \n",
            " extracting: /content/val_images/val2017/000000469192.jpg  \n",
            " extracting: /content/val_images/val2017/000000233727.jpg  \n",
            " extracting: /content/val_images/val2017/000000468124.jpg  \n",
            " extracting: /content/val_images/val2017/000000355240.jpg  \n",
            " extracting: /content/val_images/val2017/000000336356.jpg  \n",
            " extracting: /content/val_images/val2017/000000328337.jpg  \n",
            " extracting: /content/val_images/val2017/000000377670.jpg  \n",
            " extracting: /content/val_images/val2017/000000097924.jpg  \n",
            " extracting: /content/val_images/val2017/000000091615.jpg  \n",
            " extracting: /content/val_images/val2017/000000548246.jpg  \n",
            " extracting: /content/val_images/val2017/000000554328.jpg  \n",
            " extracting: /content/val_images/val2017/000000475678.jpg  \n",
            " extracting: /content/val_images/val2017/000000110449.jpg  \n",
            " extracting: /content/val_images/val2017/000000064898.jpg  \n",
            " extracting: /content/val_images/val2017/000000119911.jpg  \n",
            " extracting: /content/val_images/val2017/000000230008.jpg  \n",
            " extracting: /content/val_images/val2017/000000092416.jpg  \n",
            " extracting: /content/val_images/val2017/000000097994.jpg  \n",
            " extracting: /content/val_images/val2017/000000563349.jpg  \n",
            " extracting: /content/val_images/val2017/000000572956.jpg  \n",
            " extracting: /content/val_images/val2017/000000048924.jpg  \n",
            " extracting: /content/val_images/val2017/000000287714.jpg  \n",
            " extracting: /content/val_images/val2017/000000568710.jpg  \n",
            " extracting: /content/val_images/val2017/000000161879.jpg  \n",
            " extracting: /content/val_images/val2017/000000532575.jpg  \n",
            " extracting: /content/val_images/val2017/000000443498.jpg  \n",
            " extracting: /content/val_images/val2017/000000197796.jpg  \n",
            " extracting: /content/val_images/val2017/000000289417.jpg  \n",
            " extracting: /content/val_images/val2017/000000466602.jpg  \n",
            " extracting: /content/val_images/val2017/000000579091.jpg  \n",
            " extracting: /content/val_images/val2017/000000369310.jpg  \n",
            " extracting: /content/val_images/val2017/000000259830.jpg  \n",
            " extracting: /content/val_images/val2017/000000189806.jpg  \n",
            " extracting: /content/val_images/val2017/000000249550.jpg  \n",
            " extracting: /content/val_images/val2017/000000154644.jpg  \n",
            " extracting: /content/val_images/val2017/000000343934.jpg  \n",
            " extracting: /content/val_images/val2017/000000273132.jpg  \n",
            " extracting: /content/val_images/val2017/000000407524.jpg  \n",
            " extracting: /content/val_images/val2017/000000407403.jpg  \n",
            " extracting: /content/val_images/val2017/000000173383.jpg  \n",
            " extracting: /content/val_images/val2017/000000283268.jpg  \n",
            " extracting: /content/val_images/val2017/000000398203.jpg  \n",
            " extracting: /content/val_images/val2017/000000017627.jpg  \n",
            " extracting: /content/val_images/val2017/000000324715.jpg  \n",
            " extracting: /content/val_images/val2017/000000461275.jpg  \n",
            " extracting: /content/val_images/val2017/000000011197.jpg  \n",
            " extracting: /content/val_images/val2017/000000480944.jpg  \n",
            " extracting: /content/val_images/val2017/000000121031.jpg  \n",
            " extracting: /content/val_images/val2017/000000195842.jpg  \n",
            " extracting: /content/val_images/val2017/000000270066.jpg  \n",
            " extracting: /content/val_images/val2017/000000329447.jpg  \n",
            " extracting: /content/val_images/val2017/000000059598.jpg  \n",
            " extracting: /content/val_images/val2017/000000183104.jpg  \n",
            " extracting: /content/val_images/val2017/000000055002.jpg  \n",
            " extracting: /content/val_images/val2017/000000350607.jpg  \n",
            " extracting: /content/val_images/val2017/000000546475.jpg  \n",
            " extracting: /content/val_images/val2017/000000431727.jpg  \n",
            " extracting: /content/val_images/val2017/000000303818.jpg  \n",
            " extracting: /content/val_images/val2017/000000353970.jpg  \n",
            " extracting: /content/val_images/val2017/000000540414.jpg  \n",
            " extracting: /content/val_images/val2017/000000452515.jpg  \n",
            " extracting: /content/val_images/val2017/000000494634.jpg  \n",
            " extracting: /content/val_images/val2017/000000083172.jpg  \n",
            " extracting: /content/val_images/val2017/000000062355.jpg  \n",
            " extracting: /content/val_images/val2017/000000018837.jpg  \n",
            " extracting: /content/val_images/val2017/000000023781.jpg  \n",
            " extracting: /content/val_images/val2017/000000490171.jpg  \n",
            " extracting: /content/val_images/val2017/000000104666.jpg  \n",
            " extracting: /content/val_images/val2017/000000455597.jpg  \n",
            " extracting: /content/val_images/val2017/000000419096.jpg  \n",
            " extracting: /content/val_images/val2017/000000240049.jpg  \n",
            " extracting: /content/val_images/val2017/000000464824.jpg  \n",
            " extracting: /content/val_images/val2017/000000343976.jpg  \n",
            " extracting: /content/val_images/val2017/000000274219.jpg  \n",
            " extracting: /content/val_images/val2017/000000231580.jpg  \n",
            " extracting: /content/val_images/val2017/000000065736.jpg  \n",
            " extracting: /content/val_images/val2017/000000352684.jpg  \n",
            " extracting: /content/val_images/val2017/000000324258.jpg  \n",
            " extracting: /content/val_images/val2017/000000113051.jpg  \n",
            " extracting: /content/val_images/val2017/000000370900.jpg  \n",
            " extracting: /content/val_images/val2017/000000040471.jpg  \n",
            " extracting: /content/val_images/val2017/000000226662.jpg  \n",
            " extracting: /content/val_images/val2017/000000002153.jpg  \n",
            " extracting: /content/val_images/val2017/000000350488.jpg  \n",
            " extracting: /content/val_images/val2017/000000151629.jpg  \n",
            " extracting: /content/val_images/val2017/000000469067.jpg  \n",
            " extracting: /content/val_images/val2017/000000494759.jpg  \n",
            " extracting: /content/val_images/val2017/000000360564.jpg  \n",
            " extracting: /content/val_images/val2017/000000097585.jpg  \n",
            " extracting: /content/val_images/val2017/000000088970.jpg  \n",
            " extracting: /content/val_images/val2017/000000481390.jpg  \n",
            " extracting: /content/val_images/val2017/000000185802.jpg  \n",
            " extracting: /content/val_images/val2017/000000579893.jpg  \n",
            " extracting: /content/val_images/val2017/000000556765.jpg  \n",
            " extracting: /content/val_images/val2017/000000301867.jpg  \n",
            " extracting: /content/val_images/val2017/000000397639.jpg  \n",
            " extracting: /content/val_images/val2017/000000142790.jpg  \n",
            " extracting: /content/val_images/val2017/000000466567.jpg  \n",
            " extracting: /content/val_images/val2017/000000080671.jpg  \n",
            " extracting: /content/val_images/val2017/000000106281.jpg  \n",
            " extracting: /content/val_images/val2017/000000547519.jpg  \n",
            " extracting: /content/val_images/val2017/000000333237.jpg  \n",
            " extracting: /content/val_images/val2017/000000261036.jpg  \n",
            " extracting: /content/val_images/val2017/000000014007.jpg  \n",
            " extracting: /content/val_images/val2017/000000331817.jpg  \n",
            " extracting: /content/val_images/val2017/000000427997.jpg  \n",
            " extracting: /content/val_images/val2017/000000459396.jpg  \n",
            " extracting: /content/val_images/val2017/000000102805.jpg  \n",
            " extracting: /content/val_images/val2017/000000227399.jpg  \n",
            " extracting: /content/val_images/val2017/000000389381.jpg  \n",
            " extracting: /content/val_images/val2017/000000095786.jpg  \n",
            " extracting: /content/val_images/val2017/000000402346.jpg  \n",
            " extracting: /content/val_images/val2017/000000358195.jpg  \n",
            " extracting: /content/val_images/val2017/000000214200.jpg  \n",
            " extracting: /content/val_images/val2017/000000476258.jpg  \n",
            " extracting: /content/val_images/val2017/000000410221.jpg  \n",
            " extracting: /content/val_images/val2017/000000310072.jpg  \n",
            " extracting: /content/val_images/val2017/000000012120.jpg  \n",
            " extracting: /content/val_images/val2017/000000105335.jpg  \n",
            " extracting: /content/val_images/val2017/000000289938.jpg  \n",
            " extracting: /content/val_images/val2017/000000377588.jpg  \n",
            " extracting: /content/val_images/val2017/000000031248.jpg  \n",
            " extracting: /content/val_images/val2017/000000206218.jpg  \n",
            " extracting: /content/val_images/val2017/000000245173.jpg  \n",
            " extracting: /content/val_images/val2017/000000340015.jpg  \n",
            " extracting: /content/val_images/val2017/000000099428.jpg  \n",
            " extracting: /content/val_images/val2017/000000207585.jpg  \n",
            " extracting: /content/val_images/val2017/000000570688.jpg  \n",
            " extracting: /content/val_images/val2017/000000396518.jpg  \n",
            " extracting: /content/val_images/val2017/000000269682.jpg  \n",
            " extracting: /content/val_images/val2017/000000213224.jpg  \n",
            " extracting: /content/val_images/val2017/000000304812.jpg  \n",
            " extracting: /content/val_images/val2017/000000032817.jpg  \n",
            " extracting: /content/val_images/val2017/000000166259.jpg  \n",
            " extracting: /content/val_images/val2017/000000046031.jpg  \n",
            " extracting: /content/val_images/val2017/000000267940.jpg  \n",
            " extracting: /content/val_images/val2017/000000493566.jpg  \n",
            " extracting: /content/val_images/val2017/000000391722.jpg  \n",
            " extracting: /content/val_images/val2017/000000260106.jpg  \n",
            " extracting: /content/val_images/val2017/000000292155.jpg  \n",
            " extracting: /content/val_images/val2017/000000360943.jpg  \n",
            " extracting: /content/val_images/val2017/000000503823.jpg  \n",
            " extracting: /content/val_images/val2017/000000106235.jpg  \n",
            " extracting: /content/val_images/val2017/000000530854.jpg  \n",
            " extracting: /content/val_images/val2017/000000433134.jpg  \n",
            " extracting: /content/val_images/val2017/000000270386.jpg  \n",
            " extracting: /content/val_images/val2017/000000146155.jpg  \n",
            " extracting: /content/val_images/val2017/000000444275.jpg  \n",
            " extracting: /content/val_images/val2017/000000178618.jpg  \n",
            " extracting: /content/val_images/val2017/000000414261.jpg  \n",
            " extracting: /content/val_images/val2017/000000092053.jpg  \n",
            " extracting: /content/val_images/val2017/000000218362.jpg  \n",
            " extracting: /content/val_images/val2017/000000054931.jpg  \n",
            " extracting: /content/val_images/val2017/000000471893.jpg  \n",
            " extracting: /content/val_images/val2017/000000081766.jpg  \n",
            " extracting: /content/val_images/val2017/000000381971.jpg  \n",
            " extracting: /content/val_images/val2017/000000203095.jpg  \n",
            " extracting: /content/val_images/val2017/000000090631.jpg  \n",
            " extracting: /content/val_images/val2017/000000425221.jpg  \n",
            " extracting: /content/val_images/val2017/000000545100.jpg  \n",
            " extracting: /content/val_images/val2017/000000198805.jpg  \n",
            " extracting: /content/val_images/val2017/000000157124.jpg  \n",
            " extracting: /content/val_images/val2017/000000052412.jpg  \n",
            " extracting: /content/val_images/val2017/000000017029.jpg  \n",
            " extracting: /content/val_images/val2017/000000073702.jpg  \n",
            " extracting: /content/val_images/val2017/000000181859.jpg  \n",
            " extracting: /content/val_images/val2017/000000011615.jpg  \n",
            " extracting: /content/val_images/val2017/000000155443.jpg  \n",
            " extracting: /content/val_images/val2017/000000369675.jpg  \n",
            " extracting: /content/val_images/val2017/000000553339.jpg  \n",
            " extracting: /content/val_images/val2017/000000449190.jpg  \n",
            " extracting: /content/val_images/val2017/000000250127.jpg  \n",
            " extracting: /content/val_images/val2017/000000270297.jpg  \n",
            " extracting: /content/val_images/val2017/000000347693.jpg  \n",
            " extracting: /content/val_images/val2017/000000288042.jpg  \n",
            " extracting: /content/val_images/val2017/000000089761.jpg  \n",
            " extracting: /content/val_images/val2017/000000000802.jpg  \n",
            " extracting: /content/val_images/val2017/000000404249.jpg  \n",
            " extracting: /content/val_images/val2017/000000319935.jpg  \n",
            " extracting: /content/val_images/val2017/000000500565.jpg  \n",
            " extracting: /content/val_images/val2017/000000323709.jpg  \n",
            " extracting: /content/val_images/val2017/000000376856.jpg  \n",
            " extracting: /content/val_images/val2017/000000126110.jpg  \n",
            " extracting: /content/val_images/val2017/000000151051.jpg  \n",
            " extracting: /content/val_images/val2017/000000218439.jpg  \n",
            " extracting: /content/val_images/val2017/000000085772.jpg  \n",
            " extracting: /content/val_images/val2017/000000342295.jpg  \n",
            " extracting: /content/val_images/val2017/000000419653.jpg  \n",
            " extracting: /content/val_images/val2017/000000554266.jpg  \n",
            " extracting: /content/val_images/val2017/000000507575.jpg  \n",
            " extracting: /content/val_images/val2017/000000498709.jpg  \n",
            " extracting: /content/val_images/val2017/000000096825.jpg  \n",
            " extracting: /content/val_images/val2017/000000015440.jpg  \n",
            " extracting: /content/val_images/val2017/000000464089.jpg  \n",
            " extracting: /content/val_images/val2017/000000239773.jpg  \n",
            " extracting: /content/val_images/val2017/000000343466.jpg  \n",
            " extracting: /content/val_images/val2017/000000565624.jpg  \n",
            " extracting: /content/val_images/val2017/000000210388.jpg  \n",
            " extracting: /content/val_images/val2017/000000180188.jpg  \n",
            " extracting: /content/val_images/val2017/000000289586.jpg  \n",
            " extracting: /content/val_images/val2017/000000363784.jpg  \n",
            " extracting: /content/val_images/val2017/000000224675.jpg  \n",
            " extracting: /content/val_images/val2017/000000128112.jpg  \n",
            " extracting: /content/val_images/val2017/000000536038.jpg  \n",
            " extracting: /content/val_images/val2017/000000128658.jpg  \n",
            " extracting: /content/val_images/val2017/000000111609.jpg  \n",
            " extracting: /content/val_images/val2017/000000109313.jpg  \n",
            " extracting: /content/val_images/val2017/000000091500.jpg  \n",
            " extracting: /content/val_images/val2017/000000443969.jpg  \n",
            " extracting: /content/val_images/val2017/000000234413.jpg  \n",
            " extracting: /content/val_images/val2017/000000512403.jpg  \n",
            " extracting: /content/val_images/val2017/000000445675.jpg  \n",
            " extracting: /content/val_images/val2017/000000294350.jpg  \n",
            " extracting: /content/val_images/val2017/000000098392.jpg  \n",
            " extracting: /content/val_images/val2017/000000028449.jpg  \n",
            " extracting: /content/val_images/val2017/000000015746.jpg  \n",
            " extracting: /content/val_images/val2017/000000257624.jpg  \n",
            " extracting: /content/val_images/val2017/000000474095.jpg  \n",
            " extracting: /content/val_images/val2017/000000296222.jpg  \n",
            " extracting: /content/val_images/val2017/000000564133.jpg  \n",
            " extracting: /content/val_images/val2017/000000435880.jpg  \n",
            " extracting: /content/val_images/val2017/000000296231.jpg  \n",
            " extracting: /content/val_images/val2017/000000485237.jpg  \n",
            " extracting: /content/val_images/val2017/000000328601.jpg  \n",
            " extracting: /content/val_images/val2017/000000355169.jpg  \n",
            " extracting: /content/val_images/val2017/000000321887.jpg  \n",
            " extracting: /content/val_images/val2017/000000168337.jpg  \n",
            " extracting: /content/val_images/val2017/000000334719.jpg  \n",
            " extracting: /content/val_images/val2017/000000155291.jpg  \n",
            " extracting: /content/val_images/val2017/000000154358.jpg  \n",
            " extracting: /content/val_images/val2017/000000559547.jpg  \n",
            " extracting: /content/val_images/val2017/000000361571.jpg  \n",
            " extracting: /content/val_images/val2017/000000389566.jpg  \n",
            " extracting: /content/val_images/val2017/000000171298.jpg  \n",
            " extracting: /content/val_images/val2017/000000452891.jpg  \n",
            " extracting: /content/val_images/val2017/000000203317.jpg  \n",
            " extracting: /content/val_images/val2017/000000338191.jpg  \n",
            " extracting: /content/val_images/val2017/000000058111.jpg  \n",
            " extracting: /content/val_images/val2017/000000471991.jpg  \n",
            " extracting: /content/val_images/val2017/000000196442.jpg  \n",
            " extracting: /content/val_images/val2017/000000294695.jpg  \n",
            " extracting: /content/val_images/val2017/000000182611.jpg  \n",
            " extracting: /content/val_images/val2017/000000222825.jpg  \n",
            " extracting: /content/val_images/val2017/000000262682.jpg  \n",
            " extracting: /content/val_images/val2017/000000364587.jpg  \n",
            " extracting: /content/val_images/val2017/000000054654.jpg  \n",
            " extracting: /content/val_images/val2017/000000492968.jpg  \n",
            " extracting: /content/val_images/val2017/000000030494.jpg  \n",
            " extracting: /content/val_images/val2017/000000038118.jpg  \n",
            " extracting: /content/val_images/val2017/000000476415.jpg  \n",
            " extracting: /content/val_images/val2017/000000145620.jpg  \n",
            " extracting: /content/val_images/val2017/000000060507.jpg  \n",
            " extracting: /content/val_images/val2017/000000263679.jpg  \n",
            " extracting: /content/val_images/val2017/000000185950.jpg  \n",
            " extracting: /content/val_images/val2017/000000148662.jpg  \n",
            " extracting: /content/val_images/val2017/000000287291.jpg  \n",
            " extracting: /content/val_images/val2017/000000062692.jpg  \n",
            " extracting: /content/val_images/val2017/000000214703.jpg  \n",
            " extracting: /content/val_images/val2017/000000213816.jpg  \n",
            " extracting: /content/val_images/val2017/000000434297.jpg  \n",
            " extracting: /content/val_images/val2017/000000476770.jpg  \n",
            " extracting: /content/val_images/val2017/000000447187.jpg  \n",
            " extracting: /content/val_images/val2017/000000134886.jpg  \n",
            " extracting: /content/val_images/val2017/000000378873.jpg  \n",
            " extracting: /content/val_images/val2017/000000067213.jpg  \n",
            " extracting: /content/val_images/val2017/000000446207.jpg  \n",
            " extracting: /content/val_images/val2017/000000165681.jpg  \n",
            " extracting: /content/val_images/val2017/000000024144.jpg  \n",
            " extracting: /content/val_images/val2017/000000439773.jpg  \n",
            " extracting: /content/val_images/val2017/000000172595.jpg  \n",
            " extracting: /content/val_images/val2017/000000118594.jpg  \n",
            " extracting: /content/val_images/val2017/000000323151.jpg  \n",
            " extracting: /content/val_images/val2017/000000571943.jpg  \n",
            " extracting: /content/val_images/val2017/000000581100.jpg  \n",
            " extracting: /content/val_images/val2017/000000151516.jpg  \n",
            " extracting: /content/val_images/val2017/000000244181.jpg  \n",
            " extracting: /content/val_images/val2017/000000273617.jpg  \n",
            " extracting: /content/val_images/val2017/000000008762.jpg  \n",
            " extracting: /content/val_images/val2017/000000088848.jpg  \n",
            " extracting: /content/val_images/val2017/000000059044.jpg  \n",
            " extracting: /content/val_images/val2017/000000050165.jpg  \n",
            " extracting: /content/val_images/val2017/000000289343.jpg  \n",
            " extracting: /content/val_images/val2017/000000416451.jpg  \n",
            " extracting: /content/val_images/val2017/000000044652.jpg  \n",
            " extracting: /content/val_images/val2017/000000314182.jpg  \n",
            " extracting: /content/val_images/val2017/000000014439.jpg  \n",
            " extracting: /content/val_images/val2017/000000053505.jpg  \n",
            " extracting: /content/val_images/val2017/000000213171.jpg  \n",
            " extracting: /content/val_images/val2017/000000502910.jpg  \n",
            " extracting: /content/val_images/val2017/000000503755.jpg  \n",
            " extracting: /content/val_images/val2017/000000371529.jpg  \n",
            " extracting: /content/val_images/val2017/000000385029.jpg  \n",
            " extracting: /content/val_images/val2017/000000515982.jpg  \n",
            " extracting: /content/val_images/val2017/000000012280.jpg  \n",
            " extracting: /content/val_images/val2017/000000521259.jpg  \n",
            " extracting: /content/val_images/val2017/000000318238.jpg  \n",
            " extracting: /content/val_images/val2017/000000544811.jpg  \n",
            " extracting: /content/val_images/val2017/000000289229.jpg  \n",
            " extracting: /content/val_images/val2017/000000280779.jpg  \n",
            " extracting: /content/val_images/val2017/000000297147.jpg  \n",
            " extracting: /content/val_images/val2017/000000239318.jpg  \n",
            " extracting: /content/val_images/val2017/000000359833.jpg  \n",
            " extracting: /content/val_images/val2017/000000452321.jpg  \n",
            " extracting: /content/val_images/val2017/000000570756.jpg  \n",
            " extracting: /content/val_images/val2017/000000080659.jpg  \n",
            " extracting: /content/val_images/val2017/000000456143.jpg  \n",
            " extracting: /content/val_images/val2017/000000014473.jpg  \n",
            " extracting: /content/val_images/val2017/000000051326.jpg  \n",
            " extracting: /content/val_images/val2017/000000054123.jpg  \n",
            " extracting: /content/val_images/val2017/000000203546.jpg  \n",
            " extracting: /content/val_images/val2017/000000350122.jpg  \n",
            " extracting: /content/val_images/val2017/000000045229.jpg  \n",
            " extracting: /content/val_images/val2017/000000560279.jpg  \n",
            " extracting: /content/val_images/val2017/000000399764.jpg  \n",
            " extracting: /content/val_images/val2017/000000190648.jpg  \n",
            " extracting: /content/val_images/val2017/000000554735.jpg  \n",
            " extracting: /content/val_images/val2017/000000248400.jpg  \n",
            " extracting: /content/val_images/val2017/000000397681.jpg  \n",
            " extracting: /content/val_images/val2017/000000296224.jpg  \n",
            " extracting: /content/val_images/val2017/000000382122.jpg  \n",
            " extracting: /content/val_images/val2017/000000223090.jpg  \n",
            " extracting: /content/val_images/val2017/000000347254.jpg  \n",
            " extracting: /content/val_images/val2017/000000547854.jpg  \n",
            " extracting: /content/val_images/val2017/000000478474.jpg  \n",
            " extracting: /content/val_images/val2017/000000529939.jpg  \n",
            " extracting: /content/val_images/val2017/000000254516.jpg  \n",
            " extracting: /content/val_images/val2017/000000320743.jpg  \n",
            " extracting: /content/val_images/val2017/000000069213.jpg  \n",
            " extracting: /content/val_images/val2017/000000187362.jpg  \n",
            " extracting: /content/val_images/val2017/000000236784.jpg  \n",
            " extracting: /content/val_images/val2017/000000500464.jpg  \n",
            " extracting: /content/val_images/val2017/000000395343.jpg  \n",
            " extracting: /content/val_images/val2017/000000180135.jpg  \n",
            " extracting: /content/val_images/val2017/000000311883.jpg  \n",
            " extracting: /content/val_images/val2017/000000084241.jpg  \n",
            " extracting: /content/val_images/val2017/000000170613.jpg  \n",
            " extracting: /content/val_images/val2017/000000063602.jpg  \n",
            " extracting: /content/val_images/val2017/000000488592.jpg  \n",
            " extracting: /content/val_images/val2017/000000436315.jpg  \n",
            " extracting: /content/val_images/val2017/000000429109.jpg  \n",
            " extracting: /content/val_images/val2017/000000409424.jpg  \n",
            " extracting: /content/val_images/val2017/000000194506.jpg  \n",
            " extracting: /content/val_images/val2017/000000437392.jpg  \n",
            " extracting: /content/val_images/val2017/000000424642.jpg  \n",
            " extracting: /content/val_images/val2017/000000465585.jpg  \n",
            " extracting: /content/val_images/val2017/000000080022.jpg  \n",
            " extracting: /content/val_images/val2017/000000186980.jpg  \n",
            " extracting: /content/val_images/val2017/000000537802.jpg  \n",
            " extracting: /content/val_images/val2017/000000302760.jpg  \n",
            " extracting: /content/val_images/val2017/000000105249.jpg  \n",
            " extracting: /content/val_images/val2017/000000345469.jpg  \n",
            " extracting: /content/val_images/val2017/000000414034.jpg  \n",
            " extracting: /content/val_images/val2017/000000289960.jpg  \n",
            " extracting: /content/val_images/val2017/000000377368.jpg  \n",
            " extracting: /content/val_images/val2017/000000305343.jpg  \n",
            " extracting: /content/val_images/val2017/000000110211.jpg  \n",
            " extracting: /content/val_images/val2017/000000560880.jpg  \n",
            " extracting: /content/val_images/val2017/000000355610.jpg  \n",
            " extracting: /content/val_images/val2017/000000527616.jpg  \n",
            " extracting: /content/val_images/val2017/000000196185.jpg  \n",
            " extracting: /content/val_images/val2017/000000546011.jpg  \n",
            " extracting: /content/val_images/val2017/000000023272.jpg  \n",
            " extracting: /content/val_images/val2017/000000293390.jpg  \n",
            " extracting: /content/val_images/val2017/000000065485.jpg  \n",
            " extracting: /content/val_images/val2017/000000013201.jpg  \n",
            " extracting: /content/val_images/val2017/000000356531.jpg  \n",
            " extracting: /content/val_images/val2017/000000278006.jpg  \n",
            " extracting: /content/val_images/val2017/000000441247.jpg  \n",
            " extracting: /content/val_images/val2017/000000329319.jpg  \n",
            " extracting: /content/val_images/val2017/000000333697.jpg  \n",
            " extracting: /content/val_images/val2017/000000089697.jpg  \n",
            " extracting: /content/val_images/val2017/000000048564.jpg  \n",
            " extracting: /content/val_images/val2017/000000540466.jpg  \n",
            " extracting: /content/val_images/val2017/000000123633.jpg  \n",
            " extracting: /content/val_images/val2017/000000441442.jpg  \n",
            " extracting: /content/val_images/val2017/000000060855.jpg  \n",
            " extracting: /content/val_images/val2017/000000183500.jpg  \n",
            " extracting: /content/val_images/val2017/000000140987.jpg  \n",
            " extracting: /content/val_images/val2017/000000417876.jpg  \n",
            " extracting: /content/val_images/val2017/000000461036.jpg  \n",
            " extracting: /content/val_images/val2017/000000130465.jpg  \n",
            " extracting: /content/val_images/val2017/000000327306.jpg  \n",
            " extracting: /content/val_images/val2017/000000153510.jpg  \n",
            " extracting: /content/val_images/val2017/000000503841.jpg  \n",
            " extracting: /content/val_images/val2017/000000493334.jpg  \n",
            " extracting: /content/val_images/val2017/000000267933.jpg  \n",
            " extracting: /content/val_images/val2017/000000370486.jpg  \n",
            " extracting: /content/val_images/val2017/000000132622.jpg  \n",
            " extracting: /content/val_images/val2017/000000530162.jpg  \n",
            " extracting: /content/val_images/val2017/000000319696.jpg  \n",
            " extracting: /content/val_images/val2017/000000553221.jpg  \n",
            " extracting: /content/val_images/val2017/000000418961.jpg  \n",
            " extracting: /content/val_images/val2017/000000359135.jpg  \n",
            " extracting: /content/val_images/val2017/000000162543.jpg  \n",
            " extracting: /content/val_images/val2017/000000468965.jpg  \n",
            " extracting: /content/val_images/val2017/000000041635.jpg  \n",
            " extracting: /content/val_images/val2017/000000404568.jpg  \n",
            " extracting: /content/val_images/val2017/000000004495.jpg  \n",
            " extracting: /content/val_images/val2017/000000555012.jpg  \n",
            " extracting: /content/val_images/val2017/000000074209.jpg  \n",
            " extracting: /content/val_images/val2017/000000476810.jpg  \n",
            " extracting: /content/val_images/val2017/000000152771.jpg  \n",
            " extracting: /content/val_images/val2017/000000005060.jpg  \n",
            " extracting: /content/val_images/val2017/000000385205.jpg  \n",
            " extracting: /content/val_images/val2017/000000210030.jpg  \n",
            " extracting: /content/val_images/val2017/000000033109.jpg  \n",
            " extracting: /content/val_images/val2017/000000104803.jpg  \n",
            " extracting: /content/val_images/val2017/000000542856.jpg  \n",
            " extracting: /content/val_images/val2017/000000120853.jpg  \n",
            " extracting: /content/val_images/val2017/000000551304.jpg  \n",
            " extracting: /content/val_images/val2017/000000490125.jpg  \n",
            " extracting: /content/val_images/val2017/000000474344.jpg  \n",
            " extracting: /content/val_images/val2017/000000217614.jpg  \n",
            " extracting: /content/val_images/val2017/000000193717.jpg  \n",
            " extracting: /content/val_images/val2017/000000374551.jpg  \n",
            " extracting: /content/val_images/val2017/000000459809.jpg  \n",
            " extracting: /content/val_images/val2017/000000567740.jpg  \n",
            " extracting: /content/val_images/val2017/000000142971.jpg  \n",
            " extracting: /content/val_images/val2017/000000425390.jpg  \n",
            " extracting: /content/val_images/val2017/000000571718.jpg  \n",
            " extracting: /content/val_images/val2017/000000450100.jpg  \n",
            " extracting: /content/val_images/val2017/000000509008.jpg  \n",
            " extracting: /content/val_images/val2017/000000442746.jpg  \n",
            " extracting: /content/val_images/val2017/000000140286.jpg  \n",
            " extracting: /content/val_images/val2017/000000306437.jpg  \n",
            " extracting: /content/val_images/val2017/000000425925.jpg  \n",
            " extracting: /content/val_images/val2017/000000451150.jpg  \n",
            " extracting: /content/val_images/val2017/000000067616.jpg  \n",
            " extracting: /content/val_images/val2017/000000127530.jpg  \n",
            " extracting: /content/val_images/val2017/000000224119.jpg  \n",
            " extracting: /content/val_images/val2017/000000323202.jpg  \n",
            " extracting: /content/val_images/val2017/000000233033.jpg  \n",
            " extracting: /content/val_images/val2017/000000283717.jpg  \n",
            " extracting: /content/val_images/val2017/000000132931.jpg  \n",
            " extracting: /content/val_images/val2017/000000170545.jpg  \n",
            " extracting: /content/val_images/val2017/000000500613.jpg  \n",
            " extracting: /content/val_images/val2017/000000386879.jpg  \n",
            " extracting: /content/val_images/val2017/000000182202.jpg  \n",
            " extracting: /content/val_images/val2017/000000227187.jpg  \n",
            " extracting: /content/val_images/val2017/000000344816.jpg  \n",
            " extracting: /content/val_images/val2017/000000435206.jpg  \n",
            " extracting: /content/val_images/val2017/000000546659.jpg  \n",
            " extracting: /content/val_images/val2017/000000296317.jpg  \n",
            " extracting: /content/val_images/val2017/000000261706.jpg  \n",
            " extracting: /content/val_images/val2017/000000408774.jpg  \n",
            " extracting: /content/val_images/val2017/000000371042.jpg  \n",
            " extracting: /content/val_images/val2017/000000506004.jpg  \n",
            " extracting: /content/val_images/val2017/000000235252.jpg  \n",
            " extracting: /content/val_images/val2017/000000562561.jpg  \n",
            " extracting: /content/val_images/val2017/000000219271.jpg  \n",
            " extracting: /content/val_images/val2017/000000125257.jpg  \n",
            " extracting: /content/val_images/val2017/000000034873.jpg  \n",
            " extracting: /content/val_images/val2017/000000053909.jpg  \n",
            " extracting: /content/val_images/val2017/000000121673.jpg  \n",
            " extracting: /content/val_images/val2017/000000033759.jpg  \n",
            " extracting: /content/val_images/val2017/000000196843.jpg  \n",
            " extracting: /content/val_images/val2017/000000502347.jpg  \n",
            " extracting: /content/val_images/val2017/000000306582.jpg  \n",
            " extracting: /content/val_images/val2017/000000129322.jpg  \n",
            " extracting: /content/val_images/val2017/000000512194.jpg  \n",
            " extracting: /content/val_images/val2017/000000192904.jpg  \n",
            " extracting: /content/val_images/val2017/000000447522.jpg  \n",
            " extracting: /content/val_images/val2017/000000315219.jpg  \n",
            " extracting: /content/val_images/val2017/000000197658.jpg  \n",
            " extracting: /content/val_images/val2017/000000089078.jpg  \n",
            " extracting: /content/val_images/val2017/000000398652.jpg  \n",
            " extracting: /content/val_images/val2017/000000500049.jpg  \n",
            " extracting: /content/val_images/val2017/000000543300.jpg  \n",
            " extracting: /content/val_images/val2017/000000148999.jpg  \n",
            " extracting: /content/val_images/val2017/000000055022.jpg  \n",
            " extracting: /content/val_images/val2017/000000090891.jpg  \n",
            " extracting: /content/val_images/val2017/000000567898.jpg  \n",
            " extracting: /content/val_images/val2017/000000002685.jpg  \n",
            " extracting: /content/val_images/val2017/000000312720.jpg  \n",
            " extracting: /content/val_images/val2017/000000465179.jpg  \n",
            " extracting: /content/val_images/val2017/000000458325.jpg  \n",
            " extracting: /content/val_images/val2017/000000540932.jpg  \n",
            " extracting: /content/val_images/val2017/000000184321.jpg  \n",
            " extracting: /content/val_images/val2017/000000068628.jpg  \n",
            " extracting: /content/val_images/val2017/000000026204.jpg  \n",
            " extracting: /content/val_images/val2017/000000170278.jpg  \n",
            " extracting: /content/val_images/val2017/000000288062.jpg  \n",
            " extracting: /content/val_images/val2017/000000201934.jpg  \n",
            " extracting: /content/val_images/val2017/000000527220.jpg  \n",
            " extracting: /content/val_images/val2017/000000318908.jpg  \n",
            " extracting: /content/val_images/val2017/000000404128.jpg  \n",
            " extracting: /content/val_images/val2017/000000019432.jpg  \n",
            " extracting: /content/val_images/val2017/000000003845.jpg  \n",
            " extracting: /content/val_images/val2017/000000323263.jpg  \n",
            " extracting: /content/val_images/val2017/000000115870.jpg  \n",
            " extracting: /content/val_images/val2017/000000338304.jpg  \n",
            " extracting: /content/val_images/val2017/000000580294.jpg  \n",
            " extracting: /content/val_images/val2017/000000201426.jpg  \n",
            " extracting: /content/val_images/val2017/000000437239.jpg  \n",
            " extracting: /content/val_images/val2017/000000265777.jpg  \n",
            " extracting: /content/val_images/val2017/000000348481.jpg  \n",
            " extracting: /content/val_images/val2017/000000443426.jpg  \n",
            " extracting: /content/val_images/val2017/000000292225.jpg  \n",
            " extracting: /content/val_images/val2017/000000553990.jpg  \n",
            " extracting: /content/val_images/val2017/000000081594.jpg  \n",
            " extracting: /content/val_images/val2017/000000082807.jpg  \n",
            " extracting: /content/val_images/val2017/000000348708.jpg  \n",
            " extracting: /content/val_images/val2017/000000500716.jpg  \n",
            " extracting: /content/val_images/val2017/000000312549.jpg  \n",
            " extracting: /content/val_images/val2017/000000000872.jpg  \n",
            " extracting: /content/val_images/val2017/000000456865.jpg  \n",
            " extracting: /content/val_images/val2017/000000442306.jpg  \n",
            " extracting: /content/val_images/val2017/000000497568.jpg  \n",
            " extracting: /content/val_images/val2017/000000091921.jpg  \n",
            " extracting: /content/val_images/val2017/000000578093.jpg  \n",
            " extracting: /content/val_images/val2017/000000014038.jpg  \n",
            " extracting: /content/val_images/val2017/000000134112.jpg  \n",
            " extracting: /content/val_images/val2017/000000358923.jpg  \n",
            " extracting: /content/val_images/val2017/000000166287.jpg  \n",
            " extracting: /content/val_images/val2017/000000179642.jpg  \n",
            " extracting: /content/val_images/val2017/000000082821.jpg  \n",
            " extracting: /content/val_images/val2017/000000124798.jpg  \n",
            " extracting: /content/val_images/val2017/000000522393.jpg  \n",
            " extracting: /content/val_images/val2017/000000007818.jpg  \n",
            " extracting: /content/val_images/val2017/000000002149.jpg  \n",
            " extracting: /content/val_images/val2017/000000562207.jpg  \n",
            " extracting: /content/val_images/val2017/000000356347.jpg  \n",
            " extracting: /content/val_images/val2017/000000466125.jpg  \n",
            " extracting: /content/val_images/val2017/000000395903.jpg  \n",
            " extracting: /content/val_images/val2017/000000420281.jpg  \n",
            " extracting: /content/val_images/val2017/000000400367.jpg  \n",
            " extracting: /content/val_images/val2017/000000175387.jpg  \n",
            " extracting: /content/val_images/val2017/000000341681.jpg  \n",
            " extracting: /content/val_images/val2017/000000329455.jpg  \n",
            " extracting: /content/val_images/val2017/000000108253.jpg  \n",
            " extracting: /content/val_images/val2017/000000226883.jpg  \n",
            " extracting: /content/val_images/val2017/000000449406.jpg  \n",
            " extracting: /content/val_images/val2017/000000007511.jpg  \n",
            " extracting: /content/val_images/val2017/000000573943.jpg  \n",
            " extracting: /content/val_images/val2017/000000001993.jpg  \n",
            " extracting: /content/val_images/val2017/000000310980.jpg  \n",
            " extracting: /content/val_images/val2017/000000107094.jpg  \n",
            " extracting: /content/val_images/val2017/000000096001.jpg  \n",
            " extracting: /content/val_images/val2017/000000502136.jpg  \n",
            " extracting: /content/val_images/val2017/000000245026.jpg  \n",
            " extracting: /content/val_images/val2017/000000186637.jpg  \n",
            " extracting: /content/val_images/val2017/000000020333.jpg  \n",
            " extracting: /content/val_images/val2017/000000127987.jpg  \n",
            " extracting: /content/val_images/val2017/000000561679.jpg  \n",
            " extracting: /content/val_images/val2017/000000033005.jpg  \n",
            " extracting: /content/val_images/val2017/000000127394.jpg  \n",
            " extracting: /content/val_images/val2017/000000009769.jpg  \n",
            " extracting: /content/val_images/val2017/000000570664.jpg  \n",
            " extracting: /content/val_images/val2017/000000188465.jpg  \n",
            " extracting: /content/val_images/val2017/000000549136.jpg  \n",
            " extracting: /content/val_images/val2017/000000042563.jpg  \n",
            " extracting: /content/val_images/val2017/000000297343.jpg  \n",
            " extracting: /content/val_images/val2017/000000209142.jpg  \n",
            " extracting: /content/val_images/val2017/000000465129.jpg  \n",
            " extracting: /content/val_images/val2017/000000116589.jpg  \n",
            " extracting: /content/val_images/val2017/000000581781.jpg  \n",
            " extracting: /content/val_images/val2017/000000027932.jpg  \n",
            " extracting: /content/val_images/val2017/000000555412.jpg  \n",
            " extracting: /content/val_images/val2017/000000389804.jpg  \n",
            " extracting: /content/val_images/val2017/000000241297.jpg  \n",
            " extracting: /content/val_images/val2017/000000052507.jpg  \n",
            " extracting: /content/val_images/val2017/000000100238.jpg  \n",
            " extracting: /content/val_images/val2017/000000261796.jpg  \n",
            " extracting: /content/val_images/val2017/000000055072.jpg  \n",
            " extracting: /content/val_images/val2017/000000476704.jpg  \n",
            " extracting: /content/val_images/val2017/000000573008.jpg  \n",
            " extracting: /content/val_images/val2017/000000304545.jpg  \n",
            " extracting: /content/val_images/val2017/000000268729.jpg  \n",
            " extracting: /content/val_images/val2017/000000508482.jpg  \n",
            " extracting: /content/val_images/val2017/000000019786.jpg  \n",
            " extracting: /content/val_images/val2017/000000384661.jpg  \n",
            " extracting: /content/val_images/val2017/000000301061.jpg  \n",
            " extracting: /content/val_images/val2017/000000427055.jpg  \n",
            " extracting: /content/val_images/val2017/000000103723.jpg  \n",
            " extracting: /content/val_images/val2017/000000254368.jpg  \n",
            " extracting: /content/val_images/val2017/000000219283.jpg  \n",
            " extracting: /content/val_images/val2017/000000576654.jpg  \n",
            " extracting: /content/val_images/val2017/000000519764.jpg  \n",
            " extracting: /content/val_images/val2017/000000302030.jpg  \n",
            " extracting: /content/val_images/val2017/000000177213.jpg  \n",
            " extracting: /content/val_images/val2017/000000183716.jpg  \n",
            " extracting: /content/val_images/val2017/000000535858.jpg  \n",
            " extracting: /content/val_images/val2017/000000116439.jpg  \n",
            " extracting: /content/val_images/val2017/000000043314.jpg  \n",
            " extracting: /content/val_images/val2017/000000479448.jpg  \n",
            " extracting: /content/val_images/val2017/000000547144.jpg  \n",
            " extracting: /content/val_images/val2017/000000221155.jpg  \n",
            " extracting: /content/val_images/val2017/000000463730.jpg  \n",
            " extracting: /content/val_images/val2017/000000207538.jpg  \n",
            " extracting: /content/val_images/val2017/000000080273.jpg  \n",
            " extracting: /content/val_images/val2017/000000407943.jpg  \n",
            " extracting: /content/val_images/val2017/000000158227.jpg  \n",
            " extracting: /content/val_images/val2017/000000407298.jpg  \n",
            " extracting: /content/val_images/val2017/000000477441.jpg  \n",
            " extracting: /content/val_images/val2017/000000128372.jpg  \n",
            " extracting: /content/val_images/val2017/000000074200.jpg  \n",
            " extracting: /content/val_images/val2017/000000322724.jpg  \n",
            " extracting: /content/val_images/val2017/000000569976.jpg  \n",
            " extracting: /content/val_images/val2017/000000191845.jpg  \n",
            " extracting: /content/val_images/val2017/000000110359.jpg  \n",
            " extracting: /content/val_images/val2017/000000299887.jpg  \n",
            " extracting: /content/val_images/val2017/000000227491.jpg  \n",
            " extracting: /content/val_images/val2017/000000187055.jpg  \n",
            " extracting: /content/val_images/val2017/000000159399.jpg  \n",
            " extracting: /content/val_images/val2017/000000369037.jpg  \n",
            " extracting: /content/val_images/val2017/000000100582.jpg  \n",
            " extracting: /content/val_images/val2017/000000549055.jpg  \n",
            " extracting: /content/val_images/val2017/000000074058.jpg  \n",
            " extracting: /content/val_images/val2017/000000429530.jpg  \n",
            " extracting: /content/val_images/val2017/000000284282.jpg  \n",
            " extracting: /content/val_images/val2017/000000076417.jpg  \n",
            " extracting: /content/val_images/val2017/000000563267.jpg  \n",
            " extracting: /content/val_images/val2017/000000453166.jpg  \n",
            " extracting: /content/val_images/val2017/000000563281.jpg  \n",
            " extracting: /content/val_images/val2017/000000205514.jpg  \n",
            " extracting: /content/val_images/val2017/000000021903.jpg  \n",
            " extracting: /content/val_images/val2017/000000109441.jpg  \n",
            " extracting: /content/val_images/val2017/000000183246.jpg  \n",
            " extracting: /content/val_images/val2017/000000064523.jpg  \n",
            " extracting: /content/val_images/val2017/000000070774.jpg  \n",
            " extracting: /content/val_images/val2017/000000499109.jpg  \n",
            " extracting: /content/val_images/val2017/000000105014.jpg  \n",
            " extracting: /content/val_images/val2017/000000515445.jpg  \n",
            " extracting: /content/val_images/val2017/000000363207.jpg  \n",
            " extracting: /content/val_images/val2017/000000169076.jpg  \n",
            " extracting: /content/val_images/val2017/000000031296.jpg  \n",
            " extracting: /content/val_images/val2017/000000521601.jpg  \n",
            " extracting: /content/val_images/val2017/000000263644.jpg  \n",
            " extracting: /content/val_images/val2017/000000523782.jpg  \n",
            " extracting: /content/val_images/val2017/000000366611.jpg  \n",
            " extracting: /content/val_images/val2017/000000271997.jpg  \n",
            " extracting: /content/val_images/val2017/000000053624.jpg  \n",
            " extracting: /content/val_images/val2017/000000407825.jpg  \n",
            " extracting: /content/val_images/val2017/000000475223.jpg  \n",
            " extracting: /content/val_images/val2017/000000482436.jpg  \n",
            " extracting: /content/val_images/val2017/000000306733.jpg  \n",
            " extracting: /content/val_images/val2017/000000412362.jpg  \n",
            " extracting: /content/val_images/val2017/000000052565.jpg  \n",
            " extracting: /content/val_images/val2017/000000189828.jpg  \n",
            " extracting: /content/val_images/val2017/000000520707.jpg  \n",
            " extracting: /content/val_images/val2017/000000449996.jpg  \n",
            " extracting: /content/val_images/val2017/000000221213.jpg  \n",
            " extracting: /content/val_images/val2017/000000374545.jpg  \n",
            " extracting: /content/val_images/val2017/000000555705.jpg  \n",
            " extracting: /content/val_images/val2017/000000426372.jpg  \n",
            " extracting: /content/val_images/val2017/000000374369.jpg  \n",
            " extracting: /content/val_images/val2017/000000404479.jpg  \n",
            " extracting: /content/val_images/val2017/000000313783.jpg  \n",
            " extracting: /content/val_images/val2017/000000243034.jpg  \n",
            " extracting: /content/val_images/val2017/000000289594.jpg  \n",
            " extracting: /content/val_images/val2017/000000521819.jpg  \n",
            " extracting: /content/val_images/val2017/000000218424.jpg  \n",
            " extracting: /content/val_images/val2017/000000431876.jpg  \n",
            " extracting: /content/val_images/val2017/000000309655.jpg  \n",
            " extracting: /content/val_images/val2017/000000469174.jpg  \n",
            " extracting: /content/val_images/val2017/000000049259.jpg  \n",
            " extracting: /content/val_images/val2017/000000438017.jpg  \n",
            " extracting: /content/val_images/val2017/000000515025.jpg  \n",
            " extracting: /content/val_images/val2017/000000402765.jpg  \n",
            " extracting: /content/val_images/val2017/000000066231.jpg  \n",
            " extracting: /content/val_images/val2017/000000154425.jpg  \n",
            " extracting: /content/val_images/val2017/000000377000.jpg  \n",
            " extracting: /content/val_images/val2017/000000520077.jpg  \n",
            " extracting: /content/val_images/val2017/000000033221.jpg  \n",
            " extracting: /content/val_images/val2017/000000519491.jpg  \n",
            " extracting: /content/val_images/val2017/000000223959.jpg  \n",
            " extracting: /content/val_images/val2017/000000188689.jpg  \n",
            " extracting: /content/val_images/val2017/000000079969.jpg  \n",
            " extracting: /content/val_images/val2017/000000221872.jpg  \n",
            " extracting: /content/val_images/val2017/000000365385.jpg  \n",
            " extracting: /content/val_images/val2017/000000140583.jpg  \n",
            " extracting: /content/val_images/val2017/000000304560.jpg  \n",
            " extracting: /content/val_images/val2017/000000323828.jpg  \n",
            " extracting: /content/val_images/val2017/000000296634.jpg  \n",
            " extracting: /content/val_images/val2017/000000170893.jpg  \n",
            " extracting: /content/val_images/val2017/000000534270.jpg  \n",
            " extracting: /content/val_images/val2017/000000049761.jpg  \n",
            " extracting: /content/val_images/val2017/000000240940.jpg  \n",
            " extracting: /content/val_images/val2017/000000471567.jpg  \n",
            " extracting: /content/val_images/val2017/000000262440.jpg  \n",
            " extracting: /content/val_images/val2017/000000304291.jpg  \n",
            " extracting: /content/val_images/val2017/000000038048.jpg  \n",
            " extracting: /content/val_images/val2017/000000515577.jpg  \n",
            " extracting: /content/val_images/val2017/000000378116.jpg  \n",
            " extracting: /content/val_images/val2017/000000371699.jpg  \n",
            " extracting: /content/val_images/val2017/000000435081.jpg  \n",
            " extracting: /content/val_images/val2017/000000155154.jpg  \n",
            " extracting: /content/val_images/val2017/000000565012.jpg  \n",
            " extracting: /content/val_images/val2017/000000284764.jpg  \n",
            " extracting: /content/val_images/val2017/000000071711.jpg  \n",
            " extracting: /content/val_images/val2017/000000565778.jpg  \n",
            " extracting: /content/val_images/val2017/000000107851.jpg  \n",
            " extracting: /content/val_images/val2017/000000516677.jpg  \n",
            " extracting: /content/val_images/val2017/000000205105.jpg  \n",
            " extracting: /content/val_images/val2017/000000144114.jpg  \n",
            " extracting: /content/val_images/val2017/000000104612.jpg  \n",
            " extracting: /content/val_images/val2017/000000037740.jpg  \n",
            " extracting: /content/val_images/val2017/000000519338.jpg  \n",
            " extracting: /content/val_images/val2017/000000240023.jpg  \n",
            " extracting: /content/val_images/val2017/000000032941.jpg  \n",
            " extracting: /content/val_images/val2017/000000500257.jpg  \n",
            " extracting: /content/val_images/val2017/000000554838.jpg  \n",
            " extracting: /content/val_images/val2017/000000292082.jpg  \n",
            " extracting: /content/val_images/val2017/000000176634.jpg  \n",
            " extracting: /content/val_images/val2017/000000212573.jpg  \n",
            " extracting: /content/val_images/val2017/000000437898.jpg  \n",
            " extracting: /content/val_images/val2017/000000328030.jpg  \n",
            " extracting: /content/val_images/val2017/000000047010.jpg  \n",
            " extracting: /content/val_images/val2017/000000199236.jpg  \n",
            " extracting: /content/val_images/val2017/000000360137.jpg  \n",
            " extracting: /content/val_images/val2017/000000157767.jpg  \n",
            " extracting: /content/val_images/val2017/000000200667.jpg  \n",
            " extracting: /content/val_images/val2017/000000053529.jpg  \n",
            " extracting: /content/val_images/val2017/000000190676.jpg  \n",
            " extracting: /content/val_images/val2017/000000154431.jpg  \n",
            " extracting: /content/val_images/val2017/000000352582.jpg  \n",
            " extracting: /content/val_images/val2017/000000367818.jpg  \n",
            " extracting: /content/val_images/val2017/000000272212.jpg  \n",
            " extracting: /content/val_images/val2017/000000531135.jpg  \n",
            " extracting: /content/val_images/val2017/000000410487.jpg  \n",
            " extracting: /content/val_images/val2017/000000090108.jpg  \n",
            " extracting: /content/val_images/val2017/000000575500.jpg  \n",
            " extracting: /content/val_images/val2017/000000082986.jpg  \n",
            " extracting: /content/val_images/val2017/000000449661.jpg  \n",
            " extracting: /content/val_images/val2017/000000384666.jpg  \n",
            " extracting: /content/val_images/val2017/000000569700.jpg  \n",
            " extracting: /content/val_images/val2017/000000264968.jpg  \n",
            " extracting: /content/val_images/val2017/000000213593.jpg  \n",
            " extracting: /content/val_images/val2017/000000293804.jpg  \n",
            " extracting: /content/val_images/val2017/000000511076.jpg  \n",
            " extracting: /content/val_images/val2017/000000061171.jpg  \n",
            " extracting: /content/val_images/val2017/000000033707.jpg  \n",
            " extracting: /content/val_images/val2017/000000424975.jpg  \n",
            " extracting: /content/val_images/val2017/000000217219.jpg  \n",
            " extracting: /content/val_images/val2017/000000427160.jpg  \n",
            " extracting: /content/val_images/val2017/000000410934.jpg  \n",
            " extracting: /content/val_images/val2017/000000214753.jpg  \n",
            " extracting: /content/val_images/val2017/000000186422.jpg  \n",
            " extracting: /content/val_images/val2017/000000034417.jpg  \n",
            " extracting: /content/val_images/val2017/000000176232.jpg  \n",
            " extracting: /content/val_images/val2017/000000176847.jpg  \n",
            " extracting: /content/val_images/val2017/000000172547.jpg  \n",
            " extracting: /content/val_images/val2017/000000423798.jpg  \n",
            " extracting: /content/val_images/val2017/000000183437.jpg  \n",
            " extracting: /content/val_images/val2017/000000501023.jpg  \n",
            " extracting: /content/val_images/val2017/000000203639.jpg  \n",
            " extracting: /content/val_images/val2017/000000376284.jpg  \n",
            " extracting: /content/val_images/val2017/000000017905.jpg  \n",
            " extracting: /content/val_images/val2017/000000078170.jpg  \n",
            " extracting: /content/val_images/val2017/000000022969.jpg  \n",
            " extracting: /content/val_images/val2017/000000270908.jpg  \n",
            " extracting: /content/val_images/val2017/000000520531.jpg  \n",
            " extracting: /content/val_images/val2017/000000114049.jpg  \n",
            " extracting: /content/val_images/val2017/000000532058.jpg  \n",
            " extracting: /content/val_images/val2017/000000427034.jpg  \n",
            " extracting: /content/val_images/val2017/000000067534.jpg  \n",
            " extracting: /content/val_images/val2017/000000184338.jpg  \n",
            " extracting: /content/val_images/val2017/000000358525.jpg  \n",
            " extracting: /content/val_images/val2017/000000365095.jpg  \n",
            " extracting: /content/val_images/val2017/000000342397.jpg  \n",
            " extracting: /content/val_images/val2017/000000168619.jpg  \n",
            " extracting: /content/val_images/val2017/000000225184.jpg  \n",
            " extracting: /content/val_images/val2017/000000094336.jpg  \n",
            " extracting: /content/val_images/val2017/000000063047.jpg  \n",
            " extracting: /content/val_images/val2017/000000133244.jpg  \n",
            " extracting: /content/val_images/val2017/000000096549.jpg  \n",
            " extracting: /content/val_images/val2017/000000266981.jpg  \n",
            " extracting: /content/val_images/val2017/000000162035.jpg  \n",
            " extracting: /content/val_images/val2017/000000408830.jpg  \n",
            " extracting: /content/val_images/val2017/000000164637.jpg  \n",
            " extracting: /content/val_images/val2017/000000215114.jpg  \n",
            " extracting: /content/val_images/val2017/000000403122.jpg  \n",
            " extracting: /content/val_images/val2017/000000580418.jpg  \n",
            " extracting: /content/val_images/val2017/000000170739.jpg  \n",
            " extracting: /content/val_images/val2017/000000451084.jpg  \n",
            " extracting: /content/val_images/val2017/000000119828.jpg  \n",
            " extracting: /content/val_images/val2017/000000223182.jpg  \n",
            " extracting: /content/val_images/val2017/000000531495.jpg  \n",
            " extracting: /content/val_images/val2017/000000317999.jpg  \n",
            " extracting: /content/val_images/val2017/000000568690.jpg  \n",
            " extracting: /content/val_images/val2017/000000516871.jpg  \n",
            " extracting: /content/val_images/val2017/000000184324.jpg  \n",
            " extracting: /content/val_images/val2017/000000228436.jpg  \n",
            " extracting: /content/val_images/val2017/000000162581.jpg  \n",
            " extracting: /content/val_images/val2017/000000426329.jpg  \n",
            " extracting: /content/val_images/val2017/000000420840.jpg  \n",
            " extracting: /content/val_images/val2017/000000473015.jpg  \n",
            " extracting: /content/val_images/val2017/000000239627.jpg  \n",
            " extracting: /content/val_images/val2017/000000541952.jpg  \n",
            " extracting: /content/val_images/val2017/000000223747.jpg  \n",
            " extracting: /content/val_images/val2017/000000481413.jpg  \n",
            " extracting: /content/val_images/val2017/000000539445.jpg  \n",
            " extracting: /content/val_images/val2017/000000357941.jpg  \n",
            " extracting: /content/val_images/val2017/000000410456.jpg  \n",
            " extracting: /content/val_images/val2017/000000222299.jpg  \n",
            " extracting: /content/val_images/val2017/000000489924.jpg  \n",
            " extracting: /content/val_images/val2017/000000058029.jpg  \n",
            " extracting: /content/val_images/val2017/000000243075.jpg  \n",
            " extracting: /content/val_images/val2017/000000137294.jpg  \n",
            " extracting: /content/val_images/val2017/000000569059.jpg  \n",
            " extracting: /content/val_images/val2017/000000370375.jpg  \n",
            " extracting: /content/val_images/val2017/000000099810.jpg  \n",
            " extracting: /content/val_images/val2017/000000122672.jpg  \n",
            " extracting: /content/val_images/val2017/000000186449.jpg  \n",
            " extracting: /content/val_images/val2017/000000445792.jpg  \n",
            " extracting: /content/val_images/val2017/000000375493.jpg  \n",
            " extracting: /content/val_images/val2017/000000183127.jpg  \n",
            " extracting: /content/val_images/val2017/000000380711.jpg  \n",
            " extracting: /content/val_images/val2017/000000442836.jpg  \n",
            " extracting: /content/val_images/val2017/000000491071.jpg  \n",
            " extracting: /content/val_images/val2017/000000026564.jpg  \n",
            " extracting: /content/val_images/val2017/000000367082.jpg  \n",
            " extracting: /content/val_images/val2017/000000464144.jpg  \n",
            " extracting: /content/val_images/val2017/000000535306.jpg  \n",
            " extracting: /content/val_images/val2017/000000463037.jpg  \n",
            " extracting: /content/val_images/val2017/000000409198.jpg  \n",
            " extracting: /content/val_images/val2017/000000445846.jpg  \n",
            " extracting: /content/val_images/val2017/000000257865.jpg  \n",
            " extracting: /content/val_images/val2017/000000166509.jpg  \n",
            " extracting: /content/val_images/val2017/000000056344.jpg  \n",
            " extracting: /content/val_images/val2017/000000069795.jpg  \n",
            " extracting: /content/val_images/val2017/000000250619.jpg  \n",
            " extracting: /content/val_images/val2017/000000173183.jpg  \n",
            " extracting: /content/val_images/val2017/000000533855.jpg  \n",
            " extracting: /content/val_images/val2017/000000364297.jpg  \n",
            " extracting: /content/val_images/val2017/000000451571.jpg  \n",
            " extracting: /content/val_images/val2017/000000025096.jpg  \n",
            " extracting: /content/val_images/val2017/000000422836.jpg  \n",
            " extracting: /content/val_images/val2017/000000078404.jpg  \n",
            " extracting: /content/val_images/val2017/000000043816.jpg  \n",
            " extracting: /content/val_images/val2017/000000528862.jpg  \n",
            " extracting: /content/val_images/val2017/000000088462.jpg  \n",
            " extracting: /content/val_images/val2017/000000253695.jpg  \n",
            " extracting: /content/val_images/val2017/000000147729.jpg  \n",
            " extracting: /content/val_images/val2017/000000079014.jpg  \n",
            " extracting: /content/val_images/val2017/000000202001.jpg  \n",
            " extracting: /content/val_images/val2017/000000244019.jpg  \n",
            " extracting: /content/val_images/val2017/000000544306.jpg  \n",
            " extracting: /content/val_images/val2017/000000259382.jpg  \n",
            " extracting: /content/val_images/val2017/000000304365.jpg  \n",
            " extracting: /content/val_images/val2017/000000301421.jpg  \n",
            " extracting: /content/val_images/val2017/000000020571.jpg  \n",
            " extracting: /content/val_images/val2017/000000157601.jpg  \n",
            " extracting: /content/val_images/val2017/000000468505.jpg  \n",
            " extracting: /content/val_images/val2017/000000088265.jpg  \n",
            " extracting: /content/val_images/val2017/000000027696.jpg  \n",
            " extracting: /content/val_images/val2017/000000234807.jpg  \n",
            " extracting: /content/val_images/val2017/000000547383.jpg  \n",
            " extracting: /content/val_images/val2017/000000499775.jpg  \n",
            " extracting: /content/val_images/val2017/000000158660.jpg  \n",
            " extracting: /content/val_images/val2017/000000173008.jpg  \n",
            " extracting: /content/val_images/val2017/000000216516.jpg  \n",
            " extracting: /content/val_images/val2017/000000071877.jpg  \n",
            " extracting: /content/val_images/val2017/000000153669.jpg  \n",
            " extracting: /content/val_images/val2017/000000520009.jpg  \n",
            " extracting: /content/val_images/val2017/000000179112.jpg  \n",
            " extracting: /content/val_images/val2017/000000378099.jpg  \n",
            " extracting: /content/val_images/val2017/000000562197.jpg  \n",
            " extracting: /content/val_images/val2017/000000130586.jpg  \n",
            " extracting: /content/val_images/val2017/000000329456.jpg  \n",
            " extracting: /content/val_images/val2017/000000314541.jpg  \n",
            " extracting: /content/val_images/val2017/000000286907.jpg  \n",
            " extracting: /content/val_images/val2017/000000000632.jpg  \n",
            " extracting: /content/val_images/val2017/000000460147.jpg  \n",
            " extracting: /content/val_images/val2017/000000249129.jpg  \n",
            " extracting: /content/val_images/val2017/000000379800.jpg  \n",
            " extracting: /content/val_images/val2017/000000029640.jpg  \n",
            " extracting: /content/val_images/val2017/000000150638.jpg  \n",
            " extracting: /content/val_images/val2017/000000480985.jpg  \n",
            " extracting: /content/val_images/val2017/000000389532.jpg  \n",
            " extracting: /content/val_images/val2017/000000351362.jpg  \n",
            " extracting: /content/val_images/val2017/000000015338.jpg  \n",
            " extracting: /content/val_images/val2017/000000492110.jpg  \n",
            " extracting: /content/val_images/val2017/000000361103.jpg  \n",
            " extracting: /content/val_images/val2017/000000375015.jpg  \n",
            " extracting: /content/val_images/val2017/000000062025.jpg  \n",
            " extracting: /content/val_images/val2017/000000370999.jpg  \n",
            " extracting: /content/val_images/val2017/000000004134.jpg  \n",
            " extracting: /content/val_images/val2017/000000057725.jpg  \n",
            " extracting: /content/val_images/val2017/000000441286.jpg  \n",
            " extracting: /content/val_images/val2017/000000377486.jpg  \n",
            " extracting: /content/val_images/val2017/000000016451.jpg  \n",
            " extracting: /content/val_images/val2017/000000347456.jpg  \n",
            " extracting: /content/val_images/val2017/000000367195.jpg  \n",
            " extracting: /content/val_images/val2017/000000269196.jpg  \n",
            " extracting: /content/val_images/val2017/000000011699.jpg  \n",
            " extracting: /content/val_images/val2017/000000309495.jpg  \n",
            " extracting: /content/val_images/val2017/000000011813.jpg  \n",
            " extracting: /content/val_images/val2017/000000237071.jpg  \n",
            " extracting: /content/val_images/val2017/000000272566.jpg  \n",
            " extracting: /content/val_images/val2017/000000132796.jpg  \n",
            " extracting: /content/val_images/val2017/000000384949.jpg  \n",
            " extracting: /content/val_images/val2017/000000276055.jpg  \n",
            " extracting: /content/val_images/val2017/000000236721.jpg  \n",
            " extracting: /content/val_images/val2017/000000286523.jpg  \n",
            " extracting: /content/val_images/val2017/000000024027.jpg  \n",
            " extracting: /content/val_images/val2017/000000462614.jpg  \n",
            " extracting: /content/val_images/val2017/000000345261.jpg  \n",
            " extracting: /content/val_images/val2017/000000295316.jpg  \n",
            " extracting: /content/val_images/val2017/000000190637.jpg  \n",
            " extracting: /content/val_images/val2017/000000172617.jpg  \n",
            " extracting: /content/val_images/val2017/000000093717.jpg  \n",
            " extracting: /content/val_images/val2017/000000425702.jpg  \n",
            " extracting: /content/val_images/val2017/000000522889.jpg  \n",
            " extracting: /content/val_images/val2017/000000160556.jpg  \n",
            " extracting: /content/val_images/val2017/000000553511.jpg  \n",
            " extracting: /content/val_images/val2017/000000170099.jpg  \n",
            " extracting: /content/val_images/val2017/000000173799.jpg  \n",
            " extracting: /content/val_images/val2017/000000488736.jpg  \n",
            " extracting: /content/val_images/val2017/000000301135.jpg  \n",
            " extracting: /content/val_images/val2017/000000018491.jpg  \n",
            " extracting: /content/val_images/val2017/000000124277.jpg  \n",
            " extracting: /content/val_images/val2017/000000488673.jpg  \n",
            " extracting: /content/val_images/val2017/000000533816.jpg  \n",
            " extracting: /content/val_images/val2017/000000172935.jpg  \n",
            " extracting: /content/val_images/val2017/000000137576.jpg  \n",
            " extracting: /content/val_images/val2017/000000520264.jpg  \n",
            " extracting: /content/val_images/val2017/000000410650.jpg  \n",
            " extracting: /content/val_images/val2017/000000117914.jpg  \n",
            " extracting: /content/val_images/val2017/000000338901.jpg  \n",
            " extracting: /content/val_images/val2017/000000223955.jpg  \n",
            " extracting: /content/val_images/val2017/000000030675.jpg  \n",
            " extracting: /content/val_images/val2017/000000530061.jpg  \n",
            " extracting: /content/val_images/val2017/000000335954.jpg  \n",
            " extracting: /content/val_images/val2017/000000428218.jpg  \n",
            " extracting: /content/val_images/val2017/000000192670.jpg  \n",
            " extracting: /content/val_images/val2017/000000447465.jpg  \n",
            " extracting: /content/val_images/val2017/000000144984.jpg  \n",
            " extracting: /content/val_images/val2017/000000212559.jpg  \n",
            " extracting: /content/val_images/val2017/000000466339.jpg  \n",
            " extracting: /content/val_images/val2017/000000015335.jpg  \n",
            " extracting: /content/val_images/val2017/000000156924.jpg  \n",
            " extracting: /content/val_images/val2017/000000211825.jpg  \n",
            " extracting: /content/val_images/val2017/000000162732.jpg  \n",
            " extracting: /content/val_images/val2017/000000118367.jpg  \n",
            " extracting: /content/val_images/val2017/000000435208.jpg  \n",
            " extracting: /content/val_images/val2017/000000341828.jpg  \n",
            " extracting: /content/val_images/val2017/000000475365.jpg  \n",
            " extracting: /content/val_images/val2017/000000493613.jpg  \n",
            " extracting: /content/val_images/val2017/000000562581.jpg  \n",
            " extracting: /content/val_images/val2017/000000047585.jpg  \n",
            " extracting: /content/val_images/val2017/000000261535.jpg  \n",
            " extracting: /content/val_images/val2017/000000306139.jpg  \n",
            " extracting: /content/val_images/val2017/000000011051.jpg  \n",
            " extracting: /content/val_images/val2017/000000086755.jpg  \n",
            " extracting: /content/val_images/val2017/000000205289.jpg  \n",
            " extracting: /content/val_images/val2017/000000149375.jpg  \n",
            " extracting: /content/val_images/val2017/000000193245.jpg  \n",
            " extracting: /content/val_images/val2017/000000216277.jpg  \n",
            " extracting: /content/val_images/val2017/000000035197.jpg  \n",
            " extracting: /content/val_images/val2017/000000048504.jpg  \n",
            " extracting: /content/val_images/val2017/000000429011.jpg  \n",
            " extracting: /content/val_images/val2017/000000217957.jpg  \n",
            " extracting: /content/val_images/val2017/000000322895.jpg  \n",
            " extracting: /content/val_images/val2017/000000015079.jpg  \n",
            " extracting: /content/val_images/val2017/000000431140.jpg  \n",
            " extracting: /content/val_images/val2017/000000169356.jpg  \n",
            " extracting: /content/val_images/val2017/000000408696.jpg  \n",
            " extracting: /content/val_images/val2017/000000338325.jpg  \n",
            " extracting: /content/val_images/val2017/000000250137.jpg  \n",
            " extracting: /content/val_images/val2017/000000454404.jpg  \n",
            " extracting: /content/val_images/val2017/000000421060.jpg  \n",
            " extracting: /content/val_images/val2017/000000073326.jpg  \n",
            " extracting: /content/val_images/val2017/000000410878.jpg  \n",
            " extracting: /content/val_images/val2017/000000292908.jpg  \n",
            " extracting: /content/val_images/val2017/000000350679.jpg  \n",
            " extracting: /content/val_images/val2017/000000390301.jpg  \n",
            " extracting: /content/val_images/val2017/000000213547.jpg  \n",
            " extracting: /content/val_images/val2017/000000087244.jpg  \n",
            " extracting: /content/val_images/val2017/000000253819.jpg  \n",
            " extracting: /content/val_images/val2017/000000192699.jpg  \n",
            " extracting: /content/val_images/val2017/000000260261.jpg  \n",
            " extracting: /content/val_images/val2017/000000044279.jpg  \n",
            " extracting: /content/val_images/val2017/000000306136.jpg  \n",
            " extracting: /content/val_images/val2017/000000066771.jpg  \n",
            " extracting: /content/val_images/val2017/000000355257.jpg  \n",
            " extracting: /content/val_images/val2017/000000548339.jpg  \n",
            " extracting: /content/val_images/val2017/000000125062.jpg  \n",
            " extracting: /content/val_images/val2017/000000078565.jpg  \n",
            " extracting: /content/val_images/val2017/000000332845.jpg  \n",
            " extracting: /content/val_images/val2017/000000298904.jpg  \n",
            " extracting: /content/val_images/val2017/000000437351.jpg  \n",
            " extracting: /content/val_images/val2017/000000232646.jpg  \n",
            " extracting: /content/val_images/val2017/000000153217.jpg  \n",
            " extracting: /content/val_images/val2017/000000377946.jpg  \n",
            " extracting: /content/val_images/val2017/000000478136.jpg  \n",
            " extracting: /content/val_images/val2017/000000458992.jpg  \n",
            " extracting: /content/val_images/val2017/000000495448.jpg  \n",
            " extracting: /content/val_images/val2017/000000221708.jpg  \n",
            " extracting: /content/val_images/val2017/000000152214.jpg  \n",
            " extracting: /content/val_images/val2017/000000493019.jpg  \n",
            " extracting: /content/val_images/val2017/000000459195.jpg  \n",
            " extracting: /content/val_images/val2017/000000135890.jpg  \n",
            " extracting: /content/val_images/val2017/000000012062.jpg  \n",
            " extracting: /content/val_images/val2017/000000349860.jpg  \n",
            " extracting: /content/val_images/val2017/000000246436.jpg  \n",
            " extracting: /content/val_images/val2017/000000474854.jpg  \n",
            " extracting: /content/val_images/val2017/000000388903.jpg  \n",
            " extracting: /content/val_images/val2017/000000156643.jpg  \n",
            " extracting: /content/val_images/val2017/000000030828.jpg  \n",
            " extracting: /content/val_images/val2017/000000318138.jpg  \n",
            " extracting: /content/val_images/val2017/000000368456.jpg  \n",
            " extracting: /content/val_images/val2017/000000156292.jpg  \n",
            " extracting: /content/val_images/val2017/000000355905.jpg  \n",
            " extracting: /content/val_images/val2017/000000016598.jpg  \n",
            " extracting: /content/val_images/val2017/000000125472.jpg  \n",
            " extracting: /content/val_images/val2017/000000037670.jpg  \n",
            " extracting: /content/val_images/val2017/000000178744.jpg  \n",
            " extracting: /content/val_images/val2017/000000382009.jpg  \n",
            " extracting: /content/val_images/val2017/000000276024.jpg  \n",
            " extracting: /content/val_images/val2017/000000345027.jpg  \n",
            " extracting: /content/val_images/val2017/000000377113.jpg  \n",
            " extracting: /content/val_images/val2017/000000140556.jpg  \n",
            " extracting: /content/val_images/val2017/000000000139.jpg  \n",
            " extracting: /content/val_images/val2017/000000525155.jpg  \n",
            " extracting: /content/val_images/val2017/000000217753.jpg  \n",
            " extracting: /content/val_images/val2017/000000215259.jpg  \n",
            " extracting: /content/val_images/val2017/000000119365.jpg  \n",
            " extracting: /content/val_images/val2017/000000276707.jpg  \n",
            " extracting: /content/val_images/val2017/000000072852.jpg  \n",
            " extracting: /content/val_images/val2017/000000377814.jpg  \n",
            " extracting: /content/val_images/val2017/000000222118.jpg  \n",
            " extracting: /content/val_images/val2017/000000404922.jpg  \n",
            " extracting: /content/val_images/val2017/000000296649.jpg  \n",
            " extracting: /content/val_images/val2017/000000161032.jpg  \n",
            " extracting: /content/val_images/val2017/000000005529.jpg  \n",
            " extracting: /content/val_images/val2017/000000322864.jpg  \n",
            " extracting: /content/val_images/val2017/000000194716.jpg  \n",
            " extracting: /content/val_images/val2017/000000175364.jpg  \n",
            " extracting: /content/val_images/val2017/000000001268.jpg  \n",
            " extracting: /content/val_images/val2017/000000018193.jpg  \n",
            " extracting: /content/val_images/val2017/000000515266.jpg  \n",
            " extracting: /content/val_images/val2017/000000335081.jpg  \n",
            " extracting: /content/val_images/val2017/000000094614.jpg  \n",
            " extracting: /content/val_images/val2017/000000128748.jpg  \n",
            " extracting: /content/val_images/val2017/000000568439.jpg  \n",
            " extracting: /content/val_images/val2017/000000104198.jpg  \n",
            " extracting: /content/val_images/val2017/000000003501.jpg  \n",
            " extracting: /content/val_images/val2017/000000138492.jpg  \n",
            " extracting: /content/val_images/val2017/000000228942.jpg  \n",
            " extracting: /content/val_images/val2017/000000516143.jpg  \n",
            " extracting: /content/val_images/val2017/000000179214.jpg  \n",
            " extracting: /content/val_images/val2017/000000531707.jpg  \n",
            " extracting: /content/val_images/val2017/000000298994.jpg  \n",
            " extracting: /content/val_images/val2017/000000020107.jpg  \n",
            " extracting: /content/val_images/val2017/000000241677.jpg  \n",
            " extracting: /content/val_images/val2017/000000284725.jpg  \n",
            " extracting: /content/val_images/val2017/000000117908.jpg  \n",
            " extracting: /content/val_images/val2017/000000226058.jpg  \n",
            " extracting: /content/val_images/val2017/000000506454.jpg  \n",
            " extracting: /content/val_images/val2017/000000042888.jpg  \n",
            " extracting: /content/val_images/val2017/000000167486.jpg  \n",
            " extracting: /content/val_images/val2017/000000279927.jpg  \n",
            " extracting: /content/val_images/val2017/000000383289.jpg  \n",
            " extracting: /content/val_images/val2017/000000190236.jpg  \n",
            " extracting: /content/val_images/val2017/000000375078.jpg  \n",
            " extracting: /content/val_images/val2017/000000472030.jpg  \n",
            " extracting: /content/val_images/val2017/000000447789.jpg  \n",
            " extracting: /content/val_images/val2017/000000496409.jpg  \n",
            " extracting: /content/val_images/val2017/000000263969.jpg  \n",
            " extracting: /content/val_images/val2017/000000293474.jpg  \n",
            " extracting: /content/val_images/val2017/000000025386.jpg  \n",
            " extracting: /content/val_images/val2017/000000112634.jpg  \n",
            " extracting: /content/val_images/val2017/000000186624.jpg  \n",
            " extracting: /content/val_images/val2017/000000515077.jpg  \n",
            " extracting: /content/val_images/val2017/000000523194.jpg  \n",
            " extracting: /content/val_images/val2017/000000204871.jpg  \n",
            " extracting: /content/val_images/val2017/000000257084.jpg  \n",
            " extracting: /content/val_images/val2017/000000311392.jpg  \n",
            " extracting: /content/val_images/val2017/000000191761.jpg  \n",
            " extracting: /content/val_images/val2017/000000394328.jpg  \n",
            " extracting: /content/val_images/val2017/000000162092.jpg  \n",
            " extracting: /content/val_images/val2017/000000355325.jpg  \n",
            " extracting: /content/val_images/val2017/000000027620.jpg  \n",
            " extracting: /content/val_images/val2017/000000378453.jpg  \n",
            " extracting: /content/val_images/val2017/000000330554.jpg  \n",
            " extracting: /content/val_images/val2017/000000372819.jpg  \n",
            " extracting: /content/val_images/val2017/000000526706.jpg  \n",
            " extracting: /content/val_images/val2017/000000338986.jpg  \n",
            " extracting: /content/val_images/val2017/000000561009.jpg  \n",
            " extracting: /content/val_images/val2017/000000571008.jpg  \n",
            " extracting: /content/val_images/val2017/000000154705.jpg  \n",
            " extracting: /content/val_images/val2017/000000328286.jpg  \n",
            " extracting: /content/val_images/val2017/000000116208.jpg  \n",
            " extracting: /content/val_images/val2017/000000263860.jpg  \n",
            " extracting: /content/val_images/val2017/000000229221.jpg  \n",
            " extracting: /content/val_images/val2017/000000007108.jpg  \n",
            " extracting: /content/val_images/val2017/000000252507.jpg  \n",
            " extracting: /content/val_images/val2017/000000281759.jpg  \n",
            " extracting: /content/val_images/val2017/000000523100.jpg  \n",
            " extracting: /content/val_images/val2017/000000165713.jpg  \n",
            " extracting: /content/val_images/val2017/000000242724.jpg  \n",
            " extracting: /content/val_images/val2017/000000234779.jpg  \n",
            " extracting: /content/val_images/val2017/000000465675.jpg  \n",
            " extracting: /content/val_images/val2017/000000504000.jpg  \n",
            " extracting: /content/val_images/val2017/000000298251.jpg  \n",
            " extracting: /content/val_images/val2017/000000015660.jpg  \n",
            " extracting: /content/val_images/val2017/000000111086.jpg  \n",
            " extracting: /content/val_images/val2017/000000279730.jpg  \n",
            " extracting: /content/val_images/val2017/000000331075.jpg  \n",
            " extracting: /content/val_images/val2017/000000336587.jpg  \n",
            " extracting: /content/val_images/val2017/000000350002.jpg  \n",
            " extracting: /content/val_images/val2017/000000390555.jpg  \n",
            " extracting: /content/val_images/val2017/000000018380.jpg  \n",
            " extracting: /content/val_images/val2017/000000114907.jpg  \n",
            " extracting: /content/val_images/val2017/000000357978.jpg  \n",
            " extracting: /content/val_images/val2017/000000133819.jpg  \n",
            " extracting: /content/val_images/val2017/000000487583.jpg  \n",
            " extracting: /content/val_images/val2017/000000278705.jpg  \n",
            " extracting: /content/val_images/val2017/000000380706.jpg  \n",
            " extracting: /content/val_images/val2017/000000229111.jpg  \n",
            " extracting: /content/val_images/val2017/000000283038.jpg  \n",
            " extracting: /content/val_images/val2017/000000365655.jpg  \n",
            " extracting: /content/val_images/val2017/000000049269.jpg  \n",
            " extracting: /content/val_images/val2017/000000402118.jpg  \n",
            " extracting: /content/val_images/val2017/000000239537.jpg  \n",
            " extracting: /content/val_images/val2017/000000298738.jpg  \n",
            " extracting: /content/val_images/val2017/000000334371.jpg  \n",
            " extracting: /content/val_images/val2017/000000263403.jpg  \n",
            " extracting: /content/val_images/val2017/000000106563.jpg  \n",
            " extracting: /content/val_images/val2017/000000449603.jpg  \n",
            " extracting: /content/val_images/val2017/000000346232.jpg  \n",
            " extracting: /content/val_images/val2017/000000248284.jpg  \n",
            " extracting: /content/val_images/val2017/000000572620.jpg  \n",
            " extracting: /content/val_images/val2017/000000395701.jpg  \n",
            " extracting: /content/val_images/val2017/000000054164.jpg  \n",
            " extracting: /content/val_images/val2017/000000171382.jpg  \n",
            " extracting: /content/val_images/val2017/000000513181.jpg  \n",
            " extracting: /content/val_images/val2017/000000161781.jpg  \n",
            " extracting: /content/val_images/val2017/000000394199.jpg  \n",
            " extracting: /content/val_images/val2017/000000301718.jpg  \n",
            " extracting: /content/val_images/val2017/000000555050.jpg  \n",
            " extracting: /content/val_images/val2017/000000388846.jpg  \n",
            " extracting: /content/val_images/val2017/000000323895.jpg  \n",
            " extracting: /content/val_images/val2017/000000234660.jpg  \n",
            " extracting: /content/val_images/val2017/000000343453.jpg  \n",
            " extracting: /content/val_images/val2017/000000540928.jpg  \n",
            " extracting: /content/val_images/val2017/000000190756.jpg  \n",
            " extracting: /content/val_images/val2017/000000068387.jpg  \n",
            " extracting: /content/val_images/val2017/000000151000.jpg  \n",
            " extracting: /content/val_images/val2017/000000244592.jpg  \n",
            " extracting: /content/val_images/val2017/000000158956.jpg  \n",
            " extracting: /content/val_images/val2017/000000058636.jpg  \n",
            " extracting: /content/val_images/val2017/000000326174.jpg  \n",
            " extracting: /content/val_images/val2017/000000241319.jpg  \n",
            " extracting: /content/val_images/val2017/000000244379.jpg  \n",
            " extracting: /content/val_images/val2017/000000263796.jpg  \n",
            " extracting: /content/val_images/val2017/000000176799.jpg  \n",
            " extracting: /content/val_images/val2017/000000491867.jpg  \n",
            " extracting: /content/val_images/val2017/000000017899.jpg  \n",
            " extracting: /content/val_images/val2017/000000455716.jpg  \n",
            " extracting: /content/val_images/val2017/000000284991.jpg  \n",
            " extracting: /content/val_images/val2017/000000084431.jpg  \n",
            " extracting: /content/val_images/val2017/000000284762.jpg  \n",
            " extracting: /content/val_images/val2017/000000255536.jpg  \n",
            " extracting: /content/val_images/val2017/000000043435.jpg  \n",
            " extracting: /content/val_images/val2017/000000546325.jpg  \n",
            " extracting: /content/val_images/val2017/000000291619.jpg  \n",
            " extracting: /content/val_images/val2017/000000512648.jpg  \n",
            " extracting: /content/val_images/val2017/000000014226.jpg  \n",
            " extracting: /content/val_images/val2017/000000084492.jpg  \n",
            " extracting: /content/val_images/val2017/000000376478.jpg  \n",
            " extracting: /content/val_images/val2017/000000124636.jpg  \n",
            " extracting: /content/val_images/val2017/000000564091.jpg  \n",
            " extracting: /content/val_images/val2017/000000477689.jpg  \n",
            " extracting: /content/val_images/val2017/000000523957.jpg  \n",
            " extracting: /content/val_images/val2017/000000570539.jpg  \n",
            " extracting: /content/val_images/val2017/000000470121.jpg  \n",
            " extracting: /content/val_images/val2017/000000199442.jpg  \n",
            " extracting: /content/val_images/val2017/000000563653.jpg  \n",
            " extracting: /content/val_images/val2017/000000181421.jpg  \n",
            " extracting: /content/val_images/val2017/000000302990.jpg  \n",
            " extracting: /content/val_images/val2017/000000446005.jpg  \n",
            " extracting: /content/val_images/val2017/000000329219.jpg  \n",
            " extracting: /content/val_images/val2017/000000388258.jpg  \n",
            " extracting: /content/val_images/val2017/000000126137.jpg  \n",
            " extracting: /content/val_images/val2017/000000500826.jpg  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "QEfyIKdr94Le"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###For inputing N-images into darknet, and generating results, we need to provide the path of all images in form of a text file\n",
        "###For that **glob** is used"
      ],
      "metadata": {
        "id": "okf7xasv0gQE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#find path of all files\n",
        "import glob\n",
        "\n",
        "# absolute path to search all text files inside a specific folder\n",
        "path = r'/content/val_images/val2017/*.jpg'\n",
        "files = glob.glob(path)\n",
        "print(type(files))\n",
        "print(files[0:5])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BHY45IER3WHR",
        "outputId": "e945815b-b190-467c-e225-913a580c43f8"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'list'>\n",
            "['/content/val_images/val2017/000000389197.jpg', '/content/val_images/val2017/000000223789.jpg', '/content/val_images/val2017/000000152771.jpg', '/content/val_images/val2017/000000570782.jpg', '/content/val_images/val2017/000000455157.jpg']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Writing image path into image_name.txt file"
      ],
      "metadata": {
        "id": "uPyldEsN1eYa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "with open(r'/content/image_name.txt', 'w') as fp:\n",
        "    count = 0\n",
        "    for item in files:\n",
        "        # write each item on a new line\n",
        "        count+=1\n",
        "        fp.write(\"%s\\n\" % item)\n",
        "        if(count==1000):\n",
        "          break\n",
        "    print('Done')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mvlpYjHL6L1Q",
        "outputId": "30fab68a-0b57-419f-82e5-c8234094af1f"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Done\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Generating results in **results.json** file for N-images at threshold of **50%**"
      ],
      "metadata": {
        "id": "GqX2FxVs1pUu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%cd darknet"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rIiHXgsOA7d3",
        "outputId": "7aa60eaf-3c3d-45c9-f162-22c1b5d524a4"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/darknet\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!./darknet detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights -ext_output -dont_show -out result.json < /content/image_name.txt -thresh 0.5"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K4_Iy8mh5vrz",
        "outputId": "05c8a864-d922-4d0a-f6f4-82b0d72d3e6d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000306136.jpg: Predicted in 25.847000 milli-seconds.\n",
            "bicycle: 64%\t(left_x:   36   top_y:  443   width:   49   height:  118)\n",
            "person: 87%\t(left_x:   76   top_y:  442   width:   45   height:  102)\n",
            "bus: 95%\t(left_x:  122   top_y:  315   width:  306   height:  304)\n",
            "person: 51%\t(left_x:  255   top_y:  398   width:   39   height:   54)\n",
            "person: 83%\t(left_x:  386   top_y:  407   width:   22   height:   44)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000261116.jpg: Predicted in 26.412000 milli-seconds.\n",
            "person: 82%\t(left_x:   -2   top_y:  221   width:  175   height:  154)\n",
            "cake: 97%\t(left_x:   -1   top_y:   -1   width:  154   height:   93)\n",
            "cake: 74%\t(left_x:   13   top_y:  137   width:   55   height:   46)\n",
            "fork: 94%\t(left_x:  258   top_y:  129   width:   99   height:   61)\n",
            "cake: 57%\t(left_x:  431   top_y:  125   width:   63   height:   45)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000280891.jpg: Predicted in 25.753000 milli-seconds.\n",
            "apple: 92%\t(left_x:   -1   top_y:  564   width:   86   height:   77)\n",
            "person: 62%\t(left_x:   -1   top_y:   17   width:   52   height:  325)\n",
            "orange: 53%\t(left_x:   -1   top_y:  402   width:   40   height:   81)\n",
            "apple: 60%\t(left_x:   16   top_y:  608   width:  109   height:   33)\n",
            "orange: 90%\t(left_x:   19   top_y:  517   width:   93   height:   80)\n",
            "person: 96%\t(left_x:   22   top_y:   -8   width:  240   height:  430)\n",
            "orange: 75%\t(left_x:   31   top_y:  397   width:   64   height:   73)\n",
            "orange: 85%\t(left_x:   58   top_y:  459   width:   83   height:   82)\n",
            "orange: 51%\t(left_x:   69   top_y:  387   width:   52   height:   53)\n",
            "orange: 56%\t(left_x:   99   top_y:  617   width:   43   height:   23)\n",
            "apple: 93%\t(left_x:  109   top_y:  509   width:   66   height:   82)\n",
            "person: 57%\t(left_x:  135   top_y:   82   width:  289   height:  397)\n",
            "orange: 94%\t(left_x:  136   top_y:  561   width:  119   height:   79)\n",
            "apple: 96%\t(left_x:  137   top_y:  448   width:   79   height:   69)\n",
            "apple: 84%\t(left_x:  147   top_y:  397   width:   58   height:   55)\n",
            "apple: 87%\t(left_x:  163   top_y:  515   width:   76   height:   62)\n",
            "orange: 89%\t(left_x:  172   top_y:  370   width:   64   height:   58)\n",
            "orange: 86%\t(left_x:  202   top_y:  502   width:   74   height:   69)\n",
            "orange: 87%\t(left_x:  206   top_y:  418   width:   86   height:   84)\n",
            "orange: 82%\t(left_x:  242   top_y:  568   width:   82   height:   73)\n",
            "person: 52%\t(left_x:  252   top_y:    8   width:  139   height:  132)\n",
            "orange: 56%\t(left_x:  272   top_y:  426   width:   57   height:   52)\n",
            "orange: 73%\t(left_x:  274   top_y:  491   width:   90   height:  102)\n",
            "bottle: 87%\t(left_x:  360   top_y:  493   width:   68   height:  147)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000243204.jpg: Predicted in 25.574000 milli-seconds.\n",
            "cake: 72%\t(left_x:   44   top_y:  452   width:   79   height:   86)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000286994.jpg: Predicted in 25.933000 milli-seconds.\n",
            "elephant: 88%\t(left_x:   -0   top_y:  217   width:   27   height:   23)\n",
            "elephant: 94%\t(left_x:   52   top_y:  225   width:   35   height:   17)\n",
            "elephant: 99%\t(left_x:  116   top_y:  219   width:   48   height:   29)\n",
            "elephant: 74%\t(left_x:  252   top_y:  242   width:   19   height:   11)\n",
            "elephant: 82%\t(left_x:  274   top_y:  240   width:   20   height:   13)\n",
            "elephant: 95%\t(left_x:  297   top_y:  233   width:   33   height:   20)\n",
            "elephant: 100%\t(left_x:  330   top_y:  313   width:  109   height:   70)\n",
            "elephant: 87%\t(left_x:  362   top_y:  240   width:   25   height:   11)\n",
            "elephant: 98%\t(left_x:  489   top_y:  224   width:   48   height:   25)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000326128.jpg: Predicted in 25.570000 milli-seconds.\n",
            "snowboard: 70%\t(left_x:  103   top_y:  516   width:  357   height:   85)\n",
            "person: 92%\t(left_x:  229   top_y:  185   width:  136   height:  417)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000109916.jpg: Predicted in 25.437000 milli-seconds.\n",
            "bottle: 69%\t(left_x:   -0   top_y:   -0   width:   73   height:   73)\n",
            "oven: 63%\t(left_x:   21   top_y:   -2   width:  612   height:  483)\n",
            "cake: 62%\t(left_x:  117   top_y:   24   width:  227   height:  169)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000155051.jpg: Predicted in 25.559000 milli-seconds.\n",
            "clock: 100%\t(left_x:  389   top_y:   25   width:  218   height:  238)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000311883.jpg: Predicted in 25.605000 milli-seconds.\n",
            "traffic light: 62%\t(left_x:   21   top_y:  159   width:   32   height:   12)\n",
            "train: 96%\t(left_x:   40   top_y:  108   width:  567   height:  106)\n",
            "traffic light: 55%\t(left_x:  505   top_y:  139   width:    9   height:   14)\n",
            "traffic light: 52%\t(left_x:  508   top_y:  139   width:   16   height:   15)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000475732.jpg: Predicted in 25.610000 milli-seconds.\n",
            "cat: 87%\t(left_x:  -11   top_y:  102   width:  665   height:  383)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000049761.jpg: Predicted in 25.451000 milli-seconds.\n",
            "bird: 74%\t(left_x:   -9   top_y:  177   width:  661   height:   73)\n",
            "zebra: 99%\t(left_x:  129   top_y:  248   width:   85   height:   49)\n",
            "zebra: 99%\t(left_x:  261   top_y:  243   width:   89   height:   50)\n",
            "zebra: 100%\t(left_x:  345   top_y:  249   width:   82   height:   42)\n",
            "zebra: 99%\t(left_x:  517   top_y:  234   width:   58   height:   55)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000312406.jpg: Predicted in 25.698000 milli-seconds.\n",
            "banana: 86%\t(left_x:   54   top_y:  132   width:  235   height:  233)\n",
            "cup: 71%\t(left_x:  287   top_y:   21   width:  140   height:  196)\n",
            "bowl: 82%\t(left_x:  411   top_y:  191   width:  115   height:  110)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000557916.jpg: Predicted in 25.336000 milli-seconds.\n",
            "bed: 76%\t(left_x:   -9   top_y:  -19   width:  651   height:  463)\n",
            "teddy bear: 100%\t(left_x:  108   top_y:   88   width:   77   height:   94)\n",
            "person: 80%\t(left_x:  134   top_y:   77   width:  431   height:  348)\n",
            "vase: 69%\t(left_x:  398   top_y:   -1   width:   69   height:   76)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000050943.jpg: Predicted in 25.329000 milli-seconds.\n",
            "person: 99%\t(left_x:  313   top_y:  192   width:   30   height:   30)\n",
            "surfboard: 76%\t(left_x:  326   top_y:  221   width:   30   height:    5)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000441247.jpg: Predicted in 25.322000 milli-seconds.\n",
            "chair: 86%\t(left_x:   24   top_y:  284   width:  198   height:  140)\n",
            "sofa: 65%\t(left_x:   25   top_y:  285   width:  196   height:  137)\n",
            "clock: 88%\t(left_x:   36   top_y:  151   width:   18   height:   26)\n",
            "bottle: 50%\t(left_x:   82   top_y:  158   width:   13   height:   18)\n",
            "bottle: 81%\t(left_x:   93   top_y:  202   width:   12   height:   18)\n",
            "chair: 100%\t(left_x:  220   top_y:  223   width:   83   height:  118)\n",
            "person: 76%\t(left_x:  245   top_y:  163   width:   46   height:   61)\n",
            "bottle: 75%\t(left_x:  289   top_y:  198   width:   13   height:   34)\n",
            "chair: 94%\t(left_x:  293   top_y:  204   width:   52   height:  120)\n",
            "person: 98%\t(left_x:  335   top_y:  180   width:   52   height:   89)\n",
            "refrigerator: 69%\t(left_x:  391   top_y:   71   width:  112   height:  202)\n",
            "handbag: 69%\t(left_x:  471   top_y:  354   width:   90   height:   67)\n",
            "sofa: 94%\t(left_x:  530   top_y:  179   width:  109   height:  244)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000240767.jpg: Predicted in 26.237000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000087470.jpg: Predicted in 25.530000 milli-seconds.\n",
            "cow: 97%\t(left_x:   -1   top_y:  126   width:   84   height:  335)\n",
            "horse: 77%\t(left_x:   29   top_y:   90   width:   22   height:   27)\n",
            "person: 59%\t(left_x:   31   top_y:   77   width:   20   height:   37)\n",
            "cow: 99%\t(left_x:   83   top_y:  142   width:  142   height:  267)\n",
            "cow: 97%\t(left_x:  196   top_y:  174   width:  104   height:  209)\n",
            "cow: 98%\t(left_x:  292   top_y:  184   width:   95   height:  159)\n",
            "cow: 97%\t(left_x:  423   top_y:  159   width:   63   height:  111)\n",
            "horse: 50%\t(left_x:  447   top_y:  119   width:   25   height:   27)\n",
            "person: 77%\t(left_x:  449   top_y:  100   width:   21   height:   41)\n",
            "cow: 98%\t(left_x:  497   top_y:  140   width:  107   height:  137)\n",
            "cow: 59%\t(left_x:  598   top_y:  146   width:   42   height:   74)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000522940.jpg: Predicted in 25.422000 milli-seconds.\n",
            "stop sign: 100%\t(left_x:    4   top_y:   32   width:  378   height:  346)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000085911.jpg: Predicted in 25.792000 milli-seconds.\n",
            "kite: 81%\t(left_x:  196   top_y:  171   width:  274   height:  106)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000102805.jpg: Predicted in 25.556000 milli-seconds.\n",
            "person: 93%\t(left_x:   61   top_y:   83   width:  235   height:  338)\n",
            "frisbee: 100%\t(left_x:  233   top_y:  344   width:  115   height:   83)\n",
            "car: 98%\t(left_x:  345   top_y:  262   width:   68   height:   27)\n",
            "car: 70%\t(left_x:  378   top_y:  258   width:   27   height:    8)\n",
            "car: 100%\t(left_x:  381   top_y:  269   width:  224   height:   70)\n",
            "car: 93%\t(left_x:  404   top_y:  261   width:   27   height:   21)\n",
            "truck: 64%\t(left_x:  427   top_y:  257   width:   68   height:   25)\n",
            "person: 78%\t(left_x:  546   top_y:  256   width:    6   height:   17)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000289992.jpg: Predicted in 25.372000 milli-seconds.\n",
            "sink: 96%\t(left_x:   33   top_y:  298   width:  252   height:  125)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000157124.jpg: Predicted in 25.355000 milli-seconds.\n",
            "sink: 72%\t(left_x:   34   top_y:  131   width:  319   height:  173)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000572555.jpg: Predicted in 26.431000 milli-seconds.\n",
            "train: 100%\t(left_x:  151   top_y:   53   width:  433   height:  310)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000074457.jpg: Predicted in 25.510000 milli-seconds.\n",
            "surfboard: 98%\t(left_x:  409   top_y:  176   width:   86   height:   58)\n",
            "person: 94%\t(left_x:  409   top_y:  176   width:   86   height:   58)\n",
            "person: 98%\t(left_x:  428   top_y:  162   width:   47   height:   87)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000159399.jpg: Predicted in 25.564000 milli-seconds.\n",
            "kite: 79%\t(left_x:   15   top_y:   35   width:  294   height:   67)\n",
            "person: 83%\t(left_x:  154   top_y:  332   width:   18   height:   20)\n",
            "person: 64%\t(left_x:  173   top_y:  339   width:    8   height:   12)\n",
            "person: 83%\t(left_x:  230   top_y:  330   width:   16   height:   21)\n",
            "person: 71%\t(left_x:  253   top_y:  333   width:   10   height:   17)\n",
            "person: 100%\t(left_x:  341   top_y:  277   width:   45   height:  118)\n",
            "backpack: 52%\t(left_x:  346   top_y:  308   width:   22   height:   32)\n",
            "person: 99%\t(left_x:  554   top_y:  312   width:   44   height:   52)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000184321.jpg: Predicted in 25.771000 milli-seconds.\n",
            "train: 99%\t(left_x:  163   top_y:  178   width:  101   height:  103)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000107226.jpg: Predicted in 31.638000 milli-seconds.\n",
            "umbrella: 58%\t(left_x:   -2   top_y:   29   width:  228   height:   95)\n",
            "person: 76%\t(left_x:   65   top_y:  109   width:   58   height:  110)\n",
            "person: 84%\t(left_x:  112   top_y:  121   width:   48   height:   99)\n",
            "person: 96%\t(left_x:  133   top_y:  126   width:  177   height:  230)\n",
            "dog: 97%\t(left_x:  148   top_y:  298   width:  105   height:  199)\n",
            "person: 80%\t(left_x:  281   top_y:  137   width:   46   height:   78)\n",
            "umbrella: 76%\t(left_x:  314   top_y:  106   width:   96   height:   38)\n",
            "person: 56%\t(left_x:  322   top_y:  136   width:   33   height:   76)\n",
            "bicycle: 61%\t(left_x:  322   top_y:  243   width:  156   height:  245)\n",
            "person: 89%\t(left_x:  346   top_y:   70   width:  134   height:  355)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000338428.jpg: Predicted in 25.489000 milli-seconds.\n",
            "truck: 62%\t(left_x:    1   top_y:    0   width:  217   height:  205)\n",
            "truck: 95%\t(left_x:   30   top_y:    7   width:  561   height:  324)\n",
            "truck: 69%\t(left_x:  564   top_y:   91   width:   77   height:   77)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000131431.jpg: Predicted in 25.323000 milli-seconds.\n",
            "clock: 83%\t(left_x:  151   top_y:  233   width:   91   height:  168)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000074646.jpg: Predicted in 25.856000 milli-seconds.\n",
            "person: 52%\t(left_x:   60   top_y:  477   width:    5   height:   11)\n",
            "person: 99%\t(left_x:   80   top_y:  452   width:   21   height:   48)\n",
            "person: 95%\t(left_x:  189   top_y:  459   width:   12   height:   38)\n",
            "cup: 93%\t(left_x:  355   top_y:  595   width:   38   height:   46)\n",
            "kite: 96%\t(left_x:  388   top_y:  166   width:   22   height:   23)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000113867.jpg: Predicted in 25.598000 milli-seconds.\n",
            "clock: 96%\t(left_x:  326   top_y:  109   width:   50   height:   23)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000474293.jpg: Predicted in 26.053000 milli-seconds.\n",
            "teddy bear: 60%\t(left_x:  155   top_y:  291   width:   18   height:   28)\n",
            "teddy bear: 51%\t(left_x:  163   top_y:  230   width:   13   height:   24)\n",
            "teddy bear: 71%\t(left_x:  197   top_y:  291   width:   19   height:   26)\n",
            "teddy bear: 84%\t(left_x:  215   top_y:  231   width:   19   height:   22)\n",
            "teddy bear: 67%\t(left_x:  247   top_y:  290   width:   17   height:   25)\n",
            "teddy bear: 80%\t(left_x:  263   top_y:  295   width:   24   height:   20)\n",
            "teddy bear: 82%\t(left_x:  316   top_y:   74   width:   71   height:   52)\n",
            "person: 92%\t(left_x:  518   top_y:  250   width:  121   height:  229)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000270908.jpg: Predicted in 26.852000 milli-seconds.\n",
            "person: 99%\t(left_x:   31   top_y:   29   width:  334   height:  177)\n",
            "tennis racket: 98%\t(left_x:  341   top_y:  150   width:  141   height:  124)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000552883.jpg: Predicted in 26.122000 milli-seconds.\n",
            "sink: 72%\t(left_x:  243   top_y:  235   width:   78   height:   16)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000177213.jpg: Predicted in 26.288000 milli-seconds.\n",
            "diningtable: 58%\t(left_x:   59   top_y:   80   width:  509   height:  264)\n",
            "pizza: 94%\t(left_x:   77   top_y:   89   width:  437   height:  224)\n",
            "person: 70%\t(left_x:  171   top_y:    1   width:  442   height:  137)\n",
            "fork: 72%\t(left_x:  417   top_y:  137   width:  157   height:   37)\n",
            "cup: 98%\t(left_x:  566   top_y:  112   width:   75   height:  148)\n",
            "cup: 53%\t(left_x:  597   top_y:  153   width:   43   height:  194)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000255965.jpg: Predicted in 26.486000 milli-seconds.\n",
            "cat: 96%\t(left_x:    3   top_y:  158   width:  558   height:  236)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000092091.jpg: Predicted in 26.183000 milli-seconds.\n",
            "chair: 93%\t(left_x:   -0   top_y:  138   width:  194   height:  260)\n",
            "chair: 64%\t(left_x:   65   top_y:  135   width:  181   height:  215)\n",
            "tvmonitor: 96%\t(left_x:  177   top_y:  124   width:  147   height:  109)\n",
            "person: 91%\t(left_x:  238   top_y:  163   width:  206   height:  320)\n",
            "toothbrush: 92%\t(left_x:  383   top_y:  248   width:   70   height:   67)\n",
            "teddy bear: 100%\t(left_x:  427   top_y:  240   width:  211   height:  149)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000391290.jpg: Predicted in 25.902000 milli-seconds.\n",
            "car: 96%\t(left_x:  123   top_y:   49   width:  107   height:   51)\n",
            "person: 89%\t(left_x:  211   top_y:   38   width:   61   height:  170)\n",
            "person: 95%\t(left_x:  224   top_y:   85   width:  128   height:  201)\n",
            "person: 98%\t(left_x:  287   top_y:   62   width:  123   height:  229)\n",
            "frisbee: 99%\t(left_x:  429   top_y:  143   width:   40   height:   17)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000173799.jpg: Predicted in 25.930000 milli-seconds.\n",
            "person: 99%\t(left_x:    8   top_y:  175   width:  165   height:  341)\n",
            "elephant: 99%\t(left_x:   59   top_y:  163   width:   80   height:   64)\n",
            "elephant: 94%\t(left_x:   68   top_y:  134   width:   75   height:   53)\n",
            "person: 99%\t(left_x:  151   top_y:  203   width:  121   height:  276)\n",
            "elephant: 94%\t(left_x:  227   top_y:  166   width:   46   height:   63)\n",
            "elephant: 98%\t(left_x:  236   top_y:  259   width:  234   height:  153)\n",
            "elephant: 78%\t(left_x:  240   top_y:  259   width:   85   height:   52)\n",
            "elephant: 98%\t(left_x:  275   top_y:  173   width:   98   height:   82)\n",
            "elephant: 56%\t(left_x:  344   top_y:  232   width:   58   height:   51)\n",
            "elephant: 54%\t(left_x:  399   top_y:  217   width:   92   height:   46)\n",
            "elephant: 71%\t(left_x:  456   top_y:  245   width:   53   height:   79)\n",
            "elephant: 55%\t(left_x:  481   top_y:  218   width:   56   height:   78)\n",
            "elephant: 86%\t(left_x:  518   top_y:  168   width:   63   height:   60)\n",
            "elephant: 95%\t(left_x:  531   top_y:  226   width:   94   height:   70)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000142472.jpg: Predicted in 25.382000 milli-seconds.\n",
            "car: 100%\t(left_x:  200   top_y:  371   width:  136   height:   63)\n",
            "car: 77%\t(left_x:  349   top_y:  371   width:   51   height:   43)\n",
            "person: 90%\t(left_x:  384   top_y:  359   width:   21   height:   54)\n",
            "person: 98%\t(left_x:  399   top_y:  364   width:   28   height:   62)\n",
            "car: 96%\t(left_x:  415   top_y:  371   width:   54   height:   34)\n",
            "car: 94%\t(left_x:  460   top_y:  365   width:   65   height:   37)\n",
            "person: 67%\t(left_x:  530   top_y:  371   width:   11   height:   19)\n",
            "person: 61%\t(left_x:  540   top_y:  365   width:    9   height:   24)\n",
            "bus: 98%\t(left_x:  575   top_y:  328   width:   65   height:   62)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000279774.jpg: Predicted in 26.048000 milli-seconds.\n",
            "person: 99%\t(left_x:   47   top_y:  159   width:  217   height:  332)\n",
            "person: 99%\t(left_x:   80   top_y:   77   width:   34   height:   82)\n",
            "baseball bat: 94%\t(left_x:  165   top_y:  265   width:  143   height:   55)\n",
            "person: 84%\t(left_x:  191   top_y:   64   width:   10   height:   34)\n",
            "person: 99%\t(left_x:  192   top_y:   66   width:   41   height:   92)\n",
            "chair: 90%\t(left_x:  235   top_y:   80   width:   27   height:   43)\n",
            "person: 68%\t(left_x:  261   top_y:   84   width:   30   height:   40)\n",
            "person: 71%\t(left_x:  271   top_y:   81   width:   36   height:   42)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000531771.jpg: Predicted in 25.448000 milli-seconds.\n",
            "oven: 96%\t(left_x:   34   top_y:   26   width:  361   height:  582)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000175364.jpg: Predicted in 25.974000 milli-seconds.\n",
            "oven: 75%\t(left_x:  144   top_y:  243   width:  117   height:  182)\n",
            "diningtable: 53%\t(left_x:  238   top_y:  304   width:  376   height:  154)\n",
            "sink: 73%\t(left_x:  258   top_y:  229   width:   78   height:   18)\n",
            "toaster: 85%\t(left_x:  405   top_y:  199   width:   49   height:   35)\n",
            "cup: 52%\t(left_x:  429   top_y:  123   width:   17   height:   17)\n",
            "oven: 63%\t(left_x:  430   top_y:  235   width:  149   height:  119)\n",
            "bowl: 70%\t(left_x:  558   top_y:  320   width:   43   height:   30)\n",
            "cup: 51%\t(left_x:  604   top_y:   65   width:   11   height:   19)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000521231.jpg: Predicted in 25.698000 milli-seconds.\n",
            "bear: 100%\t(left_x:   93   top_y:  162   width:  249   height:  292)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000051938.jpg: Predicted in 25.619000 milli-seconds.\n",
            "person: 98%\t(left_x:  276   top_y:  165   width:   52   height:  109)\n",
            "person: 93%\t(left_x:  361   top_y:  224   width:   17   height:   35)\n",
            "person: 82%\t(left_x:  398   top_y:  201   width:    8   height:   20)\n",
            "person: 91%\t(left_x:  405   top_y:  221   width:   12   height:   28)\n",
            "person: 51%\t(left_x:  413   top_y:  218   width:    9   height:   16)\n",
            "person: 91%\t(left_x:  497   top_y:  210   width:    5   height:   11)\n",
            "person: 73%\t(left_x:  507   top_y:  206   width:    8   height:   14)\n",
            "person: 77%\t(left_x:  531   top_y:  200   width:    6   height:   15)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000115885.jpg: Predicted in 26.078000 milli-seconds.\n",
            "laptop: 92%\t(left_x:   12   top_y:   17   width:  368   height:  368)\n",
            "cat: 62%\t(left_x:  344   top_y:    1   width:  156   height:  289)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000139077.jpg: Predicted in 25.764000 milli-seconds.\n",
            "person: 99%\t(left_x:  128   top_y:  132   width:   74   height:  208)\n",
            "remote: 76%\t(left_x:  164   top_y:  181   width:   38   height:   39)\n",
            "tvmonitor: 95%\t(left_x:  278   top_y:   -0   width:  161   height:  153)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000050331.jpg: Predicted in 25.545000 milli-seconds.\n",
            "broccoli: 95%\t(left_x:   37   top_y:  160   width:   70   height:   65)\n",
            "broccoli: 82%\t(left_x:  369   top_y:   94   width:  134   height:   94)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000234413.jpg: Predicted in 25.683000 milli-seconds.\n",
            "toilet: 95%\t(left_x:  143   top_y:   46   width:  301   height:  416)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000463842.jpg: Predicted in 25.994000 milli-seconds.\n",
            "bottle: 92%\t(left_x:   46   top_y:  236   width:   26   height:   79)\n",
            "bottle: 87%\t(left_x:   80   top_y:  233   width:   28   height:   83)\n",
            "bottle: 52%\t(left_x:  169   top_y:  246   width:   21   height:   84)\n",
            "bottle: 63%\t(left_x:  184   top_y:  243   width:   24   height:   90)\n",
            "bottle: 62%\t(left_x:  205   top_y:  244   width:   22   height:   90)\n",
            "bottle: 79%\t(left_x:  223   top_y:  254   width:   21   height:   78)\n",
            "bottle: 59%\t(left_x:  242   top_y:  255   width:   25   height:   81)\n",
            "bottle: 59%\t(left_x:  265   top_y:  262   width:   17   height:   74)\n",
            "bottle: 52%\t(left_x:  276   top_y:  262   width:   24   height:   78)\n",
            "bottle: 86%\t(left_x:  296   top_y:  298   width:   19   height:   51)\n",
            "bottle: 78%\t(left_x:  321   top_y:  266   width:   29   height:   88)\n",
            "bottle: 52%\t(left_x:  359   top_y:  272   width:   28   height:   83)\n",
            "bottle: 73%\t(left_x:  394   top_y:  279   width:   26   height:   83)\n",
            "bottle: 53%\t(left_x:  416   top_y:  280   width:   26   height:   91)\n",
            "bottle: 77%\t(left_x:  440   top_y:  287   width:   25   height:   97)\n",
            "bottle: 77%\t(left_x:  462   top_y:  287   width:   26   height:  103)\n",
            "bottle: 72%\t(left_x:  488   top_y:  321   width:   16   height:   62)\n",
            "bottle: 83%\t(left_x:  525   top_y:  282   width:   24   height:   87)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000092839.jpg: Predicted in 25.637000 milli-seconds.\n",
            "bear: 99%\t(left_x:   78   top_y:   33   width:  553   height:  456)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000334555.jpg: Predicted in 25.748000 milli-seconds.\n",
            "truck: 82%\t(left_x:   -0   top_y:   55   width:  102   height:  190)\n",
            "person: 97%\t(left_x:   15   top_y:  132   width:   58   height:  143)\n",
            "person: 63%\t(left_x:   70   top_y:  143   width:   25   height:  105)\n",
            "person: 99%\t(left_x:   82   top_y:  126   width:   62   height:  144)\n",
            "car: 73%\t(left_x:  126   top_y:  158   width:   42   height:   48)\n",
            "person: 93%\t(left_x:  152   top_y:  140   width:   17   height:   44)\n",
            "person: 97%\t(left_x:  167   top_y:  138   width:   20   height:   55)\n",
            "person: 52%\t(left_x:  179   top_y:  139   width:   14   height:   53)\n",
            "person: 79%\t(left_x:  195   top_y:  136   width:   18   height:   56)\n",
            "cow: 99%\t(left_x:  206   top_y:  130   width:  355   height:  240)\n",
            "person: 56%\t(left_x:  209   top_y:  134   width:   16   height:   23)\n",
            "person: 73%\t(left_x:  224   top_y:  137   width:   17   height:   15)\n",
            "person: 63%\t(left_x:  243   top_y:  137   width:   15   height:   13)\n",
            "car: 56%\t(left_x:  452   top_y:  174   width:  133   height:   88)\n",
            "person: 83%\t(left_x:  568   top_y:  152   width:   11   height:   37)\n",
            "person: 97%\t(left_x:  618   top_y:  149   width:   22   height:   92)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000521052.jpg: Predicted in 25.548000 milli-seconds.\n",
            "car: 95%\t(left_x:   13   top_y:  266   width:   65   height:   79)\n",
            "truck: 97%\t(left_x:   62   top_y:    1   width:  535   height:  479)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000237316.jpg: Predicted in 25.550000 milli-seconds.\n",
            "toilet: 95%\t(left_x:   45   top_y:  256   width:  121   height:  222)\n",
            "sink: 60%\t(left_x:  159   top_y:  242   width:  105   height:   51)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000414034.jpg: Predicted in 26.124000 milli-seconds.\n",
            "person: 86%\t(left_x:   58   top_y:   -5   width:  393   height:  492)\n",
            "bottle: 78%\t(left_x:  345   top_y:  230   width:  111   height:  118)\n",
            "remote: 97%\t(left_x:  359   top_y:   75   width:  113   height:  157)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000094326.jpg: Predicted in 25.597000 milli-seconds.\n",
            "bench: 89%\t(left_x:   23   top_y:  189   width:  252   height:  229)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000476258.jpg: Predicted in 26.151000 milli-seconds.\n",
            "person: 99%\t(left_x:  255   top_y:   32   width:  257   height:  277)\n",
            "skateboard: 99%\t(left_x:  267   top_y:  258   width:  236   height:   88)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000517056.jpg: Predicted in 25.643000 milli-seconds.\n",
            "diningtable: 57%\t(left_x:   -2   top_y:  305   width:  641   height:  177)\n",
            "chair: 73%\t(left_x:   -0   top_y:  231   width:   83   height:  202)\n",
            "person: 100%\t(left_x:   53   top_y:   99   width:  202   height:  319)\n",
            "knife: 66%\t(left_x:   94   top_y:  434   width:  104   height:   21)\n",
            "knife: 94%\t(left_x:  185   top_y:  408   width:  116   height:   28)\n",
            "cake: 77%\t(left_x:  197   top_y:  358   width:  311   height:  122)\n",
            "person: 100%\t(left_x:  261   top_y:   37   width:  190   height:  320)\n",
            "knife: 64%\t(left_x:  326   top_y:  342   width:   41   height:   67)\n",
            "cake: 64%\t(left_x:  548   top_y:  394   width:   29   height:   31)\n",
            "cup: 88%\t(left_x:  594   top_y:  165   width:   15   height:   19)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000485895.jpg: Predicted in 26.025000 milli-seconds.\n",
            "giraffe: 100%\t(left_x:  385   top_y:  130   width:   87   height:  165)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000420230.jpg: Predicted in 25.538000 milli-seconds.\n",
            "elephant: 100%\t(left_x:   35   top_y:   14   width:  345   height:  613)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000505451.jpg: Predicted in 26.070000 milli-seconds.\n",
            "person: 99%\t(left_x:  199   top_y:  131   width:   55   height:   34)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000473118.jpg: Predicted in 26.060000 milli-seconds.\n",
            "bicycle: 99%\t(left_x:   33   top_y:   -1   width:   78   height:   48)\n",
            "skateboard: 97%\t(left_x:   71   top_y:  307   width:   88   height:   81)\n",
            "person: 97%\t(left_x:   82   top_y:   71   width:  140   height:  314)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000269932.jpg: Predicted in 25.967000 milli-seconds.\n",
            "chair: 97%\t(left_x:    9   top_y:   42   width:  362   height:  455)\n",
            "horse: 98%\t(left_x:  211   top_y:   55   width:  163   height:  166)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000551304.jpg: Predicted in 25.712000 milli-seconds.\n",
            "toilet: 89%\t(left_x:  150   top_y:   84   width:  212   height:  476)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000569030.jpg: Predicted in 25.601000 milli-seconds.\n",
            "truck: 57%\t(left_x:   -0   top_y:   71   width:   44   height:   66)\n",
            "bench: 73%\t(left_x:    0   top_y:  158   width:  178   height:  170)\n",
            "car: 51%\t(left_x:  140   top_y:  113   width:   18   height:   13)\n",
            "traffic light: 58%\t(left_x:  211   top_y:   15   width:   14   height:   16)\n",
            "traffic light: 56%\t(left_x:  235   top_y:   52   width:    9   height:   10)\n",
            "person: 89%\t(left_x:  246   top_y:   99   width:   16   height:   44)\n",
            "person: 93%\t(left_x:  260   top_y:   98   width:   13   height:   46)\n",
            "fire hydrant: 96%\t(left_x:  282   top_y:  206   width:   71   height:  113)\n",
            "person: 73%\t(left_x:  293   top_y:  100   width:   16   height:   46)\n",
            "person: 72%\t(left_x:  330   top_y:  100   width:   16   height:   41)\n",
            "person: 94%\t(left_x:  377   top_y:   98   width:   17   height:   48)\n",
            "car: 69%\t(left_x:  426   top_y:  115   width:   56   height:   37)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000572408.jpg: Predicted in 26.078000 milli-seconds.\n",
            "cow: 88%\t(left_x:   30   top_y:  443   width:  219   height:   99)\n",
            "cow: 98%\t(left_x:  101   top_y:  240   width:  207   height:  223)\n",
            "cow: 56%\t(left_x:  230   top_y:  231   width:   29   height:   24)\n",
            "cow: 91%\t(left_x:  289   top_y:  222   width:   28   height:   38)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000508370.jpg: Predicted in 25.567000 milli-seconds.\n",
            "bicycle: 99%\t(left_x:   -9   top_y:  281   width:  354   height:  288)\n",
            "cup: 61%\t(left_x:  199   top_y:  129   width:   21   height:   31)\n",
            "person: 92%\t(left_x:  203   top_y:   84   width:  103   height:  313)\n",
            "teddy bear: 53%\t(left_x:  217   top_y:  511   width:  108   height:   79)\n",
            "person: 96%\t(left_x:  248   top_y:   57   width:  171   height:  406)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000296224.jpg: Predicted in 25.669000 milli-seconds.\n",
            "car: 72%\t(left_x:   -1   top_y:  169   width:   59   height:   54)\n",
            "bus: 94%\t(left_x:   82   top_y:   25   width:  490   height:  439)\n",
            "person: 60%\t(left_x:  336   top_y:  189   width:   83   height:   60)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000200252.jpg: Predicted in 25.527000 milli-seconds.\n",
            "bed: 94%\t(left_x:  -10   top_y:  117   width:  518   height:  263)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000007511.jpg: Predicted in 25.951000 milli-seconds.\n",
            "kite: 99%\t(left_x:  204   top_y:  125   width:   19   height:   36)\n",
            "person: 87%\t(left_x:  237   top_y:  282   width:   14   height:   25)\n",
            "person: 96%\t(left_x:  271   top_y:  274   width:   11   height:   30)\n",
            "person: 64%\t(left_x:  338   top_y:  275   width:    5   height:    8)\n",
            "person: 100%\t(left_x:  377   top_y:  244   width:  130   height:  235)\n",
            "person: 72%\t(left_x:  523   top_y:  276   width:   10   height:   21)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000429761.jpg: Predicted in 25.725000 milli-seconds.\n",
            "person: 99%\t(left_x:  187   top_y:   76   width:  122   height:  315)\n",
            "tennis racket: 84%\t(left_x:  194   top_y:  222   width:   19   height:   53)\n",
            "person: 98%\t(left_x:  293   top_y:   52   width:  110   height:  307)\n",
            "tennis racket: 94%\t(left_x:  369   top_y:  191   width:   43   height:   63)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000315219.jpg: Predicted in 25.520000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000072852.jpg: Predicted in 25.506000 milli-seconds.\n",
            "bicycle: 88%\t(left_x:  136   top_y:  444   width:  155   height:  151)\n",
            "person: 99%\t(left_x:  291   top_y:  308   width:   35   height:   76)\n",
            "person: 98%\t(left_x:  326   top_y:  308   width:   30   height:   77)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000576566.jpg: Predicted in 26.017000 milli-seconds.\n",
            "skateboard: 88%\t(left_x:  114   top_y:  310   width:  174   height:  168)\n",
            "person: 90%\t(left_x:  134   top_y:   15   width:  207   height:  425)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000168883.jpg: Predicted in 25.486000 milli-seconds.\n",
            "person: 98%\t(left_x:   -1   top_y:   13   width:  192   height:  631)\n",
            "handbag: 73%\t(left_x:  106   top_y:  398   width:   67   height:  112)\n",
            "person: 97%\t(left_x:  143   top_y:  129   width:  229   height:  502)\n",
            "cell phone: 69%\t(left_x:  192   top_y:  194   width:   27   height:   37)\n",
            "person: 73%\t(left_x:  291   top_y:  465   width:  189   height:  174)\n",
            "person: 81%\t(left_x:  411   top_y:  389   width:   68   height:  250)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000125572.jpg: Predicted in 25.654000 milli-seconds.\n",
            "bus: 93%\t(left_x:   -0   top_y:  315   width:   20   height:   41)\n",
            "bus: 57%\t(left_x:   17   top_y:  322   width:   31   height:   28)\n",
            "person: 91%\t(left_x:   21   top_y:  337   width:   14   height:   35)\n",
            "clock: 64%\t(left_x:   44   top_y:  112   width:    9   height:   30)\n",
            "bus: 98%\t(left_x:   48   top_y:  313   width:   74   height:   42)\n",
            "clock: 98%\t(left_x:   70   top_y:  110   width:   29   height:   27)\n",
            "person: 96%\t(left_x:   86   top_y:  334   width:   17   height:   36)\n",
            "person: 85%\t(left_x:  131   top_y:  334   width:   12   height:   34)\n",
            "traffic light: 65%\t(left_x:  157   top_y:  291   width:    9   height:   31)\n",
            "person: 54%\t(left_x:  234   top_y:  336   width:   10   height:   26)\n",
            "person: 51%\t(left_x:  285   top_y:  339   width:    9   height:   23)\n",
            "person: 58%\t(left_x:  301   top_y:  339   width:   11   height:   24)\n",
            "bicycle: 99%\t(left_x:  366   top_y:  355   width:   94   height:   71)\n",
            "person: 96%\t(left_x:  391   top_y:  317   width:   47   height:   90)\n",
            "motorbike: 56%\t(left_x:  493   top_y:  343   width:   15   height:   18)\n",
            "truck: 91%\t(left_x:  534   top_y:  319   width:   35   height:   37)\n",
            "truck: 99%\t(left_x:  559   top_y:  306   width:   81   height:   55)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000156292.jpg: Predicted in 25.634000 milli-seconds.\n",
            "clock: 54%\t(left_x:   23   top_y:  289   width:   18   height:   89)\n",
            "clock: 95%\t(left_x:   61   top_y:  309   width:   68   height:   60)\n",
            "clock: 86%\t(left_x:   68   top_y:  245   width:   59   height:   56)\n",
            "clock: 99%\t(left_x:  134   top_y:  238   width:  133   height:  138)\n",
            "clock: 77%\t(left_x:  135   top_y:  380   width:  139   height:  135)\n",
            "handbag: 81%\t(left_x:  184   top_y:  522   width:   29   height:   61)\n",
            "person: 99%\t(left_x:  185   top_y:  499   width:   46   height:  134)\n",
            "clock: 81%\t(left_x:  281   top_y:  247   width:   53   height:   56)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000259097.jpg: Predicted in 26.109000 milli-seconds.\n",
            "person: 99%\t(left_x:  196   top_y:  144   width:   36   height:  118)\n",
            "frisbee: 93%\t(left_x:  203   top_y:  120   width:   15   height:    5)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000005193.jpg: Predicted in 25.963000 milli-seconds.\n",
            "person: 98%\t(left_x:    1   top_y:   85   width:  220   height:  348)\n",
            "cell phone: 81%\t(left_x:   72   top_y:  173   width:   43   height:   28)\n",
            "person: 92%\t(left_x:  146   top_y:  100   width:  101   height:  329)\n",
            "person: 73%\t(left_x:  222   top_y:   64   width:   42   height:  125)\n",
            "surfboard: 77%\t(left_x:  237   top_y:   59   width:  109   height:  356)\n",
            "person: 97%\t(left_x:  289   top_y:  167   width:  118   height:  236)\n",
            "person: 95%\t(left_x:  363   top_y:  222   width:  124   height:  155)\n",
            "bottle: 87%\t(left_x:  368   top_y:   98   width:   23   height:   74)\n",
            "person: 83%\t(left_x:  380   top_y:   98   width:  104   height:  189)\n",
            "surfboard: 92%\t(left_x:  459   top_y:   69   width:  113   height:  277)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000572620.jpg: Predicted in 25.550000 milli-seconds.\n",
            "person: 50%\t(left_x:   -4   top_y:  181   width:  632   height:  155)\n",
            "person: 67%\t(left_x:   -1   top_y:  260   width:   53   height:   78)\n",
            "person: 64%\t(left_x:   11   top_y:  242   width:   34   height:   60)\n",
            "person: 66%\t(left_x:   39   top_y:  247   width:   32   height:   53)\n",
            "person: 70%\t(left_x:   75   top_y:  262   width:   37   height:   53)\n",
            "person: 50%\t(left_x:  109   top_y:  243   width:   22   height:   42)\n",
            "person: 74%\t(left_x:  113   top_y:  287   width:   37   height:   48)\n",
            "person: 99%\t(left_x:  270   top_y:   87   width:  122   height:  201)\n",
            "person: 61%\t(left_x:  270   top_y:  225   width:   36   height:   74)\n",
            "skateboard: 96%\t(left_x:  334   top_y:  230   width:   57   height:   61)\n",
            "person: 78%\t(left_x:  408   top_y:  205   width:   32   height:   75)\n",
            "person: 98%\t(left_x:  440   top_y:  187   width:   49   height:  138)\n",
            "person: 80%\t(left_x:  480   top_y:  196   width:   41   height:   94)\n",
            "person: 53%\t(left_x:  508   top_y:  166   width:   50   height:  155)\n",
            "person: 77%\t(left_x:  551   top_y:  128   width:   88   height:  251)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000121153.jpg: Predicted in 25.869000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000164969.jpg: Predicted in 27.248000 milli-seconds.\n",
            "pizza: 90%\t(left_x:   65   top_y:   35   width:  443   height:  388)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000494863.jpg: Predicted in 25.569000 milli-seconds.\n",
            "train: 81%\t(left_x:   -9   top_y:  126   width:  666   height:  231)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000294350.jpg: Predicted in 25.909000 milli-seconds.\n",
            "person: 50%\t(left_x:  117   top_y:  136   width:   89   height:  206)\n",
            "person: 98%\t(left_x:  239   top_y:  102   width:  276   height:  317)\n",
            "person: 99%\t(left_x:  267   top_y:  163   width:   68   height:  139)\n",
            "person: 96%\t(left_x:  321   top_y:  183   width:   42   height:   89)\n",
            "person: 98%\t(left_x:  522   top_y:  129   width:  120   height:  294)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000159458.jpg: Predicted in 25.604000 milli-seconds.\n",
            "bed: 84%\t(left_x:  115   top_y:  170   width:  409   height:  292)\n",
            "dog: 92%\t(left_x:  216   top_y:  216   width:   96   height:   38)\n",
            "chair: 66%\t(left_x:  527   top_y:  209   width:  115   height:  251)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000219578.jpg: Predicted in 25.791000 milli-seconds.\n",
            "sofa: 79%\t(left_x:    5   top_y:   63   width:  623   height:  341)\n",
            "cat: 70%\t(left_x:  419   top_y:  152   width:  210   height:  126)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000568195.jpg: Predicted in 25.558000 milli-seconds.\n",
            "diningtable: 92%\t(left_x:   -6   top_y:  414   width:  440   height:  222)\n",
            "person: 97%\t(left_x:    0   top_y:   85   width:  163   height:  535)\n",
            "bowl: 82%\t(left_x:   23   top_y:  469   width:  172   height:  149)\n",
            "clock: 96%\t(left_x:   39   top_y:   -0   width:   53   height:   46)\n",
            "person: 100%\t(left_x:  124   top_y:  135   width:  233   height:  312)\n",
            "cake: 99%\t(left_x:  198   top_y:  416   width:  119   height:   86)\n",
            "person: 94%\t(left_x:  290   top_y:  136   width:  136   height:  309)\n",
            "fork: 85%\t(left_x:  333   top_y:  492   width:   90   height:   24)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000178618.jpg: Predicted in 25.764000 milli-seconds.\n",
            "elephant: 99%\t(left_x:  240   top_y:  242   width:  173   height:  179)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000429623.jpg: Predicted in 25.633000 milli-seconds.\n",
            "diningtable: 74%\t(left_x:  -14   top_y:   93   width:  665   height:  401)\n",
            "pizza: 98%\t(left_x:   10   top_y:  160   width:  490   height:  302)\n",
            "chair: 74%\t(left_x:  261   top_y:    2   width:  249   height:  154)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000579818.jpg: Predicted in 25.512000 milli-seconds.\n",
            "train: 96%\t(left_x:  -13   top_y:   95   width:  537   height:  127)\n",
            "person: 86%\t(left_x:  429   top_y:  113   width:   13   height:   22)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000474021.jpg: Predicted in 25.996000 milli-seconds.\n",
            "person: 100%\t(left_x:   14   top_y:   83   width:  213   height:  294)\n",
            "remote: 57%\t(left_x:   85   top_y:  201   width:   22   height:   16)\n",
            "person: 88%\t(left_x:  162   top_y:  260   width:  127   height:  115)\n",
            "remote: 56%\t(left_x:  172   top_y:  171   width:   10   height:   10)\n",
            "remote: 91%\t(left_x:  261   top_y:  268   width:   29   height:   69)\n",
            "book: 52%\t(left_x:  287   top_y:  226   width:   11   height:   18)\n",
            "book: 57%\t(left_x:  290   top_y:  157   width:    8   height:   17)\n",
            "book: 56%\t(left_x:  309   top_y:  137   width:    9   height:   17)\n",
            "person: 87%\t(left_x:  318   top_y:  124   width:  119   height:  251)\n",
            "book: 61%\t(left_x:  319   top_y:  163   width:   12   height:   18)\n",
            "book: 60%\t(left_x:  329   top_y:  141   width:    9   height:   18)\n",
            "book: 53%\t(left_x:  334   top_y:  142   width:    8   height:   18)\n",
            "book: 51%\t(left_x:  344   top_y:  177   width:   16   height:   29)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000116068.jpg: Predicted in 25.924000 milli-seconds.\n",
            "person: 99%\t(left_x:    1   top_y:  113   width:   86   height:  243)\n",
            "person: 77%\t(left_x:    6   top_y:  261   width:    8   height:    8)\n",
            "kite: 92%\t(left_x:   61   top_y:  175   width:  184   height:  194)\n",
            "person: 96%\t(left_x:  110   top_y:   46   width:  119   height:  323)\n",
            "person: 99%\t(left_x:  230   top_y:  122   width:   84   height:  253)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000173830.jpg: Predicted in 25.475000 milli-seconds.\n",
            "person: 99%\t(left_x:  201   top_y:  186   width:  240   height:  389)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000321214.jpg: Predicted in 25.856000 milli-seconds.\n",
            "person: 88%\t(left_x:   15   top_y:   -4   width:  605   height:  479)\n",
            "cake: 81%\t(left_x:  279   top_y:  322   width:  274   height:  158)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000333745.jpg: Predicted in 25.637000 milli-seconds.\n",
            "bus: 60%\t(left_x:  -19   top_y:    6   width:  466   height:  422)\n",
            "umbrella: 59%\t(left_x:   29   top_y:   90   width:  247   height:   62)\n",
            "person: 98%\t(left_x:   64   top_y:  147   width:  121   height:  358)\n",
            "chair: 80%\t(left_x:  144   top_y:   35   width:   64   height:   60)\n",
            "chair: 54%\t(left_x:  197   top_y:   31   width:   59   height:   65)\n",
            "person: 56%\t(left_x:  283   top_y:  152   width:  142   height:  227)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000328959.jpg: Predicted in 25.973000 milli-seconds.\n",
            "toilet: 92%\t(left_x:   22   top_y:  280   width:  170   height:  218)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000130566.jpg: Predicted in 25.637000 milli-seconds.\n",
            "train: 93%\t(left_x:   14   top_y:  108   width:  566   height:  210)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000233370.jpg: Predicted in 25.606000 milli-seconds.\n",
            "suitcase: 86%\t(left_x:   77   top_y:  274   width:  303   height:  176)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000263403.jpg: Predicted in 25.632000 milli-seconds.\n",
            "person: 100%\t(left_x:  335   top_y:   59   width:   81   height:  123)\n",
            "surfboard: 89%\t(left_x:  391   top_y:   79   width:   32   height:  105)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000527784.jpg: Predicted in 26.092000 milli-seconds.\n",
            "sandwich: 91%\t(left_x:   61   top_y:  199   width:   88   height:  120)\n",
            "sandwich: 59%\t(left_x:  141   top_y:  215   width:  132   height:   99)\n",
            "bottle: 99%\t(left_x:  229   top_y:   58   width:   70   height:  183)\n",
            "bottle: 98%\t(left_x:  290   top_y:   11   width:   52   height:  199)\n",
            "bottle: 98%\t(left_x:  319   top_y:   76   width:   70   height:  178)\n",
            "sandwich: 98%\t(left_x:  348   top_y:  213   width:  220   height:  132)\n",
            "spoon: 64%\t(left_x:  572   top_y:   -2   width:   64   height:   88)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000223130.jpg: Predicted in 25.533000 milli-seconds.\n",
            "giraffe: 97%\t(left_x:  125   top_y:  163   width:  190   height:  440)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000331317.jpg: Predicted in 25.622000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000417632.jpg: Predicted in 25.731000 milli-seconds.\n",
            "person: 95%\t(left_x:  -11   top_y:    4   width:  390   height:  460)\n",
            "bottle: 96%\t(left_x:    2   top_y:  242   width:   86   height:  238)\n",
            "cup: 50%\t(left_x:   68   top_y:  401   width:   63   height:   79)\n",
            "wine glass: 85%\t(left_x:  130   top_y:  345   width:   53   height:   91)\n",
            "bottle: 63%\t(left_x:  187   top_y:  163   width:  196   height:   85)\n",
            "bottle: 65%\t(left_x:  241   top_y:  394   width:   40   height:   86)\n",
            "cup: 59%\t(left_x:  299   top_y:  421   width:   48   height:   47)\n",
            "person: 89%\t(left_x:  343   top_y:   11   width:  291   height:  456)\n",
            "wine glass: 99%\t(left_x:  344   top_y:  187   width:   45   height:  112)\n",
            "wine glass: 98%\t(left_x:  405   top_y:  177   width:   70   height:  129)\n",
            "tie: 93%\t(left_x:  463   top_y:   93   width:   23   height:   66)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000232088.jpg: Predicted in 26.196000 milli-seconds.\n",
            "tvmonitor: 85%\t(left_x:   58   top_y:  149   width:  150   height:  112)\n",
            "sofa: 66%\t(left_x:  126   top_y:  355   width:  370   height:  124)\n",
            "chair: 67%\t(left_x:  211   top_y:  276   width:   56   height:   49)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000331569.jpg: Predicted in 25.495000 milli-seconds.\n",
            "cup: 98%\t(left_x:  237   top_y:   23   width:  357   height:  519)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000262048.jpg: Predicted in 25.636000 milli-seconds.\n",
            "person: 88%\t(left_x:   31   top_y:  385   width:  285   height:  148)\n",
            "person: 72%\t(left_x:   49   top_y:  184   width:   62   height:  207)\n",
            "umbrella: 67%\t(left_x:   73   top_y:  138   width:  451   height:  275)\n",
            "person: 58%\t(left_x:  120   top_y:  312   width:   32   height:   72)\n",
            "person: 90%\t(left_x:  518   top_y:  262   width:    9   height:   13)\n",
            "person: 92%\t(left_x:  539   top_y:  259   width:   14   height:   40)\n",
            "person: 98%\t(left_x:  546   top_y:  303   width:   37   height:   68)\n",
            "person: 68%\t(left_x:  568   top_y:  263   width:   16   height:   15)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000052413.jpg: Predicted in 27.462000 milli-seconds.\n",
            "cup: 99%\t(left_x:  189   top_y:   44   width:   36   height:   58)\n",
            "cell phone: 93%\t(left_x:  216   top_y:   95   width:  139   height:  233)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000016598.jpg: Predicted in 25.514000 milli-seconds.\n",
            "person: 100%\t(left_x:   -2   top_y:   19   width:  495   height:  619)\n",
            "cell phone: 98%\t(left_x:  340   top_y:  153   width:   72   height:  110)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000034139.jpg: Predicted in 25.667000 milli-seconds.\n",
            "suitcase: 94%\t(left_x:   18   top_y:  102   width:  424   height:  287)\n",
            "person: 96%\t(left_x:  436   top_y:  112   width:   94   height:  271)\n",
            "handbag: 68%\t(left_x:  438   top_y:  178   width:   64   height:   62)\n",
            "person: 97%\t(left_x:  503   top_y:   99   width:   95   height:  278)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000123321.jpg: Predicted in 25.427000 milli-seconds.\n",
            "bowl: 68%\t(left_x:   26   top_y:    9   width:  553   height:  578)\n",
            "broccoli: 55%\t(left_x:   58   top_y:  226   width:  106   height:   91)\n",
            "broccoli: 60%\t(left_x:   67   top_y:  397   width:  116   height:   70)\n",
            "broccoli: 51%\t(left_x:  142   top_y:   81   width:   72   height:   72)\n",
            "broccoli: 67%\t(left_x:  156   top_y:  468   width:  133   height:  100)\n",
            "broccoli: 51%\t(left_x:  205   top_y:  256   width:  119   height:   84)\n",
            "broccoli: 60%\t(left_x:  219   top_y:   50   width:   62   height:  107)\n",
            "broccoli: 62%\t(left_x:  261   top_y:  355   width:   88   height:  104)\n",
            "broccoli: 60%\t(left_x:  286   top_y:  451   width:   97   height:  111)\n",
            "broccoli: 51%\t(left_x:  357   top_y:   88   width:  137   height:  103)\n",
            "broccoli: 73%\t(left_x:  434   top_y:  271   width:  109   height:  109)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000112298.jpg: Predicted in 25.545000 milli-seconds.\n",
            "person: 97%\t(left_x:  135   top_y:  216   width:  178   height:  265)\n",
            "tennis racket: 52%\t(left_x:  154   top_y:   69   width:   90   height:   86)\n",
            "bottle: 65%\t(left_x:  239   top_y:  135   width:   19   height:   74)\n",
            "bottle: 97%\t(left_x:  266   top_y:  149   width:   18   height:   61)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000294162.jpg: Predicted in 25.798000 milli-seconds.\n",
            "laptop: 99%\t(left_x:   37   top_y:   71   width:  366   height:  406)\n",
            "mouse: 100%\t(left_x:  336   top_y:  416   width:  134   height:  118)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000093261.jpg: Predicted in 25.454000 milli-seconds.\n",
            "kite: 59%\t(left_x:   55   top_y:  120   width:  296   height:  209)\n",
            "person: 97%\t(left_x:   58   top_y:   32   width:  205   height:  215)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000386879.jpg: Predicted in 26.093000 milli-seconds.\n",
            "tennis racket: 95%\t(left_x:   18   top_y:  247   width:  168   height:  194)\n",
            "person: 99%\t(left_x:   71   top_y:   51   width:  316   height:  588)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000064495.jpg: Predicted in 25.425000 milli-seconds.\n",
            "parking meter: 75%\t(left_x:  229   top_y:   46   width:  183   height:  184)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000140286.jpg: Predicted in 25.776000 milli-seconds.\n",
            "horse: 100%\t(left_x:   95   top_y:  248   width:  172   height:  200)\n",
            "person: 72%\t(left_x:  256   top_y:  264   width:   24   height:   69)\n",
            "person: 96%\t(left_x:  416   top_y:  222   width:  100   height:  114)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000383386.jpg: Predicted in 25.733000 milli-seconds.\n",
            "teddy bear: 86%\t(left_x:   66   top_y:   62   width:  216   height:  372)\n",
            "teddy bear: 81%\t(left_x:  192   top_y:   49   width:  237   height:  439)\n",
            "teddy bear: 97%\t(left_x:  356   top_y:  129   width:  223   height:  322)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000359135.jpg: Predicted in 25.402000 milli-seconds.\n",
            "elephant: 69%\t(left_x:    4   top_y:   89   width:  406   height:  347)\n",
            "elephant: 78%\t(left_x:  166   top_y:   35   width:  453   height:  396)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000080413.jpg: Predicted in 25.759000 milli-seconds.\n",
            "teddy bear: 69%\t(left_x:  219   top_y:  111   width:  176   height:  145)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000392818.jpg: Predicted in 26.151000 milli-seconds.\n",
            "dog: 92%\t(left_x:  -18   top_y:  -20   width:  529   height:  482)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000246963.jpg: Predicted in 25.482000 milli-seconds.\n",
            "person: 64%\t(left_x:   80   top_y:   94   width:   64   height:  114)\n",
            "motorbike: 77%\t(left_x:   84   top_y:  123   width:   64   height:   92)\n",
            "person: 84%\t(left_x:  151   top_y:  121   width:   72   height:   96)\n",
            "motorbike: 60%\t(left_x:  153   top_y:  143   width:   81   height:   99)\n",
            "person: 51%\t(left_x:  219   top_y:  109   width:   53   height:   58)\n",
            "motorbike: 92%\t(left_x:  222   top_y:  141   width:   54   height:   79)\n",
            "person: 98%\t(left_x:  359   top_y:  130   width:   80   height:  118)\n",
            "motorbike: 59%\t(left_x:  380   top_y:  186   width:   61   height:   63)\n",
            "person: 99%\t(left_x:  433   top_y:  153   width:   96   height:  144)\n",
            "stop sign: 99%\t(left_x:  437   top_y:   83   width:   43   height:   46)\n",
            "motorbike: 85%\t(left_x:  456   top_y:  228   width:   79   height:   85)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000200961.jpg: Predicted in 26.077000 milli-seconds.\n",
            "frisbee: 99%\t(left_x:  229   top_y:  210   width:   35   height:   45)\n",
            "person: 99%\t(left_x:  242   top_y:  198   width:  109   height:  159)\n",
            "person: 74%\t(left_x:  288   top_y:  159   width:   18   height:   27)\n",
            "car: 62%\t(left_x:  302   top_y:  154   width:   62   height:   29)\n",
            "truck: 60%\t(left_x:  348   top_y:  136   width:   85   height:   41)\n",
            "truck: 83%\t(left_x:  457   top_y:  146   width:   58   height:   31)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000212072.jpg: Predicted in 25.578000 milli-seconds.\n",
            "stop sign: 100%\t(left_x:  312   top_y:   27   width:  146   height:  153)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000188592.jpg: Predicted in 26.073000 milli-seconds.\n",
            "person: 98%\t(left_x:   55   top_y:  124   width:  307   height:  518)\n",
            "apple: 98%\t(left_x:  197   top_y:  324   width:   83   height:   56)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000472030.jpg: Predicted in 25.792000 milli-seconds.\n",
            "bench: 98%\t(left_x:  495   top_y:  355   width:  144   height:  125)\n",
            "backpack: 91%\t(left_x:  522   top_y:  354   width:   42   height:   73)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000460379.jpg: Predicted in 25.639000 milli-seconds.\n",
            "giraffe: 99%\t(left_x:   48   top_y:  305   width:   59   height:  204)\n",
            "giraffe: 96%\t(left_x:  187   top_y:  400   width:   68   height:   87)\n",
            "giraffe: 97%\t(left_x:  337   top_y:  271   width:   62   height:  124)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000554156.jpg: Predicted in 25.781000 milli-seconds.\n",
            "person: 94%\t(left_x:  112   top_y:   87   width:  336   height:  332)\n",
            "tennis racket: 71%\t(left_x:  417   top_y:   -5   width:  104   height:  201)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000306733.jpg: Predicted in 25.565000 milli-seconds.\n",
            "bottle: 84%\t(left_x:   94   top_y:  352   width:   40   height:   74)\n",
            "pottedplant: 73%\t(left_x:  288   top_y:  255   width:  195   height:   99)\n",
            "toilet: 58%\t(left_x:  436   top_y:  324   width:  184   height:  103)\n",
            "bottle: 75%\t(left_x:  571   top_y:  323   width:   17   height:   39)\n",
            "bottle: 85%\t(left_x:  587   top_y:  323   width:   16   height:   41)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000431140.jpg: Predicted in 25.765000 milli-seconds.\n",
            "toilet: 68%\t(left_x:   -2   top_y:  139   width:  271   height:  347)\n",
            "sink: 89%\t(left_x:  272   top_y:  185   width:  367   height:  305)\n",
            "toilet: 87%\t(left_x:  483   top_y:    3   width:  120   height:  159)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000357903.jpg: Predicted in 25.581000 milli-seconds.\n",
            "pizza: 89%\t(left_x:   -6   top_y:  125   width:  494   height:  458)\n",
            "pizza: 89%\t(left_x:   82   top_y:   -1   width:  362   height:   99)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000257478.jpg: Predicted in 25.445000 milli-seconds.\n",
            "person: 99%\t(left_x:  248   top_y:   35   width:  182   height:  336)\n",
            "baseball glove: 94%\t(left_x:  367   top_y:  166   width:   47   height:   39)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000492110.jpg: Predicted in 26.007000 milli-seconds.\n",
            "chair: 59%\t(left_x:   -0   top_y:  205   width:   54   height:  155)\n",
            "person: 71%\t(left_x:   47   top_y:  116   width:   26   height:   47)\n",
            "person: 97%\t(left_x:   52   top_y:  105   width:  105   height:  117)\n",
            "laptop: 100%\t(left_x:   70   top_y:  210   width:  275   height:  188)\n",
            "cup: 99%\t(left_x:  161   top_y:  364   width:  111   height:   64)\n",
            "chair: 53%\t(left_x:  229   top_y:  186   width:   76   height:  102)\n",
            "person: 93%\t(left_x:  275   top_y:   15   width:  275   height:  391)\n",
            "cell phone: 98%\t(left_x:  333   top_y:  361   width:   95   height:   42)\n",
            "chair: 70%\t(left_x:  503   top_y:  271   width:  124   height:  154)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000551215.jpg: Predicted in 25.547000 milli-seconds.\n",
            "person: 99%\t(left_x:   69   top_y:   71   width:  253   height:  441)\n",
            "tennis racket: 96%\t(left_x:  158   top_y:  153   width:   54   height:   82)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000261796.jpg: Predicted in 25.827000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000515828.jpg: Predicted in 25.687000 milli-seconds.\n",
            "chair: 97%\t(left_x:   77   top_y:   -1   width:   74   height:   90)\n",
            "chair: 62%\t(left_x:  116   top_y:    1   width:   72   height:   62)\n",
            "bottle: 87%\t(left_x:  147   top_y:   61   width:    8   height:   23)\n",
            "backpack: 64%\t(left_x:  156   top_y:   43   width:   74   height:   34)\n",
            "person: 96%\t(left_x:  233   top_y:   -0   width:   79   height:   74)\n",
            "tennis racket: 95%\t(left_x:  253   top_y:  112   width:   78   height:   98)\n",
            "person: 93%\t(left_x:  277   top_y:   39   width:  134   height:  390)\n",
            "bottle: 71%\t(left_x:  412   top_y:   17   width:   11   height:   22)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000015335.jpg: Predicted in 25.546000 milli-seconds.\n",
            "person: 58%\t(left_x:   -2   top_y:   68   width:  220   height:  403)\n",
            "person: 57%\t(left_x:  234   top_y:   72   width:  105   height:   83)\n",
            "person: 87%\t(left_x:  350   top_y:   29   width:  286   height:  434)\n",
            "person: 64%\t(left_x:  502   top_y:   17   width:   58   height:  149)\n",
            "cup: 77%\t(left_x:  598   top_y:  423   width:   42   height:   57)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000550084.jpg: Predicted in 25.524000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000207306.jpg: Predicted in 25.696000 milli-seconds.\n",
            "teddy bear: 98%\t(left_x:   46   top_y:  153   width:  215   height:  205)\n",
            "person: 90%\t(left_x:   85   top_y:  178   width:   14   height:   31)\n",
            "traffic light: 64%\t(left_x:  105   top_y:  143   width:   10   height:   12)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000252216.jpg: Predicted in 25.572000 milli-seconds.\n",
            "horse: 87%\t(left_x:   72   top_y:   88   width:  208   height:  371)\n",
            "horse: 99%\t(left_x:  279   top_y:   41   width:  262   height:  407)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000326541.jpg: Predicted in 25.813000 milli-seconds.\n",
            "person: 87%\t(left_x:   -3   top_y:   12   width:  305   height:  341)\n",
            "cell phone: 98%\t(left_x:  173   top_y:   83   width:   49   height:  130)\n",
            "person: 58%\t(left_x:  214   top_y:   30   width:  420   height:  324)\n",
            "cell phone: 96%\t(left_x:  251   top_y:   98   width:   42   height:   81)\n",
            "person: 53%\t(left_x:  299   top_y:  136   width:   48   height:  100)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000117744.jpg: Predicted in 25.459000 milli-seconds.\n",
            "person: 70%\t(left_x:   83   top_y:   39   width:  144   height:  410)\n",
            "tennis racket: 85%\t(left_x:  118   top_y:  359   width:  118   height:  168)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000344888.jpg: Predicted in 26.015000 milli-seconds.\n",
            "car: 64%\t(left_x:  291   top_y:  153   width:   17   height:    9)\n",
            "car: 74%\t(left_x:  318   top_y:  156   width:   27   height:    8)\n",
            "horse: 88%\t(left_x:  382   top_y:  143   width:   50   height:  121)\n",
            "horse: 96%\t(left_x:  417   top_y:  168   width:  119   height:   95)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000168593.jpg: Predicted in 25.407000 milli-seconds.\n",
            "refrigerator: 98%\t(left_x:    0   top_y:  114   width:  272   height:  365)\n",
            "refrigerator: 94%\t(left_x:  252   top_y:  116   width:  139   height:  334)\n",
            "chair: 99%\t(left_x:  511   top_y:  221   width:  129   height:  231)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000556158.jpg: Predicted in 25.923000 milli-seconds.\n",
            "person: 100%\t(left_x:  156   top_y:  146   width:  129   height:  295)\n",
            "skis: 86%\t(left_x:  177   top_y:  423   width:   88   height:   38)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000135410.jpg: Predicted in 25.393000 milli-seconds.\n",
            "car: 93%\t(left_x:   -1   top_y:  220   width:   51   height:   94)\n",
            "car: 81%\t(left_x:   -1   top_y:  218   width:   70   height:   45)\n",
            "parking meter: 98%\t(left_x:   44   top_y:  209   width:  146   height:  349)\n",
            "motorbike: 54%\t(left_x:  188   top_y:  210   width:  155   height:  147)\n",
            "car: 89%\t(left_x:  335   top_y:  247   width:  130   height:   71)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000538364.jpg: Predicted in 25.684000 milli-seconds.\n",
            "person: 99%\t(left_x:   -0   top_y:  115   width:   42   height:  157)\n",
            "handbag: 53%\t(left_x:   32   top_y:  183   width:   24   height:   30)\n",
            "person: 99%\t(left_x:   40   top_y:  116   width:   48   height:  154)\n",
            "bench: 99%\t(left_x:  105   top_y:  166   width:   52   height:   35)\n",
            "car: 97%\t(left_x:  263   top_y:  138   width:  179   height:  132)\n",
            "motorbike: 98%\t(left_x:  301   top_y:  177   width:  282   height:  211)\n",
            "person: 98%\t(left_x:  384   top_y:  121   width:  125   height:  282)\n",
            "car: 67%\t(left_x:  479   top_y:  154   width:   85   height:   88)\n",
            "car: 85%\t(left_x:  515   top_y:  146   width:   73   height:   93)\n",
            "person: 99%\t(left_x:  593   top_y:  120   width:   48   height:  226)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000419653.jpg: Predicted in 25.706000 milli-seconds.\n",
            "microwave: 58%\t(left_x:   -1   top_y:    0   width:   48   height:   33)\n",
            "microwave: 98%\t(left_x:   44   top_y:  136   width:   74   height:   78)\n",
            "pottedplant: 53%\t(left_x:   70   top_y:   65   width:   45   height:   77)\n",
            "vase: 55%\t(left_x:   73   top_y:  102   width:   38   height:   40)\n",
            "bottle: 87%\t(left_x:   81   top_y:  286   width:   46   height:   88)\n",
            "bowl: 92%\t(left_x:  161   top_y:  324   width:  131   height:   79)\n",
            "bowl: 67%\t(left_x:  201   top_y:  394   width:  163   height:   86)\n",
            "chair: 52%\t(left_x:  229   top_y:  152   width:   29   height:   63)\n",
            "chair: 65%\t(left_x:  281   top_y:  239   width:   71   height:  136)\n",
            "bottle: 99%\t(left_x:  339   top_y:  221   width:   41   height:  123)\n",
            "bottle: 91%\t(left_x:  485   top_y:   65   width:   27   height:   66)\n",
            "tvmonitor: 90%\t(left_x:  551   top_y:    8   width:   89   height:  100)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000389933.jpg: Predicted in 25.739000 milli-seconds.\n",
            "dog: 87%\t(left_x:    3   top_y:   87   width:  505   height:  395)\n",
            "sofa: 51%\t(left_x:   22   top_y:  -27   width:  600   height:  536)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000402433.jpg: Predicted in 25.636000 milli-seconds.\n",
            "pizza: 88%\t(left_x:   67   top_y:  158   width:  457   height:  236)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000272049.jpg: Predicted in 25.686000 milli-seconds.\n",
            "aeroplane: 69%\t(left_x:   -1   top_y:   27   width:  195   height:   87)\n",
            "person: 69%\t(left_x:   18   top_y:  229   width:    6   height:   15)\n",
            "truck: 94%\t(left_x:   24   top_y:   72   width:  516   height:  363)\n",
            "person: 87%\t(left_x:   37   top_y:  227   width:    9   height:   22)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000455597.jpg: Predicted in 25.612000 milli-seconds.\n",
            "person: 97%\t(left_x:  105   top_y:  225   width:  210   height:  217)\n",
            "bowl: 82%\t(left_x:  182   top_y:  164   width:   29   height:   10)\n",
            "bowl: 67%\t(left_x:  182   top_y:  151   width:   28   height:   10)\n",
            "bowl: 55%\t(left_x:  213   top_y:  167   width:   24   height:    8)\n",
            "spoon: 57%\t(left_x:  444   top_y:  248   width:   47   height:   36)\n",
            "spoon: 55%\t(left_x:  499   top_y:  288   width:   37   height:   29)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000232646.jpg: Predicted in 25.730000 milli-seconds.\n",
            "stop sign: 100%\t(left_x:  498   top_y:   93   width:   97   height:  103)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000087875.jpg: Predicted in 25.703000 milli-seconds.\n",
            "fire hydrant: 100%\t(left_x:  153   top_y:  171   width:  149   height:  315)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000430973.jpg: Predicted in 25.625000 milli-seconds.\n",
            "diningtable: 56%\t(left_x:    6   top_y:   51   width:  624   height:  412)\n",
            "oven: 62%\t(left_x:   11   top_y:   28   width:  618   height:  387)\n",
            "pizza: 92%\t(left_x:   23   top_y:   49   width:  594   height:  377)\n",
            "apple: 67%\t(left_x:  594   top_y:   -0   width:   45   height:   33)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000455219.jpg: Predicted in 25.590000 milli-seconds.\n",
            "cow: 98%\t(left_x:  241   top_y:  222   width:  197   height:  142)\n",
            "person: 94%\t(left_x:  310   top_y:  197   width:   24   height:   39)\n",
            "cow: 83%\t(left_x:  326   top_y:  224   width:  167   height:  120)\n",
            "person: 99%\t(left_x:  472   top_y:  201   width:   78   height:  170)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000507893.jpg: Predicted in 25.950000 milli-seconds.\n",
            "toilet: 88%\t(left_x:  295   top_y:  558   width:   97   height:   83)\n",
            "sink: 55%\t(left_x:  298   top_y:  391   width:   91   height:   23)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000370900.jpg: Predicted in 25.412000 milli-seconds.\n",
            "teddy bear: 76%\t(left_x:  140   top_y:   41   width:  183   height:  231)\n",
            "teddy bear: 78%\t(left_x:  287   top_y:   56   width:  327   height:  408)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000424975.jpg: Predicted in 25.659000 milli-seconds.\n",
            "person: 61%\t(left_x:   -0   top_y:  316   width:   24   height:   69)\n",
            "person: 97%\t(left_x:  242   top_y:  307   width:   35   height:   88)\n",
            "person: 92%\t(left_x:  286   top_y:  301   width:   29   height:   74)\n",
            "car: 70%\t(left_x:  544   top_y:  313   width:   34   height:   36)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000049060.jpg: Predicted in 25.752000 milli-seconds.\n",
            "train: 87%\t(left_x:   25   top_y:   87   width:  452   height:  327)\n",
            "person: 93%\t(left_x:  452   top_y:  206   width:   23   height:   70)\n",
            "person: 55%\t(left_x:  466   top_y:  186   width:   19   height:   93)\n",
            "person: 88%\t(left_x:  482   top_y:  191   width:   26   height:   91)\n",
            "person: 83%\t(left_x:  507   top_y:  195   width:   27   height:   82)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000180751.jpg: Predicted in 25.752000 milli-seconds.\n",
            "microwave: 58%\t(left_x:   -2   top_y:   -0   width:   64   height:   35)\n",
            "person: 99%\t(left_x:   13   top_y:   10   width:  252   height:  371)\n",
            "bottle: 63%\t(left_x:   96   top_y:   51   width:   16   height:   59)\n",
            "wine glass: 96%\t(left_x:  130   top_y:  360   width:   88   height:  118)\n",
            "bottle: 58%\t(left_x:  200   top_y:  131   width:   13   height:   36)\n",
            "bottle: 69%\t(left_x:  212   top_y:  133   width:   13   height:   45)\n",
            "bottle: 76%\t(left_x:  226   top_y:  130   width:   12   height:   48)\n",
            "bottle: 78%\t(left_x:  238   top_y:  130   width:   11   height:   48)\n",
            "bottle: 97%\t(left_x:  300   top_y:  113   width:   57   height:  304)\n",
            "bottle: 94%\t(left_x:  358   top_y:  141   width:   38   height:  184)\n",
            "bottle: 81%\t(left_x:  388   top_y:  143   width:   34   height:  157)\n",
            "bottle: 95%\t(left_x:  411   top_y:  119   width:   29   height:  160)\n",
            "wine glass: 94%\t(left_x:  411   top_y:  277   width:   51   height:  102)\n",
            "bottle: 71%\t(left_x:  434   top_y:  119   width:   25   height:  161)\n",
            "bowl: 60%\t(left_x:  516   top_y:  190   width:   66   height:   32)\n",
            "bottle: 85%\t(left_x:  579   top_y:  142   width:   19   height:   57)\n",
            "bottle: 65%\t(left_x:  606   top_y:  153   width:   11   height:   41)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000137106.jpg: Predicted in 25.608000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000195045.jpg: Predicted in 26.093000 milli-seconds.\n",
            "bench: 93%\t(left_x:   -0   top_y:  269   width:   45   height:   35)\n",
            "bench: 97%\t(left_x:  423   top_y:  293   width:   50   height:   64)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000001353.jpg: Predicted in 25.559000 milli-seconds.\n",
            "person: 94%\t(left_x:   61   top_y:  214   width:  120   height:  142)\n",
            "suitcase: 53%\t(left_x:   68   top_y:  328   width:  188   height:  121)\n",
            "person: 68%\t(left_x:  139   top_y:  181   width:   70   height:   69)\n",
            "person: 74%\t(left_x:  148   top_y:  133   width:   74   height:   55)\n",
            "person: 60%\t(left_x:  150   top_y:  193   width:  116   height:  179)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000389381.jpg: Predicted in 25.991000 milli-seconds.\n",
            "bowl: 83%\t(left_x:   54   top_y:   38   width:  421   height:  288)\n",
            "bowl: 65%\t(left_x:  131   top_y:  202   width:  445   height:  306)\n",
            "broccoli: 92%\t(left_x:  373   top_y:  277   width:  107   height:  136)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000265108.jpg: Predicted in 25.464000 milli-seconds.\n",
            "umbrella: 81%\t(left_x:  198   top_y:  422   width:   24   height:  183)\n",
            "suitcase: 97%\t(left_x:  248   top_y:  385   width:  101   height:  223)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000115898.jpg: Predicted in 25.325000 milli-seconds.\n",
            "surfboard: 75%\t(left_x:  143   top_y:  248   width:  292   height:   61)\n",
            "person: 98%\t(left_x:  284   top_y:    7   width:  179   height:  286)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000074256.jpg: Predicted in 25.626000 milli-seconds.\n",
            "person: 93%\t(left_x:   -1   top_y:   49   width:   96   height:  439)\n",
            "handbag: 56%\t(left_x:   41   top_y:  334   width:  220   height:  147)\n",
            "cell phone: 93%\t(left_x:   65   top_y:  258   width:   35   height:   29)\n",
            "person: 99%\t(left_x:  164   top_y:   82   width:  197   height:  398)\n",
            "cell phone: 69%\t(left_x:  175   top_y:  338   width:   41   height:   18)\n",
            "person: 96%\t(left_x:  339   top_y:   79   width:  283   height:  388)\n",
            "person: 63%\t(left_x:  517   top_y:  147   width:  122   height:  338)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000120584.jpg: Predicted in 25.686000 milli-seconds.\n",
            "clock: 97%\t(left_x:  268   top_y:  203   width:   74   height:   72)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000488075.jpg: Predicted in 25.525000 milli-seconds.\n",
            "refrigerator: 93%\t(left_x:  236   top_y:  116   width:   28   height:  203)\n",
            "oven: 52%\t(left_x:  350   top_y:  164   width:   63   height:   40)\n",
            "microwave: 99%\t(left_x:  352   top_y:  110   width:   74   height:   44)\n",
            "chair: 99%\t(left_x:  407   top_y:  248   width:  188   height:  199)\n",
            "bottle: 83%\t(left_x:  621   top_y:  145   width:   12   height:   41)\n",
            "bottle: 70%\t(left_x:  632   top_y:  147   width:    8   height:   41)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000284445.jpg: Predicted in 25.788000 milli-seconds.\n",
            "bus: 91%\t(left_x:    3   top_y:  320   width:   33   height:   30)\n",
            "person: 88%\t(left_x:  123   top_y:  341   width:   21   height:   47)\n",
            "traffic light: 96%\t(left_x:  152   top_y:  278   width:   13   height:   32)\n",
            "person: 100%\t(left_x:  165   top_y:  305   width:  134   height:  291)\n",
            "traffic light: 58%\t(left_x:  172   top_y:  288   width:   10   height:   24)\n",
            "traffic light: 57%\t(left_x:  184   top_y:  177   width:   38   height:   69)\n",
            "traffic light: 66%\t(left_x:  225   top_y:  157   width:   74   height:  110)\n",
            "person: 98%\t(left_x:  286   top_y:  324   width:   70   height:  208)\n",
            "person: 98%\t(left_x:  346   top_y:  316   width:   73   height:  213)\n",
            "traffic light: 94%\t(left_x:  428   top_y:  274   width:   14   height:   27)\n",
            "person: 93%\t(left_x:  436   top_y:  329   width:   35   height:   89)\n",
            "person: 98%\t(left_x:  463   top_y:  317   width:   65   height:  204)\n",
            "person: 96%\t(left_x:  516   top_y:  314   width:   42   height:  143)\n",
            "person: 99%\t(left_x:  539   top_y:  327   width:   56   height:  187)\n",
            "person: 72%\t(left_x:  583   top_y:  322   width:   41   height:  128)\n",
            "person: 95%\t(left_x:  598   top_y:  318   width:   42   height:  252)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000479912.jpg: Predicted in 25.458000 milli-seconds.\n",
            "aeroplane: 89%\t(left_x:  -12   top_y:  221   width:  345   height:  250)\n",
            "person: 51%\t(left_x:   90   top_y:  341   width:    5   height:   15)\n",
            "person: 58%\t(left_x:  117   top_y:  336   width:    5   height:   16)\n",
            "truck: 72%\t(left_x:  430   top_y:  497   width:   47   height:  142)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000416758.jpg: Predicted in 25.316000 milli-seconds.\n",
            "cow: 56%\t(left_x:   48   top_y:  254   width:  206   height:  131)\n",
            "cow: 99%\t(left_x:   57   top_y:   81   width:  372   height:  368)\n",
            "cow: 96%\t(left_x:  396   top_y:   61   width:  161   height:  252)\n",
            "cow: 98%\t(left_x:  444   top_y:   63   width:  197   height:  342)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000151820.jpg: Predicted in 25.752000 milli-seconds.\n",
            "chair: 89%\t(left_x:   34   top_y:  230   width:  116   height:  196)\n",
            "person: 95%\t(left_x:   66   top_y:  139   width:  151   height:  238)\n",
            "chair: 93%\t(left_x:  128   top_y:  309   width:  157   height:  118)\n",
            "person: 98%\t(left_x:  137   top_y:  132   width:  103   height:  125)\n",
            "wine glass: 82%\t(left_x:  213   top_y:  227   width:   18   height:   30)\n",
            "wine glass: 65%\t(left_x:  227   top_y:  246   width:   16   height:   28)\n",
            "cup: 54%\t(left_x:  243   top_y:  236   width:   18   height:   19)\n",
            "person: 99%\t(left_x:  251   top_y:  139   width:   83   height:   97)\n",
            "cup: 80%\t(left_x:  303   top_y:  234   width:   19   height:   18)\n",
            "wine glass: 94%\t(left_x:  332   top_y:  220   width:   15   height:   41)\n",
            "wine glass: 92%\t(left_x:  349   top_y:  238   width:   14   height:   32)\n",
            "chair: 99%\t(left_x:  350   top_y:  288   width:  161   height:  139)\n",
            "chair: 54%\t(left_x:  355   top_y:  188   width:   19   height:   43)\n",
            "chair: 58%\t(left_x:  355   top_y:  188   width:   19   height:   23)\n",
            "person: 100%\t(left_x:  357   top_y:  137   width:   89   height:   96)\n",
            "person: 90%\t(left_x:  360   top_y:  159   width:  169   height:  247)\n",
            "bottle: 60%\t(left_x:  386   top_y:  202   width:   21   height:   50)\n",
            "chair: 98%\t(left_x:  498   top_y:  271   width:  126   height:  157)\n",
            "person: 85%\t(left_x:  499   top_y:  174   width:   96   height:  176)\n",
            "person: 92%\t(left_x:  543   top_y:  151   width:   56   height:  112)\n",
            "handbag: 55%\t(left_x:  589   top_y:  275   width:   50   height:  151)\n",
            "chair: 82%\t(left_x:  593   top_y:  211   width:   45   height:   65)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000109827.jpg: Predicted in 25.723000 milli-seconds.\n",
            "teddy bear: 99%\t(left_x:  152   top_y:  138   width:  259   height:  231)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000085478.jpg: Predicted in 25.737000 milli-seconds.\n",
            "bear: 73%\t(left_x:   23   top_y:   81   width:  194   height:  245)\n",
            "bear: 99%\t(left_x:  313   top_y:  184   width:  219   height:  117)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000154000.jpg: Predicted in 26.710000 milli-seconds.\n",
            "truck: 99%\t(left_x:   51   top_y:   91   width:  513   height:  345)\n",
            "truck: 69%\t(left_x:  513   top_y:  175   width:   57   height:  174)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000261318.jpg: Predicted in 25.920000 milli-seconds.\n",
            "suitcase: 88%\t(left_x:   -1   top_y:  342   width:   79   height:  283)\n",
            "person: 72%\t(left_x:   81   top_y:  156   width:  229   height:  459)\n",
            "cell phone: 64%\t(left_x:  172   top_y:  223   width:   28   height:   41)\n",
            "suitcase: 74%\t(left_x:  351   top_y:  352   width:   76   height:  282)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000003255.jpg: Predicted in 25.472000 milli-seconds.\n",
            "person: 97%\t(left_x:  236   top_y:  316   width:   15   height:   43)\n",
            "person: 81%\t(left_x:  244   top_y:  318   width:   13   height:   38)\n",
            "person: 95%\t(left_x:  260   top_y:  312   width:   16   height:   47)\n",
            "person: 97%\t(left_x:  273   top_y:  316   width:   18   height:   42)\n",
            "person: 84%\t(left_x:  296   top_y:  313   width:   12   height:   38)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000463647.jpg: Predicted in 26.027000 milli-seconds.\n",
            "truck: 73%\t(left_x:  293   top_y:   56   width:  169   height:   92)\n",
            "truck: 94%\t(left_x:  455   top_y:   63   width:  184   height:  156)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000409475.jpg: Predicted in 25.704000 milli-seconds.\n",
            "person: 99%\t(left_x:  128   top_y:  142   width:  171   height:  339)\n",
            "person: 99%\t(left_x:  350   top_y:  155   width:  267   height:  326)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000182162.jpg: Predicted in 25.695000 milli-seconds.\n",
            "laptop: 99%\t(left_x:   13   top_y:  228   width:   73   height:   39)\n",
            "remote: 74%\t(left_x:   20   top_y:  270   width:   43   height:   13)\n",
            "sofa: 86%\t(left_x:   30   top_y:  161   width:  260   height:  174)\n",
            "remote: 74%\t(left_x:   60   top_y:  266   width:   27   height:   15)\n",
            "dog: 57%\t(left_x:  102   top_y:  194   width:   98   height:   94)\n",
            "handbag: 57%\t(left_x:  106   top_y:  304   width:   72   height:   78)\n",
            "backpack: 56%\t(left_x:  108   top_y:  303   width:   67   height:   79)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000081061.jpg: Predicted in 25.641000 milli-seconds.\n",
            "chair: 99%\t(left_x:   97   top_y:   60   width:  139   height:  219)\n",
            "sofa: 97%\t(left_x:  203   top_y:   66   width:  411   height:  189)\n",
            "suitcase: 98%\t(left_x:  367   top_y:  236   width:  178   height:   98)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000178744.jpg: Predicted in 25.584000 milli-seconds.\n",
            "boat: 99%\t(left_x:  167   top_y:  163   width:  222   height:  127)\n",
            "person: 53%\t(left_x:  186   top_y:  219   width:    9   height:   14)\n",
            "person: 51%\t(left_x:  187   top_y:  219   width:   10   height:   29)\n",
            "person: 81%\t(left_x:  209   top_y:  222   width:   13   height:   21)\n",
            "person: 57%\t(left_x:  230   top_y:  232   width:    9   height:   15)\n",
            "person: 56%\t(left_x:  239   top_y:  231   width:   10   height:   15)\n",
            "person: 78%\t(left_x:  253   top_y:  227   width:   10   height:   14)\n",
            "person: 51%\t(left_x:  258   top_y:  229   width:    9   height:   12)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000180188.jpg: Predicted in 25.464000 milli-seconds.\n",
            "train: 97%\t(left_x:    5   top_y:  101   width:  647   height:  263)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000458045.jpg: Predicted in 25.553000 milli-seconds.\n",
            "person: 98%\t(left_x:   64   top_y:  133   width:  140   height:  138)\n",
            "person: 96%\t(left_x:   97   top_y:  105   width:   43   height:   98)\n",
            "person: 98%\t(left_x:  194   top_y:  113   width:   42   height:  122)\n",
            "person: 99%\t(left_x:  207   top_y:  175   width:  109   height:   96)\n",
            "car: 53%\t(left_x:  270   top_y:  144   width:   54   height:   54)\n",
            "baseball glove: 98%\t(left_x:  299   top_y:  200   width:   21   height:   25)\n",
            "person: 100%\t(left_x:  367   top_y:  139   width:   92   height:  132)\n",
            "person: 52%\t(left_x:  429   top_y:  109   width:   30   height:  108)\n",
            "baseball bat: 76%\t(left_x:  453   top_y:  172   width:   47   height:   17)\n",
            "person: 67%\t(left_x:  471   top_y:  110   width:   29   height:  110)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000255917.jpg: Predicted in 25.633000 milli-seconds.\n",
            "car: 99%\t(left_x:   50   top_y:  331   width:   79   height:   53)\n",
            "car: 92%\t(left_x:  117   top_y:  330   width:   55   height:   45)\n",
            "car: 79%\t(left_x:  165   top_y:  290   width:   35   height:   31)\n",
            "car: 98%\t(left_x:  174   top_y:  338   width:   78   height:   54)\n",
            "car: 90%\t(left_x:  213   top_y:  319   width:   65   height:   63)\n",
            "car: 68%\t(left_x:  233   top_y:  254   width:   29   height:   28)\n",
            "car: 88%\t(left_x:  269   top_y:  331   width:   33   height:   45)\n",
            "car: 77%\t(left_x:  275   top_y:  324   width:   41   height:   45)\n",
            "car: 83%\t(left_x:  325   top_y:  328   width:   81   height:   33)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000432085.jpg: Predicted in 25.629000 milli-seconds.\n",
            "mouse: 97%\t(left_x:   19   top_y:  218   width:   59   height:   34)\n",
            "bottle: 81%\t(left_x:  112   top_y:  106   width:   50   height:  110)\n",
            "sandwich: 96%\t(left_x:  160   top_y:  179   width:   80   height:   57)\n",
            "sandwich: 97%\t(left_x:  203   top_y:  178   width:   93   height:   60)\n",
            "person: 98%\t(left_x:  209   top_y:    2   width:  288   height:  369)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000107851.jpg: Predicted in 25.380000 milli-seconds.\n",
            "elephant: 97%\t(left_x:    9   top_y:  255   width:   52   height:   50)\n",
            "person: 56%\t(left_x:   12   top_y:  228   width:   20   height:   35)\n",
            "person: 70%\t(left_x:   34   top_y:  228   width:   26   height:   38)\n",
            "elephant: 97%\t(left_x:  212   top_y:  250   width:   45   height:   35)\n",
            "elephant: 96%\t(left_x:  301   top_y:  286   width:  104   height:  178)\n",
            "person: 83%\t(left_x:  317   top_y:  242   width:   44   height:   82)\n",
            "person: 62%\t(left_x:  357   top_y:  237   width:   49   height:   90)\n",
            "elephant: 91%\t(left_x:  399   top_y:  288   width:   35   height:   98)\n",
            "person: 89%\t(left_x:  416   top_y:  255   width:   24   height:   52)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000143998.jpg: Predicted in 25.764000 milli-seconds.\n",
            "carrot: 96%\t(left_x:    9   top_y:    6   width:  416   height:  603)\n",
            "carrot: 72%\t(left_x:   42   top_y:  318   width:  196   height:  286)\n",
            "knife: 89%\t(left_x:  367   top_y:  125   width:  246   height:  210)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000243344.jpg: Predicted in 25.824000 milli-seconds.\n",
            "refrigerator: 96%\t(left_x:  122   top_y:  326   width:  344   height:  312)\n",
            "cat: 95%\t(left_x:  177   top_y:  164   width:  115   height:  188)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000162581.jpg: Predicted in 25.345000 milli-seconds.\n",
            "tennis racket: 98%\t(left_x:  149   top_y:   65   width:   69   height:  112)\n",
            "person: 99%\t(left_x:  155   top_y:  139   width:  170   height:  359)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000070254.jpg: Predicted in 25.720000 milli-seconds.\n",
            "handbag: 79%\t(left_x:   44   top_y:  236   width:   20   height:   44)\n",
            "person: 89%\t(left_x:   55   top_y:  172   width:   66   height:  201)\n",
            "handbag: 95%\t(left_x:   73   top_y:  296   width:   62   height:   78)\n",
            "bench: 68%\t(left_x:  103   top_y:  235   width:   68   height:   84)\n",
            "person: 98%\t(left_x:  118   top_y:  193   width:   79   height:  120)\n",
            "person: 95%\t(left_x:  142   top_y:  134   width:   26   height:  113)\n",
            "bench: 90%\t(left_x:  163   top_y:  200   width:   42   height:   49)\n",
            "person: 99%\t(left_x:  180   top_y:  178   width:   53   height:   69)\n",
            "person: 98%\t(left_x:  209   top_y:  177   width:   31   height:   37)\n",
            "person: 99%\t(left_x:  249   top_y:  152   width:   18   height:   53)\n",
            "train: 100%\t(left_x:  273   top_y:   81   width:  225   height:  226)\n",
            "person: 68%\t(left_x:  420   top_y:  135   width:   34   height:   32)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000127660.jpg: Predicted in 25.869000 milli-seconds.\n",
            "suitcase: 67%\t(left_x:   25   top_y:   28   width:  584   height:  516)\n",
            "person: 77%\t(left_x:   97   top_y:   38   width:  377   height:  386)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000333402.jpg: Predicted in 25.593000 milli-seconds.\n",
            "car: 69%\t(left_x:   -1   top_y:  254   width:   65   height:   39)\n",
            "bus: 100%\t(left_x:  100   top_y:   38   width:  433   height:  341)\n",
            "person: 60%\t(left_x:  191   top_y:  183   width:   42   height:   53)\n",
            "person: 68%\t(left_x:  232   top_y:  174   width:   63   height:   74)\n",
            "person: 99%\t(left_x:  479   top_y:  166   width:   84   height:  228)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000114049.jpg: Predicted in 26.106000 milli-seconds.\n",
            "person: 89%\t(left_x:   58   top_y:  166   width:   70   height:  298)\n",
            "suitcase: 95%\t(left_x:  134   top_y:  347   width:  148   height:  266)\n",
            "backpack: 68%\t(left_x:  152   top_y:  126   width:  107   height:  111)\n",
            "person: 84%\t(left_x:  158   top_y:   88   width:  167   height:  250)\n",
            "suitcase: 88%\t(left_x:  184   top_y:  391   width:  103   height:  246)\n",
            "person: 53%\t(left_x:  279   top_y:  149   width:   54   height:   99)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000513567.jpg: Predicted in 25.479000 milli-seconds.\n",
            "car: 65%\t(left_x:   -0   top_y:  152   width:   25   height:   30)\n",
            "person: 98%\t(left_x:   19   top_y:   84   width:  332   height:  391)\n",
            "hot dog: 98%\t(left_x:  120   top_y:  285   width:  105   height:   68)\n",
            "person: 54%\t(left_x:  272   top_y:  126   width:   13   height:   43)\n",
            "handbag: 53%\t(left_x:  276   top_y:  210   width:   29   height:   46)\n",
            "person: 65%\t(left_x:  284   top_y:  118   width:   16   height:   53)\n",
            "person: 63%\t(left_x:  289   top_y:  100   width:   37   height:  127)\n",
            "person: 88%\t(left_x:  295   top_y:  108   width:   75   height:  232)\n",
            "person: 100%\t(left_x:  330   top_y:    5   width:  292   height:  471)\n",
            "hot dog: 89%\t(left_x:  454   top_y:  153   width:  105   height:   54)\n",
            "person: 91%\t(left_x:  546   top_y:  110   width:   46   height:   74)\n",
            "handbag: 76%\t(left_x:  547   top_y:  321   width:   79   height:  106)\n",
            "person: 71%\t(left_x:  576   top_y:   90   width:   36   height:  111)\n",
            "backpack: 57%\t(left_x:  581   top_y:  117   width:   28   height:   53)\n",
            "person: 96%\t(left_x:  591   top_y:  124   width:   50   height:  181)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000138954.jpg: Predicted in 25.685000 milli-seconds.\n",
            "diningtable: 72%\t(left_x:   21   top_y:   21   width:  567   height:  559)\n",
            "apple: 88%\t(left_x:  303   top_y:  393   width:   66   height:  164)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000253452.jpg: Predicted in 26.096000 milli-seconds.\n",
            "diningtable: 72%\t(left_x:  -17   top_y:   -6   width:  673   height:  440)\n",
            "fork: 79%\t(left_x:   -3   top_y:   71   width:   54   height:  138)\n",
            "cup: 59%\t(left_x:  347   top_y:   -0   width:   82   height:   41)\n",
            "donut: 99%\t(left_x:  364   top_y:   30   width:  103   height:   54)\n",
            "donut: 93%\t(left_x:  373   top_y:   75   width:  100   height:   81)\n",
            "cup: 100%\t(left_x:  445   top_y:  147   width:  195   height:  218)\n",
            "donut: 94%\t(left_x:  454   top_y:   77   width:  129   height:   98)\n",
            "donut: 88%\t(left_x:  460   top_y:   53   width:   71   height:   48)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000056350.jpg: Predicted in 25.769000 milli-seconds.\n",
            "toilet: 68%\t(left_x:  340   top_y:   -1   width:  151   height:  162)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000409424.jpg: Predicted in 27.884000 milli-seconds.\n",
            "orange: 97%\t(left_x:   45   top_y:  264   width:   78   height:   94)\n",
            "apple: 82%\t(left_x:   58   top_y:  348   width:   81   height:   97)\n",
            "orange: 92%\t(left_x:  259   top_y:  360   width:  134   height:  124)\n",
            "apple: 90%\t(left_x:  313   top_y:  275   width:  101   height:  102)\n",
            "apple: 72%\t(left_x:  377   top_y:  370   width:   82   height:   86)\n",
            "orange: 79%\t(left_x:  395   top_y:  327   width:   65   height:   76)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000055002.jpg: Predicted in 25.783000 milli-seconds.\n",
            "toilet: 86%\t(left_x:  122   top_y:    0   width:  210   height:  380)\n",
            "person: 51%\t(left_x:  145   top_y:  323   width:  175   height:   51)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000396274.jpg: Predicted in 25.945000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000266400.jpg: Predicted in 25.307000 milli-seconds.\n",
            "person: 63%\t(left_x:   -0   top_y:   -1   width:   15   height:  142)\n",
            "person: 94%\t(left_x:   38   top_y:    1   width:   38   height:   52)\n",
            "motorbike: 87%\t(left_x:   88   top_y:   39   width:  524   height:  355)\n",
            "motorbike: 77%\t(left_x:  130   top_y:    3   width:  162   height:   64)\n",
            "motorbike: 83%\t(left_x:  130   top_y:   25   width:  178   height:   54)\n",
            "motorbike: 55%\t(left_x:  133   top_y:   40   width:  229   height:   62)\n",
            "motorbike: 58%\t(left_x:  135   top_y:    1   width:  110   height:   31)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000459467.jpg: Predicted in 25.791000 milli-seconds.\n",
            "aeroplane: 95%\t(left_x:  112   top_y:  187   width:  363   height:   68)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000171611.jpg: Predicted in 25.414000 milli-seconds.\n",
            "boat: 93%\t(left_x:   55   top_y:  245   width:  322   height:   79)\n",
            "person: 83%\t(left_x:  158   top_y:  241   width:   35   height:   43)\n",
            "dog: 80%\t(left_x:  326   top_y:  262   width:   31   height:   22)\n",
            "boat: 82%\t(left_x:  342   top_y:   80   width:   74   height:  162)\n",
            "boat: 89%\t(left_x:  494   top_y:   46   width:   88   height:  206)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000036678.jpg: Predicted in 26.201000 milli-seconds.\n",
            "boat: 62%\t(left_x:    3   top_y:  224   width:  266   height:   72)\n",
            "boat: 85%\t(left_x:  417   top_y:  241   width:   91   height:   27)\n",
            "clock: 90%\t(left_x:  444   top_y:  172   width:    8   height:    9)\n",
            "clock: 89%\t(left_x:  455   top_y:  172   width:    7   height:    8)\n",
            "boat: 80%\t(left_x:  501   top_y:  241   width:   78   height:   26)\n",
            "boat: 68%\t(left_x:  588   top_y:  238   width:   41   height:   22)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000227491.jpg: Predicted in 25.694000 milli-seconds.\n",
            "donut: 57%\t(left_x:  139   top_y:  256   width:   28   height:   27)\n",
            "person: 99%\t(left_x:  143   top_y:  161   width:  174   height:  320)\n",
            "bottle: 85%\t(left_x:  309   top_y:  330   width:   27   height:   69)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000290081.jpg: Predicted in 25.559000 milli-seconds.\n",
            "orange: 78%\t(left_x:   -3   top_y:  157   width:  281   height:  235)\n",
            "bowl: 68%\t(left_x:   33   top_y:  336   width:  552   height:  271)\n",
            "orange: 54%\t(left_x:  238   top_y:  324   width:  161   height:  108)\n",
            "orange: 51%\t(left_x:  336   top_y:  185   width:  273   height:  222)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000082085.jpg: Predicted in 25.612000 milli-seconds.\n",
            "person: 97%\t(left_x:    8   top_y:  252   width:   26   height:   38)\n",
            "person: 98%\t(left_x:   70   top_y:  197   width:   37   height:  139)\n",
            "person: 99%\t(left_x:  107   top_y:  225   width:   17   height:   73)\n",
            "train: 99%\t(left_x:  113   top_y:  -13   width:  531   height:  449)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000304560.jpg: Predicted in 25.531000 milli-seconds.\n",
            "cat: 98%\t(left_x:   49   top_y:  100   width:  408   height:  320)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000549167.jpg: Predicted in 25.696000 milli-seconds.\n",
            "diningtable: 55%\t(left_x:  -10   top_y:   43   width:  452   height:  561)\n",
            "broccoli: 79%\t(left_x:  119   top_y:  290   width:  139   height:  114)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000438226.jpg: Predicted in 26.109000 milli-seconds.\n",
            "diningtable: 95%\t(left_x:    1   top_y:   -7   width:  633   height:  309)\n",
            "wine glass: 89%\t(left_x:    1   top_y:    9   width:   63   height:  217)\n",
            "sandwich: 97%\t(left_x:  219   top_y:    6   width:  124   height:  115)\n",
            "sandwich: 86%\t(left_x:  327   top_y:   26   width:  139   height:  128)\n",
            "fork: 89%\t(left_x:  547   top_y:   42   width:   61   height:   75)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000304365.jpg: Predicted in 25.715000 milli-seconds.\n",
            "train: 99%\t(left_x:  242   top_y:  232   width:  163   height:  163)\n",
            "person: 98%\t(left_x:  449   top_y:  309   width:   27   height:   57)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000293300.jpg: Predicted in 25.509000 milli-seconds.\n",
            "elephant: 88%\t(left_x:  123   top_y:  146   width:  137   height:  133)\n",
            "elephant: 91%\t(left_x:  205   top_y:   81   width:  268   height:  221)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000253819.jpg: Predicted in 25.719000 milli-seconds.\n",
            "person: 100%\t(left_x:  193   top_y:    9   width:  274   height:  318)\n",
            "skateboard: 99%\t(left_x:  302   top_y:  244   width:  108   height:  100)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000233238.jpg: Predicted in 25.852000 milli-seconds.\n",
            "bottle: 84%\t(left_x:    5   top_y:  373   width:   43   height:  143)\n",
            "diningtable: 53%\t(left_x:   16   top_y:  256   width:  459   height:  399)\n",
            "person: 87%\t(left_x:   98   top_y:  144   width:   84   height:  147)\n",
            "person: 50%\t(left_x:  116   top_y:  163   width:   53   height:   91)\n",
            "bottle: 99%\t(left_x:  121   top_y:  435   width:   54   height:  197)\n",
            "person: 96%\t(left_x:  140   top_y:  166   width:   99   height:  132)\n",
            "bottle: 65%\t(left_x:  151   top_y:  403   width:   34   height:  151)\n",
            "bottle: 93%\t(left_x:  172   top_y:  462   width:   63   height:  174)\n",
            "bottle: 97%\t(left_x:  238   top_y:  491   width:   64   height:  144)\n",
            "chair: 64%\t(left_x:  259   top_y:  244   width:   51   height:   50)\n",
            "bowl: 66%\t(left_x:  279   top_y:  521   width:   69   height:   49)\n",
            "person: 97%\t(left_x:  339   top_y:  131   width:  141   height:  374)\n",
            "bottle: 98%\t(left_x:  339   top_y:  435   width:   65   height:  166)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000165500.jpg: Predicted in 25.540000 milli-seconds.\n",
            "bear: 96%\t(left_x:  175   top_y:  252   width:   34   height:   28)\n",
            "bear: 93%\t(left_x:  270   top_y:  257   width:   40   height:   28)\n",
            "bear: 98%\t(left_x:  418   top_y:  260   width:   94   height:   49)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000222559.jpg: Predicted in 25.690000 milli-seconds.\n",
            "boat: 95%\t(left_x:   -1   top_y:  141   width:   75   height:   74)\n",
            "person: 88%\t(left_x:   10   top_y:  335   width:   17   height:   20)\n",
            "person: 96%\t(left_x:  175   top_y:  356   width:   19   height:   37)\n",
            "boat: 73%\t(left_x:  230   top_y:  211   width:  100   height:   14)\n",
            "person: 79%\t(left_x:  244   top_y:  376   width:   20   height:   30)\n",
            "person: 65%\t(left_x:  339   top_y:  356   width:   20   height:   33)\n",
            "boat: 52%\t(left_x:  380   top_y:  161   width:   34   height:   42)\n",
            "person: 97%\t(left_x:  404   top_y:  351   width:   14   height:   42)\n",
            "boat: 65%\t(left_x:  422   top_y:  190   width:   14   height:    6)\n",
            "boat: 88%\t(left_x:  452   top_y:  159   width:   40   height:   67)\n",
            "boat: 83%\t(left_x:  577   top_y:  170   width:   24   height:   47)\n",
            "person: 88%\t(left_x:  578   top_y:  302   width:   10   height:   21)\n",
            "person: 98%\t(left_x:  606   top_y:  309   width:   21   height:   24)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000162858.jpg: Predicted in 25.701000 milli-seconds.\n",
            "car: 54%\t(left_x:   -0   top_y:  312   width:   20   height:   39)\n",
            "car: 56%\t(left_x:   -0   top_y:  298   width:   25   height:   39)\n",
            "car: 90%\t(left_x:   -0   top_y:  324   width:   15   height:   51)\n",
            "person: 91%\t(left_x:   20   top_y:  342   width:   20   height:   54)\n",
            "car: 97%\t(left_x:   34   top_y:  339   width:   47   height:   49)\n",
            "car: 94%\t(left_x:   43   top_y:  275   width:   37   height:   32)\n",
            "car: 99%\t(left_x:   49   top_y:  335   width:  157   height:  142)\n",
            "car: 62%\t(left_x:   52   top_y:  325   width:   39   height:   20)\n",
            "car: 81%\t(left_x:  126   top_y:  243   width:   22   height:   22)\n",
            "traffic light: 98%\t(left_x:  149   top_y:  166   width:   13   height:   50)\n",
            "car: 84%\t(left_x:  268   top_y:  329   width:  112   height:  129)\n",
            "traffic light: 97%\t(left_x:  300   top_y:  171   width:   13   height:   37)\n",
            "car: 99%\t(left_x:  302   top_y:  336   width:  121   height:  150)\n",
            "car: 99%\t(left_x:  357   top_y:  334   width:   71   height:  198)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000055299.jpg: Predicted in 25.739000 milli-seconds.\n",
            "umbrella: 61%\t(left_x:   19   top_y:  225   width:   84   height:   52)\n",
            "chair: 80%\t(left_x:   79   top_y:  259   width:   24   height:   17)\n",
            "umbrella: 60%\t(left_x:   93   top_y:  235   width:   30   height:   21)\n",
            "bird: 99%\t(left_x:  432   top_y:  216   width:   44   height:  113)\n",
            "bird: 72%\t(left_x:  613   top_y:  236   width:   12   height:    6)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000492282.jpg: Predicted in 25.701000 milli-seconds.\n",
            "person: 99%\t(left_x:   -1   top_y:  255   width:   47   height:  184)\n",
            "horse: 99%\t(left_x:   49   top_y:  343   width:  239   height:  183)\n",
            "person: 98%\t(left_x:  168   top_y:  240   width:   65   height:  200)\n",
            "horse: 96%\t(left_x:  316   top_y:  303   width:  157   height:  177)\n",
            "person: 91%\t(left_x:  367   top_y:  264   width:   33   height:   64)\n",
            "person: 93%\t(left_x:  377   top_y:  272   width:   52   height:  136)\n",
            "horse: 76%\t(left_x:  421   top_y:  317   width:   59   height:  120)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000532690.jpg: Predicted in 25.628000 milli-seconds.\n",
            "sofa: 87%\t(left_x:    2   top_y:  238   width:  170   height:  411)\n",
            "remote: 75%\t(left_x:   65   top_y:  549   width:   32   height:   46)\n",
            "person: 91%\t(left_x:   81   top_y:   18   width:  408   height:  624)\n",
            "person: 62%\t(left_x:  103   top_y:   -1   width:   51   height:  248)\n",
            "person: 80%\t(left_x:  123   top_y:   -0   width:  260   height:  176)\n",
            "person: 99%\t(left_x:  377   top_y:   -6   width:  150   height:  648)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000188689.jpg: Predicted in 25.658000 milli-seconds.\n",
            "boat: 82%\t(left_x:   38   top_y:   84   width:  261   height:  120)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000248631.jpg: Predicted in 25.987000 milli-seconds.\n",
            "laptop: 99%\t(left_x:   11   top_y:   85   width:  415   height:  366)\n",
            "mouse: 99%\t(left_x:  457   top_y:  284   width:  160   height:  149)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000478286.jpg: Predicted in 26.017000 milli-seconds.\n",
            "train: 65%\t(left_x:  140   top_y:  193   width:  510   height:  127)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000303566.jpg: Predicted in 25.344000 milli-seconds.\n",
            "apple: 53%\t(left_x:   13   top_y:  284   width:   89   height:   57)\n",
            "person: 89%\t(left_x:   21   top_y:   33   width:  131   height:  216)\n",
            "apple: 62%\t(left_x:   37   top_y:  340   width:  149   height:   86)\n",
            "person: 86%\t(left_x:  122   top_y:   51   width:   44   height:  140)\n",
            "person: 85%\t(left_x:  163   top_y:   83   width:   41   height:   87)\n",
            "person: 99%\t(left_x:  200   top_y:   95   width:   49   height:   75)\n",
            "car: 71%\t(left_x:  208   top_y:   86   width:   39   height:   36)\n",
            "person: 97%\t(left_x:  264   top_y:   84   width:   41   height:   80)\n",
            "apple: 91%\t(left_x:  292   top_y:  276   width:  101   height:   63)\n",
            "person: 95%\t(left_x:  299   top_y:   95   width:   40   height:   73)\n",
            "person: 70%\t(left_x:  356   top_y:   85   width:   26   height:   45)\n",
            "apple: 62%\t(left_x:  385   top_y:  277   width:  117   height:   55)\n",
            "person: 51%\t(left_x:  396   top_y:   87   width:   24   height:   37)\n",
            "person: 91%\t(left_x:  427   top_y:   78   width:   48   height:  117)\n",
            "backpack: 75%\t(left_x:  438   top_y:   99   width:   29   height:   56)\n",
            "person: 78%\t(left_x:  464   top_y:   68   width:   49   height:  145)\n",
            "person: 98%\t(left_x:  521   top_y:   79   width:   63   height:  189)\n",
            "person: 99%\t(left_x:  561   top_y:  112   width:   72   height:  163)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000136334.jpg: Predicted in 25.933000 milli-seconds.\n",
            "person: 82%\t(left_x:   75   top_y:  282   width:    9   height:   17)\n",
            "person: 99%\t(left_x:  191   top_y:  277   width:   84   height:  111)\n",
            "skis: 70%\t(left_x:  199   top_y:  381   width:  121   height:   11)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000052591.jpg: Predicted in 25.739000 milli-seconds.\n",
            "person: 100%\t(left_x:   19   top_y:   97   width:  255   height:  514)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000163562.jpg: Predicted in 25.514000 milli-seconds.\n",
            "frisbee: 100%\t(left_x:   90   top_y:  220   width:  105   height:   79)\n",
            "person: 97%\t(left_x:  146   top_y:   -3   width:  320   height:  338)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000352618.jpg: Predicted in 25.705000 milli-seconds.\n",
            "bowl: 88%\t(left_x:   -0   top_y:  140   width:  643   height:  287)\n",
            "orange: 67%\t(left_x:  335   top_y:  187   width:  227   height:  158)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000023937.jpg: Predicted in 25.665000 milli-seconds.\n",
            "cow: 57%\t(left_x:  129   top_y:  106   width:   85   height:   39)\n",
            "cow: 75%\t(left_x:  130   top_y:  106   width:  158   height:   41)\n",
            "cow: 99%\t(left_x:  191   top_y:  207   width:  133   height:   58)\n",
            "cow: 92%\t(left_x:  282   top_y:  111   width:  116   height:   33)\n",
            "cow: 67%\t(left_x:  326   top_y:  110   width:  132   height:   32)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000488673.jpg: Predicted in 25.416000 milli-seconds.\n",
            "person: 96%\t(left_x:   -3   top_y:   56   width:  233   height:  444)\n",
            "bowl: 61%\t(left_x:   23   top_y:  495   width:   31   height:   46)\n",
            "donut: 69%\t(left_x:   46   top_y:  537   width:  147   height:   83)\n",
            "chair: 69%\t(left_x:  149   top_y:  321   width:   40   height:   68)\n",
            "person: 99%\t(left_x:  150   top_y:  192   width:  302   height:  266)\n",
            "cup: 91%\t(left_x:  212   top_y:  575   width:  120   height:   65)\n",
            "cup: 65%\t(left_x:  239   top_y:  445   width:   72   height:  133)\n",
            "wine glass: 83%\t(left_x:  240   top_y:  442   width:   71   height:  136)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000370478.jpg: Predicted in 25.426000 milli-seconds.\n",
            "book: 67%\t(left_x:   77   top_y:   40   width:   58   height:   34)\n",
            "book: 55%\t(left_x:   79   top_y:   56   width:   58   height:   26)\n",
            "book: 74%\t(left_x:   83   top_y:   96   width:   55   height:   22)\n",
            "book: 71%\t(left_x:   84   top_y:   81   width:   51   height:   23)\n",
            "book: 64%\t(left_x:   85   top_y:   72   width:   52   height:   24)\n",
            "laptop: 99%\t(left_x:   92   top_y:  241   width:  154   height:  160)\n",
            "book: 55%\t(left_x:  132   top_y:   39   width:   87   height:   43)\n",
            "book: 51%\t(left_x:  136   top_y:   74   width:   82   height:   23)\n",
            "book: 66%\t(left_x:  137   top_y:   82   width:   77   height:   24)\n",
            "book: 64%\t(left_x:  138   top_y:   93   width:   77   height:   22)\n",
            "backpack: 97%\t(left_x:  244   top_y:  156   width:  147   height:  204)\n",
            "suitcase: 85%\t(left_x:  381   top_y:  169   width:  143   height:  223)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000505565.jpg: Predicted in 25.551000 milli-seconds.\n",
            "bird: 99%\t(left_x:  269   top_y:   99   width:  221   height:  255)\n",
            "bird: 99%\t(left_x:  385   top_y:  101   width:   73   height:  107)\n",
            "bird: 100%\t(left_x:  453   top_y:   51   width:   70   height:  111)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000448810.jpg: Predicted in 25.424000 milli-seconds.\n",
            "person: 91%\t(left_x:   45   top_y:  335   width:   55   height:   40)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000186624.jpg: Predicted in 25.427000 milli-seconds.\n",
            "train: 50%\t(left_x:   -4   top_y:   65   width:  218   height:  418)\n",
            "train: 93%\t(left_x:    3   top_y:    3   width:  626   height:  536)\n",
            "person: 96%\t(left_x:   44   top_y:  282   width:   57   height:  198)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000331280.jpg: Predicted in 25.888000 milli-seconds.\n",
            "person: 78%\t(left_x:   -0   top_y:  109   width:   64   height:   63)\n",
            "person: 56%\t(left_x:    5   top_y:   86   width:   46   height:   49)\n",
            "person: 91%\t(left_x:   13   top_y:  173   width:   75   height:  148)\n",
            "person: 59%\t(left_x:   18   top_y:  274   width:  198   height:   92)\n",
            "horse: 99%\t(left_x:   81   top_y:   71   width:  280   height:  196)\n",
            "person: 59%\t(left_x:  196   top_y:   57   width:   46   height:   41)\n",
            "person: 61%\t(left_x:  244   top_y:   32   width:   67   height:   66)\n",
            "person: 95%\t(left_x:  264   top_y:  189   width:   78   height:  138)\n",
            "person: 71%\t(left_x:  295   top_y:  306   width:  123   height:   60)\n",
            "person: 81%\t(left_x:  305   top_y:   48   width:   58   height:   64)\n",
            "person: 97%\t(left_x:  363   top_y:  107   width:   55   height:   57)\n",
            "person: 81%\t(left_x:  365   top_y:   59   width:   46   height:   60)\n",
            "horse: 52%\t(left_x:  403   top_y:   58   width:   96   height:  205)\n",
            "person: 53%\t(left_x:  404   top_y:   24   width:   50   height:   48)\n",
            "person: 69%\t(left_x:  412   top_y:  236   width:   89   height:  130)\n",
            "person: 96%\t(left_x:  430   top_y:  194   width:   48   height:   85)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000116589.jpg: Predicted in 25.500000 milli-seconds.\n",
            "zebra: 97%\t(left_x:    1   top_y:   74   width:  278   height:  308)\n",
            "zebra: 80%\t(left_x:  260   top_y:   67   width:  187   height:  316)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000420472.jpg: Predicted in 25.488000 milli-seconds.\n",
            "giraffe: 98%\t(left_x:   -7   top_y:   47   width:  336   height:  326)\n",
            "giraffe: 87%\t(left_x:  340   top_y:  208   width:  301   height:  166)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000400922.jpg: Predicted in 25.633000 milli-seconds.\n",
            "clock: 96%\t(left_x:  283   top_y:  287   width:   71   height:   71)\n",
            "aeroplane: 97%\t(left_x:  379   top_y:  125   width:   28   height:   13)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000013597.jpg: Predicted in 25.612000 milli-seconds.\n",
            "diningtable: 71%\t(left_x:   29   top_y:    8   width:  579   height:  414)\n",
            "cake: 61%\t(left_x:   29   top_y:    8   width:  579   height:  414)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000402473.jpg: Predicted in 25.396000 milli-seconds.\n",
            "cat: 96%\t(left_x:   -4   top_y:  156   width:  452   height:  325)\n",
            "cat: 60%\t(left_x:  213   top_y:   90   width:  432   height:  396)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000172617.jpg: Predicted in 26.833000 milli-seconds.\n",
            "book: 66%\t(left_x:   -0   top_y:  158   width:   53   height:   85)\n",
            "book: 63%\t(left_x:    0   top_y:  199   width:   69   height:   96)\n",
            "suitcase: 60%\t(left_x:   30   top_y:  154   width:  130   height:   89)\n",
            "book: 90%\t(left_x:   31   top_y:  192   width:   79   height:   85)\n",
            "suitcase: 59%\t(left_x:   31   top_y:  192   width:   78   height:   84)\n",
            "book: 98%\t(left_x:   44   top_y:  124   width:  105   height:   76)\n",
            "suitcase: 62%\t(left_x:   44   top_y:  125   width:  103   height:   73)\n",
            "book: 85%\t(left_x:   50   top_y:  165   width:  106   height:   63)\n",
            "person: 96%\t(left_x:  112   top_y:   -2   width:  240   height:  401)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000098497.jpg: Predicted in 25.700000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000347456.jpg: Predicted in 25.743000 milli-seconds.\n",
            "elephant: 100%\t(left_x:  383   top_y:  200   width:  123   height:   90)\n",
            "elephant: 100%\t(left_x:  462   top_y:  147   width:  162   height:  134)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000293804.jpg: Predicted in 25.383000 milli-seconds.\n",
            "sofa: 99%\t(left_x:    1   top_y:  184   width:  205   height:  151)\n",
            "pottedplant: 76%\t(left_x:   99   top_y:  164   width:   29   height:   25)\n",
            "sofa: 92%\t(left_x:  256   top_y:  188   width:  243   height:  146)\n",
            "pottedplant: 89%\t(left_x:  288   top_y:  179   width:   27   height:   58)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000179285.jpg: Predicted in 25.509000 milli-seconds.\n",
            "tennis racket: 87%\t(left_x:   26   top_y:    9   width:  384   height:  613)\n",
            "sports ball: 97%\t(left_x:  208   top_y:  236   width:  156   height:  164)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000183391.jpg: Predicted in 25.674000 milli-seconds.\n",
            "person: 59%\t(left_x:   -1   top_y:  272   width:   47   height:   67)\n",
            "chair: 55%\t(left_x:    1   top_y:  249   width:   34   height:   27)\n",
            "person: 54%\t(left_x:   15   top_y:  312   width:   44   height:   62)\n",
            "person: 59%\t(left_x:   33   top_y:  184   width:   51   height:   73)\n",
            "person: 61%\t(left_x:   55   top_y:  308   width:   49   height:   68)\n",
            "chair: 53%\t(left_x:   71   top_y:  196   width:   31   height:   23)\n",
            "chair: 54%\t(left_x:   79   top_y:  221   width:   27   height:   26)\n",
            "person: 75%\t(left_x:   82   top_y:  249   width:   50   height:   59)\n",
            "tennis racket: 98%\t(left_x:   86   top_y:    9   width:  137   height:  120)\n",
            "chair: 79%\t(left_x:   87   top_y:  310   width:   46   height:   28)\n",
            "chair: 55%\t(left_x:  104   top_y:  340   width:   36   height:   33)\n",
            "chair: 91%\t(left_x:  130   top_y:  310   width:   46   height:   29)\n",
            "chair: 51%\t(left_x:  138   top_y:  340   width:   48   height:   33)\n",
            "person: 73%\t(left_x:  210   top_y:   95   width:  284   height:  508)\n",
            "person: 70%\t(left_x:  246   top_y:  317   width:   52   height:   58)\n",
            "person: 57%\t(left_x:  266   top_y:  245   width:   39   height:   66)\n",
            "chair: 69%\t(left_x:  280   top_y:  310   width:   30   height:   27)\n",
            "person: 79%\t(left_x:  298   top_y:  244   width:   48   height:   68)\n",
            "chair: 54%\t(left_x:  314   top_y:  309   width:   40   height:   30)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000109441.jpg: Predicted in 25.600000 milli-seconds.\n",
            "traffic light: 93%\t(left_x:  104   top_y:  275   width:   18   height:   40)\n",
            "traffic light: 86%\t(left_x:  130   top_y:  332   width:   10   height:   25)\n",
            "traffic light: 84%\t(left_x:  196   top_y:  336   width:   10   height:   23)\n",
            "traffic light: 76%\t(left_x:  245   top_y:  284   width:   13   height:   37)\n",
            "traffic light: 63%\t(left_x:  317   top_y:  324   width:   10   height:   23)\n",
            "traffic light: 87%\t(left_x:  353   top_y:  315   width:    9   height:   25)\n",
            "fire hydrant: 85%\t(left_x:  458   top_y:  444   width:   11   height:   19)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000232684.jpg: Predicted in 25.431000 milli-seconds.\n",
            "laptop: 100%\t(left_x:   35   top_y:  169   width:  278   height:  224)\n",
            "person: 89%\t(left_x:  274   top_y:    3   width:  359   height:  408)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000336658.jpg: Predicted in 25.729000 milli-seconds.\n",
            "person: 65%\t(left_x:   17   top_y:  286   width:    7   height:   21)\n",
            "person: 64%\t(left_x:   41   top_y:  287   width:    9   height:   19)\n",
            "person: 76%\t(left_x:   52   top_y:  293   width:    9   height:   25)\n",
            "person: 65%\t(left_x:   59   top_y:  293   width:    8   height:   24)\n",
            "person: 59%\t(left_x:   70   top_y:  300   width:   10   height:   27)\n",
            "car: 51%\t(left_x:   73   top_y:  258   width:   18   height:   10)\n",
            "car: 97%\t(left_x:  134   top_y:  261   width:   39   height:   12)\n",
            "bus: 96%\t(left_x:  403   top_y:  255   width:   75   height:   24)\n",
            "bus: 100%\t(left_x:  458   top_y:  290   width:  118   height:   79)\n",
            "bus: 89%\t(left_x:  584   top_y:  272   width:   50   height:   56)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000480842.jpg: Predicted in 25.802000 milli-seconds.\n",
            "giraffe: 71%\t(left_x:  217   top_y:   21   width:  327   height:  553)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000273132.jpg: Predicted in 25.430000 milli-seconds.\n",
            "person: 93%\t(left_x:   97   top_y:  189   width:  390   height:  412)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000259690.jpg: Predicted in 26.622000 milli-seconds.\n",
            "person: 56%\t(left_x:   24   top_y:  105   width:   49   height:   52)\n",
            "person: 52%\t(left_x:   29   top_y:  134   width:   36   height:   66)\n",
            "person: 79%\t(left_x:   67   top_y:  130   width:   31   height:   72)\n",
            "person: 61%\t(left_x:   71   top_y:  107   width:   31   height:   43)\n",
            "person: 97%\t(left_x:  100   top_y:  128   width:   39   height:   69)\n",
            "person: 95%\t(left_x:  148   top_y:  124   width:   34   height:   75)\n",
            "person: 85%\t(left_x:  172   top_y:  139   width:  165   height:  210)\n",
            "person: 96%\t(left_x:  179   top_y:  122   width:   33   height:   73)\n",
            "person: 58%\t(left_x:  202   top_y:  133   width:   32   height:   58)\n",
            "person: 99%\t(left_x:  291   top_y:   85   width:  135   height:  298)\n",
            "baseball bat: 55%\t(left_x:  373   top_y:  166   width:  111   height:   45)\n",
            "car: 76%\t(left_x:  410   top_y:  129   width:   50   height:   30)\n",
            "car: 51%\t(left_x:  502   top_y:  120   width:   45   height:   31)\n",
            "car: 57%\t(left_x:  573   top_y:  120   width:   46   height:   32)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000210915.jpg: Predicted in 26.577000 milli-seconds.\n",
            "person: 82%\t(left_x:  131   top_y:   86   width:  290   height:  210)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000560371.jpg: Predicted in 26.590000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000568147.jpg: Predicted in 26.594000 milli-seconds.\n",
            "person: 70%\t(left_x:    0   top_y:   29   width:   35   height:   39)\n",
            "parking meter: 97%\t(left_x:  147   top_y:   25   width:  213   height:  409)\n",
            "person: 75%\t(left_x:  223   top_y:   -1   width:   20   height:   31)\n",
            "person: 60%\t(left_x:  235   top_y:   -0   width:   20   height:   31)\n",
            "car: 67%\t(left_x:  303   top_y:   -1   width:   46   height:   29)\n",
            "person: 94%\t(left_x:  384   top_y:   -0   width:   29   height:   35)\n",
            "car: 69%\t(left_x:  398   top_y:   -0   width:   81   height:   29)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000573943.jpg: Predicted in 26.629000 milli-seconds.\n",
            "truck: 83%\t(left_x:   44   top_y:  291   width:   34   height:   34)\n",
            "truck: 52%\t(left_x:   78   top_y:  341   width:   40   height:   37)\n",
            "truck: 61%\t(left_x:   88   top_y:  303   width:   34   height:   39)\n",
            "truck: 69%\t(left_x:  130   top_y:  345   width:   34   height:   35)\n",
            "truck: 51%\t(left_x:  218   top_y:  338   width:   40   height:   36)\n",
            "truck: 54%\t(left_x:  294   top_y:  320   width:   40   height:   26)\n",
            "truck: 58%\t(left_x:  311   top_y:  343   width:   38   height:   41)\n",
            "truck: 82%\t(left_x:  468   top_y:  207   width:   48   height:   39)\n",
            "truck: 87%\t(left_x:  535   top_y:  201   width:   49   height:   40)\n",
            "truck: 70%\t(left_x:  589   top_y:  223   width:   51   height:   42)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000485424.jpg: Predicted in 26.530000 milli-seconds.\n",
            "oven: 89%\t(left_x:  300   top_y:  139   width:  149   height:  105)\n",
            "cup: 98%\t(left_x:  334   top_y:  227   width:   36   height:   31)\n",
            "bottle: 90%\t(left_x:  376   top_y:  305   width:   40   height:   82)\n",
            "bottle: 91%\t(left_x:  409   top_y:  336   width:   32   height:   66)\n",
            "bottle: 66%\t(left_x:  465   top_y:  197   width:   33   height:   58)\n",
            "bottle: 56%\t(left_x:  496   top_y:  203   width:   34   height:   51)\n",
            "bottle: 76%\t(left_x:  523   top_y:  170   width:   26   height:   69)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000442009.jpg: Predicted in 26.516000 milli-seconds.\n",
            "vase: 90%\t(left_x:   46   top_y:  305   width:   35   height:   59)\n",
            "sink: 71%\t(left_x:  578   top_y:  263   width:   23   height:   17)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000005477.jpg: Predicted in 26.626000 milli-seconds.\n",
            "aeroplane: 100%\t(left_x:   20   top_y:  107   width:  608   height:  178)\n",
            "aeroplane: 79%\t(left_x:   46   top_y:  250   width:   88   height:   24)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000463527.jpg: Predicted in 26.648000 milli-seconds.\n",
            "cup: 99%\t(left_x:   -0   top_y:  188   width:  156   height:  187)\n",
            "bottle: 93%\t(left_x:   38   top_y:  110   width:   74   height:   86)\n",
            "bowl: 98%\t(left_x:   73   top_y:   52   width:  181   height:  143)\n",
            "bottle: 100%\t(left_x:  108   top_y:  111   width:   78   height:  141)\n",
            "carrot: 52%\t(left_x:  176   top_y:   81   width:   22   height:   13)\n",
            "sandwich: 90%\t(left_x:  219   top_y:  180   width:  174   height:  152)\n",
            "sandwich: 94%\t(left_x:  313   top_y:  146   width:  159   height:  128)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000385029.jpg: Predicted in 26.451000 milli-seconds.\n",
            "diningtable: 94%\t(left_x:   -6   top_y:    3   width:  637   height:  469)\n",
            "spoon: 75%\t(left_x:   91   top_y:  155   width:   94   height:  135)\n",
            "spoon: 94%\t(left_x:  176   top_y:  163   width:   43   height:  124)\n",
            "bottle: 99%\t(left_x:  248   top_y:   -1   width:   55   height:  168)\n",
            "pizza: 78%\t(left_x:  252   top_y:  238   width:  217   height:  172)\n",
            "wine glass: 99%\t(left_x:  324   top_y:  108   width:   68   height:  120)\n",
            "bottle: 99%\t(left_x:  379   top_y:    1   width:   69   height:  178)\n",
            "wine glass: 94%\t(left_x:  427   top_y:  122   width:   92   height:  135)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000437239.jpg: Predicted in 25.935000 milli-seconds.\n",
            "car: 68%\t(left_x:    5   top_y:  214   width:   18   height:   10)\n",
            "person: 97%\t(left_x:   16   top_y:  130   width:   70   height:  240)\n",
            "frisbee: 93%\t(left_x:   51   top_y:  270   width:   31   height:   27)\n",
            "car: 97%\t(left_x:   67   top_y:  218   width:   21   height:   17)\n",
            "car: 75%\t(left_x:  126   top_y:  216   width:   23   height:   17)\n",
            "person: 100%\t(left_x:  186   top_y:  137   width:   76   height:  244)\n",
            "bench: 78%\t(left_x:  240   top_y:  309   width:  311   height:  112)\n",
            "frisbee: 92%\t(left_x:  322   top_y:  330   width:   37   height:   18)\n",
            "backpack: 97%\t(left_x:  360   top_y:  306   width:   67   height:   54)\n",
            "person: 100%\t(left_x:  485   top_y:  128   width:   77   height:  242)\n",
            "frisbee: 98%\t(left_x:  500   top_y:  212   width:   23   height:   33)\n",
            "person: 99%\t(left_x:  532   top_y:  146   width:  102   height:  231)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000415990.jpg: Predicted in 25.475000 milli-seconds.\n",
            "cow: 99%\t(left_x:    7   top_y:  168   width:   43   height:   52)\n",
            "cow: 76%\t(left_x:   48   top_y:  169   width:   45   height:   24)\n",
            "cow: 71%\t(left_x:   50   top_y:  190   width:   35   height:   33)\n",
            "cow: 93%\t(left_x:   80   top_y:  171   width:   43   height:   56)\n",
            "cow: 90%\t(left_x:  120   top_y:  171   width:   66   height:   52)\n",
            "cow: 98%\t(left_x:  160   top_y:  173   width:   58   height:   57)\n",
            "cow: 87%\t(left_x:  215   top_y:  193   width:   30   height:   35)\n",
            "cow: 96%\t(left_x:  235   top_y:  173   width:   46   height:   58)\n",
            "person: 97%\t(left_x:  297   top_y:  160   width:   36   height:   71)\n",
            "cow: 53%\t(left_x:  332   top_y:  173   width:   41   height:   56)\n",
            "cow: 74%\t(left_x:  334   top_y:  173   width:   90   height:   57)\n",
            "cow: 65%\t(left_x:  391   top_y:  171   width:  101   height:   64)\n",
            "person: 85%\t(left_x:  435   top_y:  166   width:   46   height:   74)\n",
            "cow: 53%\t(left_x:  435   top_y:  166   width:   46   height:   74)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000265518.jpg: Predicted in 25.866000 milli-seconds.\n",
            "diningtable: 60%\t(left_x:  -14   top_y:  -27   width:  639   height:  643)\n",
            "cup: 97%\t(left_x:   56   top_y:   48   width:  158   height:  142)\n",
            "fork: 100%\t(left_x:  100   top_y:  403   width:  286   height:  154)\n",
            "spoon: 64%\t(left_x:  108   top_y:  399   width:  278   height:  158)\n",
            "pizza: 74%\t(left_x:  252   top_y:  193   width:  208   height:  186)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000119641.jpg: Predicted in 25.660000 milli-seconds.\n",
            "elephant: 100%\t(left_x:  115   top_y:  397   width:   72   height:   76)\n",
            "person: 94%\t(left_x:  127   top_y:  353   width:   23   height:   45)\n",
            "person: 90%\t(left_x:  147   top_y:  349   width:   30   height:   52)\n",
            "elephant: 99%\t(left_x:  248   top_y:  392   width:   51   height:   63)\n",
            "person: 87%\t(left_x:  256   top_y:  343   width:   23   height:   41)\n",
            "person: 64%\t(left_x:  264   top_y:  369   width:   17   height:   24)\n",
            "person: 95%\t(left_x:  275   top_y:  344   width:   27   height:   48)\n",
            "elephant: 97%\t(left_x:  292   top_y:  397   width:  113   height:   55)\n",
            "person: 66%\t(left_x:  340   top_y:  373   width:   18   height:   29)\n",
            "person: 85%\t(left_x:  356   top_y:  364   width:   23   height:   37)\n",
            "person: 57%\t(left_x:  384   top_y:  352   width:   18   height:   22)\n",
            "elephant: 86%\t(left_x:  394   top_y:  390   width:   30   height:   54)\n",
            "person: 63%\t(left_x:  498   top_y:  355   width:   17   height:   29)\n",
            "elephant: 99%\t(left_x:  501   top_y:  388   width:   36   height:   49)\n",
            "person: 66%\t(left_x:  517   top_y:  357   width:   16   height:   25)\n",
            "elephant: 99%\t(left_x:  604   top_y:  388   width:   36   height:   43)\n",
            "person: 64%\t(left_x:  611   top_y:  371   width:   12   height:   18)\n",
            "person: 53%\t(left_x:  621   top_y:  359   width:   15   height:   29)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000558421.jpg: Predicted in 25.649000 milli-seconds.\n",
            "train: 68%\t(left_x:  170   top_y:  247   width:  366   height:   99)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000248112.jpg: Predicted in 25.534000 milli-seconds.\n",
            "tennis racket: 97%\t(left_x:  235   top_y:  222   width:   31   height:   31)\n",
            "person: 99%\t(left_x:  257   top_y:  197   width:   47   height:  132)\n",
            "tennis racket: 65%\t(left_x:  599   top_y:  258   width:   26   height:   15)\n",
            "person: 72%\t(left_x:  628   top_y:  216   width:   12   height:   79)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000192964.jpg: Predicted in 25.746000 milli-seconds.\n",
            "skateboard: 99%\t(left_x:   81   top_y:  336   width:  103   height:   51)\n",
            "person: 97%\t(left_x:   93   top_y:   59   width:  193   height:  294)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000166259.jpg: Predicted in 25.201000 milli-seconds.\n",
            "bird: 99%\t(left_x:  155   top_y:  165   width:   80   height:  137)\n",
            "bird: 99%\t(left_x:  232   top_y:  180   width:   82   height:  131)\n",
            "bird: 51%\t(left_x:  295   top_y:  184   width:   48   height:   66)\n",
            "bird: 99%\t(left_x:  296   top_y:  150   width:  111   height:  182)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000190637.jpg: Predicted in 26.117000 milli-seconds.\n",
            "remote: 83%\t(left_x:   18   top_y:  368   width:   64   height:   51)\n",
            "remote: 56%\t(left_x:  311   top_y:  268   width:   64   height:   79)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000444879.jpg: Predicted in 25.699000 milli-seconds.\n",
            "train: 99%\t(left_x:  189   top_y:  180   width:  239   height:  184)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000102644.jpg: Predicted in 25.968000 milli-seconds.\n",
            "toilet: 97%\t(left_x:   36   top_y:  239   width:  134   height:  196)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000232692.jpg: Predicted in 25.477000 milli-seconds.\n",
            "surfboard: 79%\t(left_x:  248   top_y:  188   width:  157   height:   37)\n",
            "person: 100%\t(left_x:  255   top_y:   40   width:  146   height:  169)\n",
            "person: 72%\t(left_x:  419   top_y:   49   width:   41   height:   45)\n",
            "person: 54%\t(left_x:  461   top_y:   37   width:   64   height:   48)\n",
            "person: 75%\t(left_x:  492   top_y:  146   width:   36   height:   26)\n",
            "person: 96%\t(left_x:  584   top_y:   90   width:   37   height:   57)\n",
            "person: 89%\t(left_x:  623   top_y:   90   width:   18   height:   57)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000064359.jpg: Predicted in 25.494000 milli-seconds.\n",
            "giraffe: 100%\t(left_x:  112   top_y:    2   width:  101   height:  152)\n",
            "zebra: 97%\t(left_x:  143   top_y:  122   width:   94   height:   80)\n",
            "giraffe: 76%\t(left_x:  196   top_y:    1   width:  162   height:  148)\n",
            "zebra: 100%\t(left_x:  218   top_y:  113   width:  132   height:  126)\n",
            "giraffe: 96%\t(left_x:  276   top_y:   18   width:  123   height:  131)\n",
            "zebra: 100%\t(left_x:  368   top_y:  154   width:  133   height:   99)\n",
            "giraffe: 95%\t(left_x:  460   top_y:    1   width:   41   height:  165)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000435208.jpg: Predicted in 26.018000 milli-seconds.\n",
            "sofa: 80%\t(left_x:   -3   top_y:  339   width:  200   height:  300)\n",
            "person: 99%\t(left_x:   20   top_y:  304   width:  128   height:  208)\n",
            "chair: 89%\t(left_x:  139   top_y:  315   width:  120   height:  114)\n",
            "laptop: 90%\t(left_x:  165   top_y:  274   width:   56   height:   45)\n",
            "tvmonitor: 98%\t(left_x:  338   top_y:  256   width:   58   height:   49)\n",
            "keyboard: 60%\t(left_x:  340   top_y:  309   width:   59   height:   13)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000561679.jpg: Predicted in 25.567000 milli-seconds.\n",
            "car: 80%\t(left_x:  245   top_y:  322   width:   53   height:   30)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000172571.jpg: Predicted in 25.693000 milli-seconds.\n",
            "pizza: 73%\t(left_x:  101   top_y:  117   width:  425   height:  236)\n",
            "cup: 94%\t(left_x:  180   top_y:   -2   width:   89   height:  135)\n",
            "knife: 79%\t(left_x:  267   top_y:   85   width:   94   height:   62)\n",
            "knife: 72%\t(left_x:  295   top_y:   41   width:  138   height:  164)\n",
            "fork: 51%\t(left_x:  410   top_y:   79   width:  152   height:   35)\n",
            "wine glass: 61%\t(left_x:  489   top_y:    4   width:  125   height:  201)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000295713.jpg: Predicted in 25.833000 milli-seconds.\n",
            "bench: 96%\t(left_x:   46   top_y:  234   width:  206   height:  132)\n",
            "person: 99%\t(left_x:   94   top_y:   68   width:  152   height:  304)\n",
            "person: 84%\t(left_x:  189   top_y:   -1   width:   32   height:   56)\n",
            "person: 71%\t(left_x:  315   top_y:   -0   width:   15   height:   47)\n",
            "bench: 51%\t(left_x:  349   top_y:  247   width:  289   height:  123)\n",
            "handbag: 97%\t(left_x:  374   top_y:  190   width:   78   height:   74)\n",
            "person: 97%\t(left_x:  397   top_y:  106   width:  138   height:  260)\n",
            "cell phone: 86%\t(left_x:  452   top_y:  162   width:   16   height:   11)\n",
            "person: 87%\t(left_x:  528   top_y:   44   width:   27   height:   27)\n",
            "person: 90%\t(left_x:  543   top_y:    0   width:   49   height:   58)\n",
            "person: 90%\t(left_x:  549   top_y:   11   width:   60   height:   59)\n",
            "person: 81%\t(left_x:  600   top_y:   -1   width:   26   height:   48)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000444142.jpg: Predicted in 25.581000 milli-seconds.\n",
            "chair: 85%\t(left_x:   36   top_y:  262   width:   66   height:   25)\n",
            "person: 99%\t(left_x:  103   top_y:   39   width:  166   height:  545)\n",
            "tennis racket: 99%\t(left_x:  107   top_y:   28   width:   65   height:  162)\n",
            "chair: 52%\t(left_x:  253   top_y:    7   width:   46   height:   27)\n",
            "chair: 72%\t(left_x:  283   top_y:   27   width:   53   height:   28)\n",
            "chair: 66%\t(left_x:  304   top_y:   66   width:   50   height:   29)\n",
            "chair: 74%\t(left_x:  325   top_y:  110   width:   53   height:   29)\n",
            "chair: 73%\t(left_x:  328   top_y:   46   width:   51   height:   27)\n",
            "chair: 71%\t(left_x:  347   top_y:   86   width:   53   height:   28)\n",
            "chair: 69%\t(left_x:  348   top_y:   24   width:   49   height:   24)\n",
            "chair: 56%\t(left_x:  365   top_y:  131   width:   55   height:   31)\n",
            "chair: 62%\t(left_x:  370   top_y:   64   width:   49   height:   25)\n",
            "chair: 59%\t(left_x:  390   top_y:   40   width:   38   height:   29)\n",
            "chair: 63%\t(left_x:  392   top_y:  106   width:   36   height:   30)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000383838.jpg: Predicted in 25.633000 milli-seconds.\n",
            "person: 96%\t(left_x:   14   top_y:   -5   width:  462   height:  612)\n",
            "remote: 78%\t(left_x:  278   top_y:  421   width:   87   height:   83)\n",
            "person: 95%\t(left_x:  356   top_y:  290   width:  189   height:  297)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000087144.jpg: Predicted in 25.702000 milli-seconds.\n",
            "person: 99%\t(left_x:   88   top_y:   64   width:  147   height:  321)\n",
            "person: 99%\t(left_x:  227   top_y:  147   width:  112   height:  122)\n",
            "car: 98%\t(left_x:  349   top_y:   33   width:   83   height:   30)\n",
            "person: 100%\t(left_x:  367   top_y:   77   width:  160   height:  311)\n",
            "bench: 54%\t(left_x:  575   top_y:  142   width:   66   height:  206)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000167122.jpg: Predicted in 25.564000 milli-seconds.\n",
            "car: 74%\t(left_x:   27   top_y:  208   width:  592   height:  273)\n",
            "car: 73%\t(left_x:  221   top_y:  201   width:   91   height:   18)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000133819.jpg: Predicted in 25.588000 milli-seconds.\n",
            "person: 71%\t(left_x:   -1   top_y:  212   width:   23   height:   37)\n",
            "person: 82%\t(left_x:   25   top_y:  210   width:   31   height:   42)\n",
            "person: 82%\t(left_x:   45   top_y:  208   width:   20   height:   35)\n",
            "traffic light: 93%\t(left_x:   63   top_y:  117   width:   25   height:   62)\n",
            "person: 64%\t(left_x:   63   top_y:  208   width:   25   height:   74)\n",
            "person: 62%\t(left_x:   93   top_y:  211   width:   11   height:   31)\n",
            "traffic light: 83%\t(left_x:   98   top_y:  134   width:   24   height:   48)\n",
            "person: 96%\t(left_x:  100   top_y:  209   width:   20   height:   68)\n",
            "bus: 100%\t(left_x:  138   top_y:   88   width:  424   height:  266)\n",
            "person: 53%\t(left_x:  461   top_y:  206   width:   30   height:   29)\n",
            "bus: 91%\t(left_x:  475   top_y:  125   width:  157   height:  134)\n",
            "traffic light: 77%\t(left_x:  550   top_y:   -0   width:   36   height:   75)\n",
            "bus: 79%\t(left_x:  614   top_y:  150   width:   26   height:  116)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000403122.jpg: Predicted in 26.093000 milli-seconds.\n",
            "person: 98%\t(left_x:   49   top_y:  205   width:   25   height:   47)\n",
            "person: 98%\t(left_x:  105   top_y:  195   width:   30   height:   57)\n",
            "person: 99%\t(left_x:  140   top_y:  253   width:   77   height:  278)\n",
            "tennis racket: 97%\t(left_x:  191   top_y:  369   width:   95   height:   43)\n",
            "sports ball: 97%\t(left_x:  209   top_y:  395   width:   12   height:   13)\n",
            "person: 82%\t(left_x:  276   top_y:   51   width:   45   height:   49)\n",
            "person: 67%\t(left_x:  314   top_y:  111   width:   34   height:   33)\n",
            "person: 65%\t(left_x:  353   top_y:   57   width:   30   height:   44)\n",
            "person: 64%\t(left_x:  357   top_y:   95   width:   29   height:   38)\n",
            "person: 57%\t(left_x:  381   top_y:   58   width:   35   height:   39)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000003156.jpg: Predicted in 25.789000 milli-seconds.\n",
            "person: 99%\t(left_x:    8   top_y:    4   width:  413   height:  648)\n",
            "toilet: 86%\t(left_x:  264   top_y:  247   width:  181   height:  372)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000268831.jpg: Predicted in 25.808000 milli-seconds.\n",
            "toilet: 74%\t(left_x:   26   top_y:  115   width:   26   height:   34)\n",
            "toilet: 97%\t(left_x:   68   top_y:   96   width:   31   height:   51)\n",
            "sink: 54%\t(left_x:  132   top_y:  152   width:  102   height:   29)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000353180.jpg: Predicted in 25.867000 milli-seconds.\n",
            "person: 99%\t(left_x:   36   top_y:  185   width:  149   height:  227)\n",
            "person: 96%\t(left_x:  127   top_y:  195   width:  116   height:  200)\n",
            "bus: 88%\t(left_x:  193   top_y:   78   width:  252   height:  130)\n",
            "person: 97%\t(left_x:  212   top_y:  172   width:   87   height:  216)\n",
            "person: 97%\t(left_x:  285   top_y:  172   width:   59   height:  213)\n",
            "person: 97%\t(left_x:  333   top_y:  181   width:   69   height:  204)\n",
            "person: 88%\t(left_x:  385   top_y:  185   width:   66   height:  200)\n",
            "person: 96%\t(left_x:  427   top_y:  201   width:   79   height:  184)\n",
            "person: 94%\t(left_x:  474   top_y:  204   width:  111   height:  159)\n",
            "person: 55%\t(left_x:  549   top_y:  110   width:   91   height:  295)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000172977.jpg: Predicted in 26.067000 milli-seconds.\n",
            "zebra: 100%\t(left_x:   47   top_y:   34   width:  476   height:  451)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000151857.jpg: Predicted in 25.748000 milli-seconds.\n",
            "train: 99%\t(left_x:   54   top_y:   37   width:  582   height:  383)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000234807.jpg: Predicted in 25.227000 milli-seconds.\n",
            "horse: 96%\t(left_x:    4   top_y:  237   width:   77   height:   55)\n",
            "horse: 99%\t(left_x:  131   top_y:  221   width:   82   height:  187)\n",
            "horse: 98%\t(left_x:  510   top_y:  167   width:  130   height:  288)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000025603.jpg: Predicted in 25.706000 milli-seconds.\n",
            "diningtable: 72%\t(left_x:   -3   top_y:  253   width:  653   height:  232)\n",
            "cup: 96%\t(left_x:   33   top_y:  406   width:  119   height:   74)\n",
            "pizza: 65%\t(left_x:   57   top_y:  332   width:  192   height:   80)\n",
            "chair: 81%\t(left_x:  115   top_y:  170   width:   57   height:  109)\n",
            "chair: 94%\t(left_x:  180   top_y:  184   width:  125   height:  108)\n",
            "chair: 90%\t(left_x:  247   top_y:  152   width:   73   height:   34)\n",
            "chair: 98%\t(left_x:  257   top_y:  229   width:  167   height:   83)\n",
            "person: 90%\t(left_x:  312   top_y:  108   width:  332   height:  305)\n",
            "cup: 100%\t(left_x:  314   top_y:  312   width:   87   height:  168)\n",
            "chair: 79%\t(left_x:  368   top_y:  140   width:   41   height:  101)\n",
            "chair: 78%\t(left_x:  403   top_y:  150   width:   49   height:  127)\n",
            "book: 76%\t(left_x:  465   top_y:  364   width:  176   height:  116)\n",
            "person: 55%\t(left_x:  488   top_y:   63   width:   27   height:   30)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000401244.jpg: Predicted in 25.537000 milli-seconds.\n",
            "person: 98%\t(left_x:  104   top_y:   64   width:  209   height:  498)\n",
            "frisbee: 99%\t(left_x:  167   top_y:  238   width:  110   height:   51)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000464089.jpg: Predicted in 25.560000 milli-seconds.\n",
            "baseball bat: 78%\t(left_x:   32   top_y:  157   width:   32   height:   61)\n",
            "person: 99%\t(left_x:   36   top_y:   94   width:   67   height:  209)\n",
            "person: 91%\t(left_x:  104   top_y:  129   width:   32   height:   55)\n",
            "person: 99%\t(left_x:  121   top_y:  241   width:  177   height:  239)\n",
            "baseball glove: 99%\t(left_x:  258   top_y:  315   width:   49   height:   71)\n",
            "person: 99%\t(left_x:  324   top_y:  101   width:  165   height:  342)\n",
            "baseball bat: 52%\t(left_x:  340   top_y:   80   width:   65   height:  134)\n",
            "person: 98%\t(left_x:  592   top_y:  104   width:   46   height:  132)\n",
            "sports ball: 99%\t(left_x:  612   top_y:  323   width:   20   height:   17)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000018737.jpg: Predicted in 25.671000 milli-seconds.\n",
            "motorbike: 99%\t(left_x:  246   top_y:  167   width:  346   height:  240)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000199055.jpg: Predicted in 26.209000 milli-seconds.\n",
            "person: 99%\t(left_x:  135   top_y:   39   width:  262   height:  566)\n",
            "skateboard: 100%\t(left_x:  158   top_y:  497   width:  205   height:  115)\n",
            "cell phone: 59%\t(left_x:  275   top_y:   80   width:   20   height:   21)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000498857.jpg: Predicted in 25.391000 milli-seconds.\n",
            "giraffe: 100%\t(left_x:  161   top_y:   89   width:  169   height:  229)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000182611.jpg: Predicted in 26.112000 milli-seconds.\n",
            "oven: 54%\t(left_x:   -1   top_y:  197   width:   50   height:  265)\n",
            "bowl: 56%\t(left_x:   39   top_y:  531   width:   54   height:   35)\n",
            "person: 98%\t(left_x:   41   top_y:   -3   width:  301   height:  448)\n",
            "bowl: 75%\t(left_x:   76   top_y:  554   width:   60   height:   57)\n",
            "bowl: 57%\t(left_x:  116   top_y:  571   width:   64   height:   43)\n",
            "bowl: 89%\t(left_x:  138   top_y:  537   width:   47   height:   41)\n",
            "bowl: 83%\t(left_x:  165   top_y:  594   width:   60   height:   45)\n",
            "bowl: 95%\t(left_x:  191   top_y:  495   width:  146   height:  125)\n",
            "bottle: 77%\t(left_x:  210   top_y:  246   width:   25   height:   51)\n",
            "bowl: 75%\t(left_x:  210   top_y:  615   width:   68   height:   25)\n",
            "bottle: 81%\t(left_x:  233   top_y:  249   width:   22   height:   47)\n",
            "bottle: 53%\t(left_x:  255   top_y:  251   width:   12   height:   33)\n",
            "spoon: 84%\t(left_x:  291   top_y:  569   width:   36   height:   37)\n",
            "person: 70%\t(left_x:  296   top_y:   -9   width:  185   height:  658)\n",
            "bowl: 92%\t(left_x:  318   top_y:  558   width:   97   height:   83)\n",
            "bowl: 59%\t(left_x:  384   top_y:  411   width:   95   height:  102)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000283785.jpg: Predicted in 25.359000 milli-seconds.\n",
            "person: 86%\t(left_x:    5   top_y:  149   width:  100   height:  177)\n",
            "teddy bear: 75%\t(left_x:   48   top_y:  205   width:   44   height:   38)\n",
            "book: 62%\t(left_x:   96   top_y:  186   width:   21   height:   25)\n",
            "person: 97%\t(left_x:  160   top_y:   92   width:   75   height:  234)\n",
            "teddy bear: 61%\t(left_x:  339   top_y:  211   width:   26   height:   53)\n",
            "person: 64%\t(left_x:  341   top_y:  197   width:   44   height:  118)\n",
            "person: 68%\t(left_x:  378   top_y:  203   width:   44   height:  119)\n",
            "person: 68%\t(left_x:  410   top_y:  293   width:   65   height:   37)\n",
            "teddy bear: 52%\t(left_x:  444   top_y:  242   width:   49   height:   63)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000297562.jpg: Predicted in 25.976000 milli-seconds.\n",
            "person: 82%\t(left_x:    7   top_y:  210   width:  429   height:  267)\n",
            "person: 90%\t(left_x:  229   top_y:  100   width:   35   height:   95)\n",
            "chair: 87%\t(left_x:  387   top_y:  306   width:  142   height:  174)\n",
            "person: 85%\t(left_x:  399   top_y:   46   width:   60   height:  199)\n",
            "person: 69%\t(left_x:  453   top_y:  143   width:   29   height:   90)\n",
            "person: 98%\t(left_x:  484   top_y:   38   width:   76   height:  240)\n",
            "person: 97%\t(left_x:  527   top_y:   59   width:  113   height:  371)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000145781.jpg: Predicted in 25.462000 milli-seconds.\n",
            "dog: 80%\t(left_x:   16   top_y:   -5   width:  593   height:  386)\n",
            "bottle: 83%\t(left_x:  312   top_y:  218   width:  333   height:  258)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000493284.jpg: Predicted in 25.623000 milli-seconds.\n",
            "elephant: 82%\t(left_x:   -3   top_y:   36   width:  244   height:  393)\n",
            "elephant: 94%\t(left_x:  150   top_y:  218   width:  160   height:  209)\n",
            "elephant: 97%\t(left_x:  300   top_y:  127   width:  297   height:  305)\n",
            "elephant: 88%\t(left_x:  403   top_y:   55   width:  237   height:  361)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000189310.jpg: Predicted in 25.602000 milli-seconds.\n",
            "chair: 92%\t(left_x:  191   top_y:  350   width:  109   height:  118)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000308391.jpg: Predicted in 25.893000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000164115.jpg: Predicted in 25.287000 milli-seconds.\n",
            "surfboard: 99%\t(left_x:  116   top_y:  199   width:  218   height:  213)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000206487.jpg: Predicted in 25.709000 milli-seconds.\n",
            "bus: 98%\t(left_x:   -1   top_y:  101   width:  452   height:  224)\n",
            "car: 98%\t(left_x:    0   top_y:  240   width:  240   height:  240)\n",
            "car: 52%\t(left_x:  239   top_y:  308   width:   37   height:   13)\n",
            "car: 75%\t(left_x:  408   top_y:  281   width:   58   height:   40)\n",
            "person: 96%\t(left_x:  472   top_y:  196   width:   92   height:  173)\n",
            "motorbike: 98%\t(left_x:  478   top_y:  280   width:   81   height:  131)\n",
            "truck: 79%\t(left_x:  548   top_y:  178   width:   93   height:  294)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000193494.jpg: Predicted in 26.187000 milli-seconds.\n",
            "bed: 92%\t(left_x:   58   top_y:  341   width:  267   height:  247)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000574810.jpg: Predicted in 25.457000 milli-seconds.\n",
            "cat: 95%\t(left_x:   52   top_y:   86   width:  236   height:  396)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000301867.jpg: Predicted in 26.179000 milli-seconds.\n",
            "handbag: 93%\t(left_x:  120   top_y:  172   width:   78   height:  166)\n",
            "person: 95%\t(left_x:  143   top_y:  109   width:  127   height:  375)\n",
            "handbag: 60%\t(left_x:  195   top_y:  179   width:   64   height:  142)\n",
            "umbrella: 52%\t(left_x:  211   top_y:   37   width:  238   height:  158)\n",
            "person: 99%\t(left_x:  248   top_y:  106   width:  142   height:  379)\n",
            "person: 97%\t(left_x:  343   top_y:  117   width:  164   height:  360)\n",
            "handbag: 97%\t(left_x:  426   top_y:  183   width:  109   height:  150)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000368684.jpg: Predicted in 25.524000 milli-seconds.\n",
            "laptop: 76%\t(left_x:    5   top_y:  287   width:  352   height:  193)\n",
            "book: 64%\t(left_x:   15   top_y:  240   width:   21   height:   63)\n",
            "book: 78%\t(left_x:   18   top_y:  160   width:   66   height:   58)\n",
            "book: 67%\t(left_x:   29   top_y:  237   width:   20   height:   61)\n",
            "book: 60%\t(left_x:   48   top_y:  232   width:   25   height:   56)\n",
            "book: 79%\t(left_x:   81   top_y:  227   width:   31   height:   59)\n",
            "chair: 98%\t(left_x:  155   top_y:  136   width:  181   height:  197)\n",
            "tvmonitor: 96%\t(left_x:  449   top_y:    9   width:  192   height:  196)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000300155.jpg: Predicted in 25.765000 milli-seconds.\n",
            "bird: 97%\t(left_x:  266   top_y:  155   width:  183   height:  200)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000382125.jpg: Predicted in 26.045000 milli-seconds.\n",
            "diningtable: 59%\t(left_x:   -1   top_y:  240   width:   57   height:   83)\n",
            "person: 57%\t(left_x:    0   top_y:  157   width:   32   height:   84)\n",
            "chair: 59%\t(left_x:    0   top_y:  316   width:   47   height:  164)\n",
            "cup: 74%\t(left_x:    1   top_y:  220   width:   19   height:   24)\n",
            "person: 99%\t(left_x:    6   top_y:  118   width:  342   height:  356)\n",
            "cup: 71%\t(left_x:   30   top_y:  218   width:   18   height:   25)\n",
            "person: 88%\t(left_x:   35   top_y:  155   width:  115   height:  155)\n",
            "chair: 74%\t(left_x:   70   top_y:  229   width:   84   height:   60)\n",
            "person: 84%\t(left_x:  118   top_y:  163   width:   43   height:   72)\n",
            "chair: 84%\t(left_x:  152   top_y:  222   width:   26   height:   32)\n",
            "cup: 83%\t(left_x:  173   top_y:  461   width:   84   height:   19)\n",
            "pizza: 98%\t(left_x:  193   top_y:  338   width:  111   height:   72)\n",
            "person: 60%\t(left_x:  293   top_y:  178   width:   65   height:  168)\n",
            "person: 99%\t(left_x:  351   top_y:  103   width:  280   height:  363)\n",
            "person: 61%\t(left_x:  363   top_y:  202   width:   52   height:   73)\n",
            "cup: 91%\t(left_x:  407   top_y:  426   width:   70   height:   54)\n",
            "cup: 98%\t(left_x:  492   top_y:  411   width:  117   height:   70)\n",
            "person: 91%\t(left_x:  500   top_y:  153   width:  127   height:  189)\n",
            "person: 95%\t(left_x:  582   top_y:  176   width:   59   height:   98)\n",
            "chair: 59%\t(left_x:  617   top_y:  336   width:   23   height:  128)\n",
            "chair: 75%\t(left_x:  618   top_y:  263   width:   23   height:   72)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000313562.jpg: Predicted in 25.581000 milli-seconds.\n",
            "person: 54%\t(left_x:   19   top_y:   53   width:   33   height:  103)\n",
            "person: 99%\t(left_x:   25   top_y:  105   width:   90   height:  208)\n",
            "person: 98%\t(left_x:  286   top_y:   57   width:  347   height:  412)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000061333.jpg: Predicted in 25.701000 milli-seconds.\n",
            "cat: 100%\t(left_x:    7   top_y:  110   width:  279   height:  212)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000025096.jpg: Predicted in 25.710000 milli-seconds.\n",
            "person: 91%\t(left_x:   -4   top_y:   38   width:  214   height:  260)\n",
            "diningtable: 53%\t(left_x:    5   top_y:  265   width:  367   height:  226)\n",
            "knife: 68%\t(left_x:   33   top_y:  310   width:  110   height:   69)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000017905.jpg: Predicted in 25.896000 milli-seconds.\n",
            "person: 100%\t(left_x:   79   top_y:  227   width:  126   height:  374)\n",
            "traffic light: 96%\t(left_x:  204   top_y:  110   width:  101   height:  199)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000185250.jpg: Predicted in 25.526000 milli-seconds.\n",
            "person: 99%\t(left_x:  115   top_y:  196   width:  103   height:  291)\n",
            "frisbee: 96%\t(left_x:  123   top_y:  364   width:   10   height:   37)\n",
            "frisbee: 99%\t(left_x:  126   top_y:   62   width:   38   height:   41)\n",
            "dog: 99%\t(left_x:  166   top_y:  389   width:  114   height:  177)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000032610.jpg: Predicted in 25.648000 milli-seconds.\n",
            "laptop: 100%\t(left_x:   61   top_y:   80   width:  179   height:  177)\n",
            "backpack: 89%\t(left_x:   66   top_y:  214   width:  284   height:  216)\n",
            "laptop: 87%\t(left_x:  156   top_y:   14   width:  133   height:  138)\n",
            "laptop: 94%\t(left_x:  246   top_y:   90   width:  132   height:  129)\n",
            "laptop: 96%\t(left_x:  299   top_y:   20   width:  160   height:   84)\n",
            "laptop: 97%\t(left_x:  305   top_y:  118   width:  149   height:  136)\n",
            "laptop: 90%\t(left_x:  386   top_y:   72   width:  152   height:  136)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000577584.jpg: Predicted in 25.651000 milli-seconds.\n",
            "microwave: 79%\t(left_x:  147   top_y:  154   width:  202   height:  194)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000312237.jpg: Predicted in 25.562000 milli-seconds.\n",
            "person: 57%\t(left_x:   24   top_y:  241   width:    8   height:   13)\n",
            "person: 68%\t(left_x:  212   top_y:  221   width:    8   height:   19)\n",
            "person: 99%\t(left_x:  328   top_y:  176   width:   24   height:   67)\n",
            "person: 72%\t(left_x:  387   top_y:  200   width:   35   height:   36)\n",
            "person: 56%\t(left_x:  393   top_y:  190   width:   38   height:   45)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000294783.jpg: Predicted in 25.523000 milli-seconds.\n",
            "bed: 93%\t(left_x:   12   top_y:  297   width:  290   height:  130)\n",
            "book: 50%\t(left_x:  573   top_y:  252   width:    8   height:   22)\n",
            "book: 62%\t(left_x:  588   top_y:  250   width:   11   height:   24)\n",
            "book: 55%\t(left_x:  595   top_y:  291   width:   15   height:   21)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000331604.jpg: Predicted in 26.431000 milli-seconds.\n",
            "surfboard: 99%\t(left_x:  265   top_y:  171   width:  110   height:  139)\n",
            "person: 99%\t(left_x:  295   top_y:  150   width:   70   height:  140)\n",
            "kite: 53%\t(left_x:  615   top_y:  263   width:   14   height:   16)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000563349.jpg: Predicted in 25.846000 milli-seconds.\n",
            "person: 98%\t(left_x:  185   top_y:  246   width:  186   height:  166)\n",
            "snowboard: 98%\t(left_x:  359   top_y:  299   width:   33   height:  144)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000173008.jpg: Predicted in 25.609000 milli-seconds.\n",
            "bowl: 61%\t(left_x:    1   top_y:  411   width:  171   height:   71)\n",
            "person: 99%\t(left_x:  247   top_y:   65   width:  270   height:  411)\n",
            "banana: 66%\t(left_x:  260   top_y:  193   width:   53   height:  103)\n",
            "microwave: 80%\t(left_x:  344   top_y:   92   width:   95   height:  106)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000218424.jpg: Predicted in 25.656000 milli-seconds.\n",
            "zebra: 99%\t(left_x:   82   top_y:  109   width:  215   height:  307)\n",
            "zebra: 68%\t(left_x:  241   top_y:  119   width:  216   height:  275)\n",
            "zebra: 87%\t(left_x:  399   top_y:   76   width:  132   height:  325)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000212895.jpg: Predicted in 25.790000 milli-seconds.\n",
            "giraffe: 98%\t(left_x:  187   top_y:   10   width:  108   height:  638)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000552371.jpg: Predicted in 25.653000 milli-seconds.\n",
            "horse: 94%\t(left_x:  289   top_y:   -2   width:  336   height:  434)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000110972.jpg: Predicted in 25.610000 milli-seconds.\n",
            "bear: 99%\t(left_x:   69   top_y:   13   width:  452   height:  404)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000468505.jpg: Predicted in 25.549000 milli-seconds.\n",
            "diningtable: 51%\t(left_x:   66   top_y:  202   width:  517   height:  276)\n",
            "person: 98%\t(left_x:  127   top_y:   61   width:  316   height:  187)\n",
            "hot dog: 83%\t(left_x:  149   top_y:  280   width:   38   height:   35)\n",
            "hot dog: 85%\t(left_x:  167   top_y:  222   width:   47   height:   25)\n",
            "bottle: 59%\t(left_x:  241   top_y:  213   width:   14   height:   60)\n",
            "cup: 99%\t(left_x:  247   top_y:  236   width:   31   height:   61)\n",
            "hot dog: 97%\t(left_x:  253   top_y:  299   width:   45   height:   41)\n",
            "cup: 98%\t(left_x:  263   top_y:  196   width:   28   height:   36)\n",
            "bottle: 86%\t(left_x:  319   top_y:  212   width:   19   height:   67)\n",
            "bottle: 97%\t(left_x:  329   top_y:  228   width:   22   height:   63)\n",
            "hot dog: 75%\t(left_x:  368   top_y:  292   width:   50   height:   26)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000529528.jpg: Predicted in 26.072000 milli-seconds.\n",
            "bowl: 66%\t(left_x:   32   top_y:  128   width:  235   height:  209)\n",
            "remote: 55%\t(left_x:  390   top_y:   39   width:  109   height:  118)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000469246.jpg: Predicted in 25.427000 milli-seconds.\n",
            "person: 63%\t(left_x:  113   top_y:  239   width:    7   height:   19)\n",
            "train: 99%\t(left_x:  132   top_y:   -6   width:  523   height:  490)\n",
            "suitcase: 70%\t(left_x:  136   top_y:  281   width:   18   height:   23)\n",
            "person: 99%\t(left_x:  147   top_y:  234   width:   34   height:   67)\n",
            "person: 51%\t(left_x:  172   top_y:  232   width:    8   height:   22)\n",
            "person: 68%\t(left_x:  183   top_y:  237   width:   13   height:   33)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000345261.jpg: Predicted in 25.599000 milli-seconds.\n",
            "giraffe: 100%\t(left_x:  138   top_y:  339   width:  105   height:  227)\n",
            "giraffe: 99%\t(left_x:  333   top_y:  335   width:  106   height:  237)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000180792.jpg: Predicted in 25.379000 milli-seconds.\n",
            "toilet: 97%\t(left_x:  132   top_y:  316   width:  100   height:  184)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000281032.jpg: Predicted in 26.152000 milli-seconds.\n",
            "person: 99%\t(left_x:  214   top_y:   55   width:  334   height:  377)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000238410.jpg: Predicted in 25.757000 milli-seconds.\n",
            "chair: 58%\t(left_x:    2   top_y:  239   width:  173   height:  203)\n",
            "person: 91%\t(left_x:   17   top_y:  197   width:  251   height:  240)\n",
            "person: 59%\t(left_x:   62   top_y:  190   width:  203   height:  156)\n",
            "wine glass: 85%\t(left_x:   94   top_y:  362   width:   39   height:   70)\n",
            "wine glass: 68%\t(left_x:  122   top_y:  261   width:   24   height:   47)\n",
            "chair: 78%\t(left_x:  157   top_y:  172   width:  124   height:  120)\n",
            "person: 65%\t(left_x:  164   top_y:  167   width:  113   height:  111)\n",
            "pottedplant: 52%\t(left_x:  260   top_y:  125   width:   42   height:   63)\n",
            "person: 89%\t(left_x:  293   top_y:  173   width:   69   height:   97)\n",
            "bottle: 54%\t(left_x:  303   top_y:  250   width:   15   height:   41)\n",
            "cup: 60%\t(left_x:  320   top_y:  356   width:   26   height:   53)\n",
            "person: 78%\t(left_x:  329   top_y:  290   width:  314   height:  188)\n",
            "chair: 50%\t(left_x:  351   top_y:  154   width:   61   height:   88)\n",
            "umbrella: 67%\t(left_x:  354   top_y:    4   width:   59   height:  228)\n",
            "person: 98%\t(left_x:  360   top_y:  186   width:  146   height:  156)\n",
            "person: 76%\t(left_x:  374   top_y:  207   width:  234   height:  211)\n",
            "chair: 91%\t(left_x:  382   top_y:  175   width:   84   height:   70)\n",
            "wine glass: 82%\t(left_x:  456   top_y:  285   width:   27   height:   54)\n",
            "wine glass: 58%\t(left_x:  457   top_y:  283   width:   26   height:   32)\n",
            "wine glass: 81%\t(left_x:  486   top_y:  313   width:   42   height:   88)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000237517.jpg: Predicted in 25.766000 milli-seconds.\n",
            "diningtable: 83%\t(left_x:   -3   top_y:  302   width:  487   height:  312)\n",
            "bowl: 50%\t(left_x:    0   top_y:  272   width:  164   height:  233)\n",
            "chair: 95%\t(left_x:   36   top_y:  182   width:  197   height:  132)\n",
            "knife: 98%\t(left_x:   48   top_y:  478   width:  271   height:   66)\n",
            "spoon: 89%\t(left_x:  170   top_y:  261   width:   39   height:   83)\n",
            "bowl: 99%\t(left_x:  288   top_y:  308   width:  118   height:   77)\n",
            "bowl: 99%\t(left_x:  333   top_y:  389   width:  145   height:  130)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000579655.jpg: Predicted in 25.223000 milli-seconds.\n",
            "cup: 51%\t(left_x:    0   top_y:  124   width:   21   height:   72)\n",
            "cup: 57%\t(left_x:    7   top_y:  125   width:   35   height:   70)\n",
            "cup: 70%\t(left_x:    8   top_y:  242   width:   40   height:   68)\n",
            "cup: 72%\t(left_x:   21   top_y:  125   width:   39   height:   69)\n",
            "cup: 59%\t(left_x:   60   top_y:  245   width:   42   height:   64)\n",
            "cup: 96%\t(left_x:   61   top_y:  118   width:   48   height:   77)\n",
            "cup: 75%\t(left_x:  107   top_y:  117   width:   47   height:   78)\n",
            "cup: 66%\t(left_x:  111   top_y:  236   width:   37   height:   72)\n",
            "cup: 60%\t(left_x:  121   top_y:  118   width:   53   height:   75)\n",
            "bowl: 93%\t(left_x:  160   top_y:   17   width:   92   height:   53)\n",
            "person: 98%\t(left_x:  162   top_y:  -16   width:  457   height:  425)\n",
            "cup: 83%\t(left_x:  182   top_y:  116   width:   48   height:   72)\n",
            "cup: 71%\t(left_x:  228   top_y:  123   width:   42   height:   62)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000378284.jpg: Predicted in 26.081000 milli-seconds.\n",
            "diningtable: 80%\t(left_x:   19   top_y:   70   width:  601   height:  371)\n",
            "pizza: 58%\t(left_x:   75   top_y:  103   width:  425   height:  234)\n",
            "person: 92%\t(left_x:   95   top_y:    1   width:  451   height:  114)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000475678.jpg: Predicted in 25.476000 milli-seconds.\n",
            "suitcase: 84%\t(left_x:   -1   top_y:  139   width:   81   height:  311)\n",
            "suitcase: 98%\t(left_x:   33   top_y:  155   width:  154   height:  282)\n",
            "suitcase: 86%\t(left_x:   65   top_y:   25   width:   95   height:   72)\n",
            "suitcase: 83%\t(left_x:   97   top_y:   70   width:  106   height:  106)\n",
            "suitcase: 98%\t(left_x:  158   top_y:  151   width:  152   height:  322)\n",
            "suitcase: 86%\t(left_x:  194   top_y:   63   width:  111   height:  115)\n",
            "suitcase: 66%\t(left_x:  295   top_y:   26   width:  112   height:  133)\n",
            "suitcase: 97%\t(left_x:  304   top_y:  128   width:  141   height:  286)\n",
            "suitcase: 97%\t(left_x:  418   top_y:   96   width:  202   height:  358)\n",
            "suitcase: 94%\t(left_x:  540   top_y:   97   width:  101   height:  343)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000334483.jpg: Predicted in 25.589000 milli-seconds.\n",
            "person: 94%\t(left_x:   -1   top_y:   99   width:  234   height:  318)\n",
            "handbag: 52%\t(left_x:   30   top_y:  376   width:  156   height:   64)\n",
            "person: 66%\t(left_x:   34   top_y:  495   width:  209   height:  146)\n",
            "diningtable: 59%\t(left_x:   35   top_y:  339   width:  450   height:  303)\n",
            "person: 94%\t(left_x:   95   top_y:  138   width:  138   height:  210)\n",
            "fork: 66%\t(left_x:  166   top_y:  421   width:   27   height:   41)\n",
            "fork: 65%\t(left_x:  168   top_y:  417   width:   50   height:  115)\n",
            "cake: 52%\t(left_x:  194   top_y:  496   width:   37   height:   43)\n",
            "person: 99%\t(left_x:  233   top_y:   89   width:  162   height:  271)\n",
            "cake: 95%\t(left_x:  239   top_y:  502   width:   36   height:   37)\n",
            "cake: 51%\t(left_x:  248   top_y:  367   width:   56   height:   22)\n",
            "cake: 84%\t(left_x:  264   top_y:  600   width:   62   height:   40)\n",
            "cake: 90%\t(left_x:  324   top_y:  364   width:  145   height:  100)\n",
            "cake: 74%\t(left_x:  368   top_y:  515   width:   82   height:   54)\n",
            "person: 62%\t(left_x:  440   top_y:  141   width:   40   height:  213)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000379800.jpg: Predicted in 25.623000 milli-seconds.\n",
            "car: 85%\t(left_x:  136   top_y:  307   width:   33   height:   28)\n",
            "train: 99%\t(left_x:  217   top_y:  122   width:  297   height:  287)\n",
            "car: 97%\t(left_x:  562   top_y:  318   width:   77   height:   56)\n",
            "stop sign: 100%\t(left_x:  569   top_y:  236   width:   36   height:   36)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000060449.jpg: Predicted in 25.996000 milli-seconds.\n",
            "diningtable: 51%\t(left_x:   -2   top_y:  404   width:  266   height:  238)\n",
            "laptop: 99%\t(left_x:   50   top_y:  345   width:  196   height:  125)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000230362.jpg: Predicted in 25.577000 milli-seconds.\n",
            "boat: 52%\t(left_x:  121   top_y:  321   width:   43   height:   22)\n",
            "boat: 59%\t(left_x:  285   top_y:  311   width:   64   height:   29)\n",
            "boat: 57%\t(left_x:  286   top_y:  171   width:   68   height:  170)\n",
            "boat: 70%\t(left_x:  334   top_y:  313   width:   80   height:   38)\n",
            "boat: 71%\t(left_x:  486   top_y:  322   width:  133   height:   43)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000316054.jpg: Predicted in 25.610000 milli-seconds.\n",
            "train: 91%\t(left_x:    1   top_y:  234   width:   87   height:   48)\n",
            "train: 95%\t(left_x:   95   top_y:  243   width:   24   height:   34)\n",
            "person: 96%\t(left_x:  118   top_y:  257   width:   12   height:   30)\n",
            "train: 98%\t(left_x:  156   top_y:  199   width:  247   height:   94)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000287649.jpg: Predicted in 25.611000 milli-seconds.\n",
            "keyboard: 95%\t(left_x:   19   top_y:  409   width:  605   height:   70)\n",
            "cat: 92%\t(left_x:  151   top_y:   22   width:  476   height:  390)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000414795.jpg: Predicted in 25.459000 milli-seconds.\n",
            "elephant: 83%\t(left_x:    2   top_y:  355   width:  193   height:   86)\n",
            "person: 91%\t(left_x:   53   top_y:  412   width:   68   height:   68)\n",
            "elephant: 77%\t(left_x:   54   top_y:  -11   width:  589   height:  542)\n",
            "elephant: 87%\t(left_x:   75   top_y:  269   width:  215   height:  100)\n",
            "person: 92%\t(left_x:   97   top_y:  146   width:   38   height:   71)\n",
            "person: 92%\t(left_x:  107   top_y:  412   width:  104   height:   69)\n",
            "elephant: 98%\t(left_x:  111   top_y:   84   width:  120   height:   92)\n",
            "elephant: 80%\t(left_x:  123   top_y:  198   width:  165   height:   66)\n",
            "elephant: 78%\t(left_x:  173   top_y:  214   width:  148   height:   55)\n",
            "elephant: 62%\t(left_x:  183   top_y:  341   width:  220   height:  104)\n",
            "person: 99%\t(left_x:  216   top_y:  341   width:  124   height:  138)\n",
            "elephant: 82%\t(left_x:  254   top_y:  239   width:  173   height:   91)\n",
            "elephant: 87%\t(left_x:  264   top_y:  307   width:  171   height:  103)\n",
            "elephant: 65%\t(left_x:  327   top_y:  219   width:  165   height:   71)\n",
            "elephant: 72%\t(left_x:  336   top_y:   98   width:   73   height:   50)\n",
            "person: 98%\t(left_x:  344   top_y:  368   width:   96   height:  112)\n",
            "elephant: 51%\t(left_x:  362   top_y:   66   width:   34   height:   39)\n",
            "elephant: 56%\t(left_x:  394   top_y:   80   width:   62   height:   39)\n",
            "elephant: 76%\t(left_x:  412   top_y:  296   width:  203   height:  108)\n",
            "elephant: 93%\t(left_x:  413   top_y:   98   width:  103   height:   42)\n",
            "elephant: 58%\t(left_x:  424   top_y:   16   width:   48   height:   34)\n",
            "elephant: 82%\t(left_x:  426   top_y:  137   width:  119   height:   56)\n",
            "elephant: 63%\t(left_x:  456   top_y:  209   width:  112   height:   68)\n",
            "elephant: 66%\t(left_x:  499   top_y:  242   width:  109   height:   43)\n",
            "elephant: 68%\t(left_x:  518   top_y:  311   width:  121   height:  155)\n",
            "person: 96%\t(left_x:  532   top_y:  402   width:   99   height:   78)\n",
            "elephant: 82%\t(left_x:  546   top_y:   33   width:   57   height:   59)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000172877.jpg: Predicted in 25.741000 milli-seconds.\n",
            "person: 95%\t(left_x:   86   top_y:   54   width:  464   height:  441)\n",
            "bottle: 67%\t(left_x:  578   top_y:  121   width:   33   height:   52)\n",
            "bottle: 86%\t(left_x:  612   top_y:   92   width:   28   height:   62)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000572956.jpg: Predicted in 25.509000 milli-seconds.\n",
            "motorbike: 99%\t(left_x:    4   top_y:    1   width:  234   height:  325)\n",
            "motorbike: 95%\t(left_x:  154   top_y:   14   width:  211   height:  306)\n",
            "motorbike: 64%\t(left_x:  295   top_y:    3   width:  125   height:  255)\n",
            "motorbike: 83%\t(left_x:  344   top_y:   26   width:  117   height:  214)\n",
            "motorbike: 80%\t(left_x:  400   top_y:   86   width:   74   height:  121)\n",
            "motorbike: 76%\t(left_x:  440   top_y:   88   width:   60   height:  108)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000500049.jpg: Predicted in 25.459000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000058384.jpg: Predicted in 26.000000 milli-seconds.\n",
            "train: 60%\t(left_x:    0   top_y:  176   width:  213   height:   48)\n",
            "elephant: 99%\t(left_x:  273   top_y:  189   width:   40   height:   80)\n",
            "elephant: 96%\t(left_x:  307   top_y:  207   width:   31   height:   62)\n",
            "elephant: 100%\t(left_x:  328   top_y:  179   width:   56   height:   90)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000472678.jpg: Predicted in 25.542000 milli-seconds.\n",
            "bottle: 78%\t(left_x:  126   top_y:  288   width:   30   height:   83)\n",
            "tvmonitor: 88%\t(left_x:  140   top_y:  147   width:  177   height:  142)\n",
            "keyboard: 97%\t(left_x:  153   top_y:  333   width:  157   height:   29)\n",
            "book: 54%\t(left_x:  237   top_y:  355   width:  102   height:   40)\n",
            "tvmonitor: 94%\t(left_x:  310   top_y:  158   width:  163   height:  135)\n",
            "mouse: 99%\t(left_x:  493   top_y:  377   width:   42   height:   25)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000062808.jpg: Predicted in 25.816000 milli-seconds.\n",
            "person: 96%\t(left_x:    7   top_y:   19   width:  265   height:  391)\n",
            "pizza: 99%\t(left_x:  144   top_y:  277   width:  354   height:  149)\n",
            "chair: 84%\t(left_x:  230   top_y:  199   width:   55   height:   38)\n",
            "bottle: 71%\t(left_x:  240   top_y:  167   width:   16   height:   31)\n",
            "diningtable: 78%\t(left_x:  254   top_y:  236   width:  115   height:   40)\n",
            "chair: 80%\t(left_x:  335   top_y:  193   width:   56   height:   42)\n",
            "person: 98%\t(left_x:  356   top_y:   13   width:  282   height:  362)\n",
            "cell phone: 99%\t(left_x:  475   top_y:  111   width:   87   height:   45)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000296657.jpg: Predicted in 25.718000 milli-seconds.\n",
            "person: 99%\t(left_x:   58   top_y:  138   width:  130   height:  125)\n",
            "person: 86%\t(left_x:  154   top_y:  142   width:   89   height:  127)\n",
            "person: 99%\t(left_x:  163   top_y:   83   width:  175   height:  253)\n",
            "tie: 97%\t(left_x:  278   top_y:  121   width:   23   height:   63)\n",
            "person: 83%\t(left_x:  289   top_y:  156   width:   49   height:  171)\n",
            "person: 97%\t(left_x:  341   top_y:  129   width:   90   height:  198)\n",
            "person: 100%\t(left_x:  432   top_y:  105   width:  163   height:  221)\n",
            "tie: 92%\t(left_x:  500   top_y:  138   width:   26   height:   46)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000459195.jpg: Predicted in 25.527000 milli-seconds.\n",
            "person: 100%\t(left_x:  137   top_y:   82   width:   86   height:  236)\n",
            "person: 100%\t(left_x:  228   top_y:   83   width:   84   height:  257)\n",
            "frisbee: 99%\t(left_x:  255   top_y:  222   width:   32   height:   27)\n",
            "person: 100%\t(left_x:  298   top_y:   83   width:  103   height:  246)\n",
            "frisbee: 99%\t(left_x:  320   top_y:  192   width:   38   height:   24)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000375430.jpg: Predicted in 26.198000 milli-seconds.\n",
            "chair: 97%\t(left_x:  287   top_y:   71   width:  124   height:  155)\n",
            "chair: 86%\t(left_x:  471   top_y:   19   width:  169   height:  291)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000343453.jpg: Predicted in 25.393000 milli-seconds.\n",
            "person: 100%\t(left_x:  253   top_y:   58   width:  181   height:  420)\n",
            "skis: 61%\t(left_x:  307   top_y:  405   width:  101   height:   76)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000484760.jpg: Predicted in 25.861000 milli-seconds.\n",
            "clock: 94%\t(left_x:  492   top_y:  272   width:   34   height:   28)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000082180.jpg: Predicted in 25.514000 milli-seconds.\n",
            "bench: 69%\t(left_x:   24   top_y:   50   width:  571   height:  369)\n",
            "teddy bear: 99%\t(left_x:  244   top_y:  145   width:  114   height:  122)\n",
            "teddy bear: 99%\t(left_x:  350   top_y:  169   width:   81   height:   92)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000150417.jpg: Predicted in 25.734000 milli-seconds.\n",
            "chair: 60%\t(left_x:  105   top_y:  261   width:   22   height:   64)\n",
            "person: 100%\t(left_x:  122   top_y:   73   width:  214   height:  251)\n",
            "cake: 94%\t(left_x:  273   top_y:  308   width:  115   height:   98)\n",
            "refrigerator: 92%\t(left_x:  275   top_y:    1   width:  227   height:  259)\n",
            "person: 92%\t(left_x:  347   top_y:   -7   width:  289   height:  484)\n",
            "cup: 94%\t(left_x:  352   top_y:  235   width:   36   height:   46)\n",
            "bowl: 59%\t(left_x:  354   top_y:  245   width:  114   height:   82)\n",
            "cup: 95%\t(left_x:  477   top_y:  190   width:   27   height:   47)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000542625.jpg: Predicted in 25.532000 milli-seconds.\n",
            "truck: 66%\t(left_x:    0   top_y:   -7   width:  148   height:  391)\n",
            "traffic light: 89%\t(left_x:  139   top_y:   59   width:   10   height:   29)\n",
            "bird: 100%\t(left_x:  207   top_y:  212   width:   94   height:  103)\n",
            "parking meter: 98%\t(left_x:  246   top_y:  280   width:   59   height:  175)\n",
            "car: 98%\t(left_x:  295   top_y:  216   width:  338   height:  262)\n",
            "traffic light: 56%\t(left_x:  372   top_y:   10   width:   19   height:   13)\n",
            "car: 100%\t(left_x:  376   top_y:  147   width:  113   height:   64)\n",
            "traffic light: 62%\t(left_x:  414   top_y:    1   width:   19   height:   14)\n",
            "car: 100%\t(left_x:  519   top_y:  149   width:  121   height:   79)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000289059.jpg: Predicted in 25.681000 milli-seconds.\n",
            "person: 98%\t(left_x:   -4   top_y:   43   width:  393   height:  428)\n",
            "tennis racket: 95%\t(left_x:  300   top_y:  276   width:  244   height:  143)\n",
            "person: 83%\t(left_x:  353   top_y:   -3   width:  162   height:  340)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000364322.jpg: Predicted in 26.128000 milli-seconds.\n",
            "sheep: 54%\t(left_x:   -1   top_y:  253   width:   84   height:  224)\n",
            "sheep: 95%\t(left_x:   -1   top_y:   95   width:  105   height:  181)\n",
            "sheep: 94%\t(left_x:    6   top_y:  213   width:  205   height:  263)\n",
            "sheep: 98%\t(left_x:   13   top_y:   36   width:   88   height:   88)\n",
            "sheep: 87%\t(left_x:  103   top_y:  159   width:  369   height:  151)\n",
            "sheep: 95%\t(left_x:  107   top_y:  119   width:  149   height:   97)\n",
            "sheep: 97%\t(left_x:  112   top_y:  270   width:  471   height:  207)\n",
            "sheep: 99%\t(left_x:  139   top_y:   49   width:  117   height:   93)\n",
            "sheep: 98%\t(left_x:  176   top_y:    8   width:   83   height:   67)\n",
            "sheep: 62%\t(left_x:  314   top_y:  113   width:  170   height:   70)\n",
            "sheep: 98%\t(left_x:  408   top_y:    1   width:  101   height:  117)\n",
            "sheep: 79%\t(left_x:  431   top_y:  129   width:  176   height:  166)\n",
            "sheep: 59%\t(left_x:  450   top_y:   66   width:  140   height:   91)\n",
            "sheep: 90%\t(left_x:  491   top_y:  305   width:  151   height:  175)\n",
            "sheep: 80%\t(left_x:  576   top_y:  157   width:   66   height:  153)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000014439.jpg: Predicted in 25.595000 milli-seconds.\n",
            "backpack: 60%\t(left_x:    2   top_y:  151   width:   36   height:   22)\n",
            "person: 76%\t(left_x:   27   top_y:  118   width:   34   height:   36)\n",
            "backpack: 61%\t(left_x:   57   top_y:  153   width:   36   height:   20)\n",
            "chair: 69%\t(left_x:   76   top_y:  122   width:   30   height:   35)\n",
            "person: 99%\t(left_x:  104   top_y:   45   width:   23   height:   49)\n",
            "person: 97%\t(left_x:  163   top_y:   82   width:   36   height:   85)\n",
            "person: 66%\t(left_x:  169   top_y:   48   width:    9   height:   13)\n",
            "person: 96%\t(left_x:  267   top_y:   90   width:   33   height:   80)\n",
            "person: 96%\t(left_x:  328   top_y:   39   width:   19   height:   41)\n",
            "person: 93%\t(left_x:  351   top_y:   44   width:   15   height:   55)\n",
            "person: 85%\t(left_x:  365   top_y:   56   width:   17   height:   60)\n",
            "person: 92%\t(left_x:  379   top_y:   41   width:   16   height:   43)\n",
            "person: 98%\t(left_x:  415   top_y:   92   width:   87   height:  191)\n",
            "person: 51%\t(left_x:  465   top_y:   15   width:    6   height:   18)\n",
            "person: 83%\t(left_x:  507   top_y:  113   width:   83   height:  161)\n",
            "person: 87%\t(left_x:  582   top_y:  113   width:   31   height:   88)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000279541.jpg: Predicted in 25.733000 milli-seconds.\n",
            "pizza: 59%\t(left_x:   -0   top_y:   96   width:   55   height:   16)\n",
            "pizza: 61%\t(left_x:    0   top_y:  111   width:   65   height:   16)\n",
            "pizza: 78%\t(left_x:    2   top_y:  127   width:  134   height:   27)\n",
            "pizza: 86%\t(left_x:   96   top_y:  148   width:  141   height:   46)\n",
            "cup: 78%\t(left_x:   98   top_y:    8   width:   12   height:   14)\n",
            "person: 93%\t(left_x:   98   top_y:    2   width:  164   height:  116)\n",
            "pizza: 85%\t(left_x:  145   top_y:  118   width:   94   height:   27)\n",
            "pizza: 96%\t(left_x:  179   top_y:  183   width:  216   height:   60)\n",
            "pizza: 82%\t(left_x:  254   top_y:  137   width:  161   height:   39)\n",
            "pizza: 92%\t(left_x:  342   top_y:  212   width:  123   height:   67)\n",
            "pizza: 97%\t(left_x:  400   top_y:  164   width:   79   height:   61)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000065350.jpg: Predicted in 25.459000 milli-seconds.\n",
            "car: 69%\t(left_x:   57   top_y:    1   width:  199   height:   85)\n",
            "skateboard: 72%\t(left_x:  194   top_y:  150   width:  102   height:   79)\n",
            "person: 97%\t(left_x:  212   top_y:   36   width:  203   height:  230)\n",
            "bicycle: 95%\t(left_x:  225   top_y:   -0   width:  168   height:   91)\n",
            "person: 99%\t(left_x:  457   top_y:   33   width:  183   height:  231)\n",
            "skateboard: 88%\t(left_x:  479   top_y:  251   width:  129   height:   33)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000511384.jpg: Predicted in 25.734000 milli-seconds.\n",
            "frisbee: 100%\t(left_x:  102   top_y:   60   width:  116   height:  128)\n",
            "person: 99%\t(left_x:  369   top_y:  513   width:   38   height:   85)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000430871.jpg: Predicted in 26.136000 milli-seconds.\n",
            "parking meter: 99%\t(left_x:   41   top_y:   49   width:  141   height:  337)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000447342.jpg: Predicted in 25.511000 milli-seconds.\n",
            "car: 90%\t(left_x:   24   top_y:  330   width:   71   height:   37)\n",
            "bus: 88%\t(left_x:   88   top_y:  263   width:  215   height:  120)\n",
            "car: 64%\t(left_x:  301   top_y:  327   width:   37   height:   23)\n",
            "bus: 55%\t(left_x:  373   top_y:  281   width:  158   height:  131)\n",
            "car: 52%\t(left_x:  532   top_y:  311   width:   24   height:   11)\n",
            "car: 88%\t(left_x:  552   top_y:  313   width:   30   height:   13)\n",
            "car: 64%\t(left_x:  605   top_y:  322   width:   35   height:   37)\n",
            "car: 70%\t(left_x:  606   top_y:  300   width:   13   height:    9)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000430073.jpg: Predicted in 25.673000 milli-seconds.\n",
            "person: 99%\t(left_x:   -1   top_y:  194   width:   60   height:  246)\n",
            "motorbike: 77%\t(left_x:   -0   top_y:  153   width:   23   height:   33)\n",
            "person: 100%\t(left_x:   56   top_y:  166   width:   79   height:  237)\n",
            "person: 88%\t(left_x:  115   top_y:  124   width:   22   height:   54)\n",
            "person: 94%\t(left_x:  138   top_y:  124   width:   22   height:   59)\n",
            "person: 96%\t(left_x:  161   top_y:  181   width:   42   height:   36)\n",
            "person: 90%\t(left_x:  176   top_y:  126   width:   22   height:   56)\n",
            "person: 80%\t(left_x:  195   top_y:  116   width:   16   height:   61)\n",
            "cow: 100%\t(left_x:  212   top_y:  190   width:  158   height:  115)\n",
            "person: 69%\t(left_x:  255   top_y:  120   width:   23   height:   29)\n",
            "chair: 93%\t(left_x:  361   top_y:  211   width:   36   height:   51)\n",
            "person: 100%\t(left_x:  398   top_y:  156   width:   45   height:  102)\n",
            "chair: 97%\t(left_x:  439   top_y:  229   width:   44   height:   61)\n",
            "person: 92%\t(left_x:  455   top_y:  201   width:   41   height:   81)\n",
            "chair: 60%\t(left_x:  501   top_y:  208   width:   29   height:   70)\n",
            "person: 89%\t(left_x:  509   top_y:  209   width:   52   height:   96)\n",
            "chair: 98%\t(left_x:  515   top_y:  252   width:   58   height:   67)\n",
            "chair: 85%\t(left_x:  553   top_y:  207   width:   35   height:   47)\n",
            "person: 78%\t(left_x:  569   top_y:  208   width:   69   height:   98)\n",
            "chair: 79%\t(left_x:  586   top_y:  247   width:   53   height:   68)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000504389.jpg: Predicted in 25.621000 milli-seconds.\n",
            "person: 99%\t(left_x:   45   top_y:   92   width:   57   height:  112)\n",
            "tennis racket: 94%\t(left_x:   94   top_y:  121   width:   41   height:   18)\n",
            "tennis racket: 97%\t(left_x:  368   top_y:  135   width:   45   height:   19)\n",
            "person: 99%\t(left_x:  400   top_y:   76   width:   67   height:  158)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000042888.jpg: Predicted in 26.083000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000460229.jpg: Predicted in 25.705000 milli-seconds.\n",
            "stop sign: 100%\t(left_x:   52   top_y:   85   width:  232   height:  217)\n",
            "traffic light: 95%\t(left_x:  198   top_y:   -1   width:   32   height:   49)\n",
            "truck: 65%\t(left_x:  241   top_y:  298   width:  144   height:  163)\n",
            "traffic light: 96%\t(left_x:  243   top_y:   15   width:   30   height:   62)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000013774.jpg: Predicted in 25.916000 milli-seconds.\n",
            "frisbee: 91%\t(left_x:  236   top_y:  209   width:   17   height:   18)\n",
            "person: 100%\t(left_x:  269   top_y:  282   width:   32   height:   84)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000215114.jpg: Predicted in 25.438000 milli-seconds.\n",
            "refrigerator: 63%\t(left_x:   10   top_y:   30   width:  517   height:  570)\n",
            "person: 79%\t(left_x:  120   top_y:   95   width:  246   height:  438)\n",
            "bottle: 91%\t(left_x:  265   top_y:  519   width:   64   height:   99)\n",
            "bottle: 92%\t(left_x:  278   top_y:  243   width:   38   height:  105)\n",
            "bottle: 91%\t(left_x:  288   top_y:  481   width:   44   height:   94)\n",
            "bottle: 72%\t(left_x:  300   top_y:  433   width:   32   height:   64)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000033109.jpg: Predicted in 25.509000 milli-seconds.\n",
            "person: 76%\t(left_x:   87   top_y:  231   width:   18   height:   39)\n",
            "car: 73%\t(left_x:  172   top_y:  229   width:   35   height:   11)\n",
            "truck: 98%\t(left_x:  207   top_y:   96   width:  264   height:  206)\n",
            "car: 82%\t(left_x:  469   top_y:  207   width:   10   height:   14)\n",
            "car: 95%\t(left_x:  479   top_y:  205   width:   31   height:   24)\n",
            "truck: 63%\t(left_x:  492   top_y:  189   width:   19   height:   22)\n",
            "car: 99%\t(left_x:  506   top_y:  205   width:   23   height:   16)\n",
            "bus: 96%\t(left_x:  519   top_y:  184   width:   27   height:   31)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000134886.jpg: Predicted in 26.010000 milli-seconds.\n",
            "aeroplane: 100%\t(left_x:  138   top_y:  183   width:  231   height:   65)\n",
            "person: 80%\t(left_x:  418   top_y:  384   width:   16   height:   33)\n",
            "car: 97%\t(left_x:  429   top_y:  374   width:   62   height:   58)\n",
            "person: 78%\t(left_x:  515   top_y:  376   width:   21   height:   47)\n",
            "person: 83%\t(left_x:  554   top_y:  370   width:   26   height:   28)\n",
            "person: 92%\t(left_x:  582   top_y:  347   width:   24   height:   27)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000490171.jpg: Predicted in 25.415000 milli-seconds.\n",
            "person: 63%\t(left_x:   46   top_y:  244   width:  271   height:   66)\n",
            "dog: 93%\t(left_x:  278   top_y:  231   width:  104   height:   81)\n",
            "surfboard: 80%\t(left_x:  295   top_y:  283   width:  165   height:   31)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000336587.jpg: Predicted in 26.349000 milli-seconds.\n",
            "stop sign: 100%\t(left_x:  246   top_y:   -1   width:   97   height:  100)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000458755.jpg: Predicted in 25.655000 milli-seconds.\n",
            "sheep: 69%\t(left_x:  -12   top_y:   -3   width:  443   height:  188)\n",
            "sheep: 77%\t(left_x:    4   top_y:   12   width:  311   height:  350)\n",
            "person: 86%\t(left_x:  124   top_y:    6   width:  457   height:  471)\n",
            "person: 82%\t(left_x:  563   top_y:   -1   width:   78   height:   91)\n",
            "person: 54%\t(left_x:  592   top_y:   -2   width:   49   height:  143)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000176701.jpg: Predicted in 25.688000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000350679.jpg: Predicted in 25.941000 milli-seconds.\n",
            "person: 68%\t(left_x:    9   top_y:   86   width:   85   height:  265)\n",
            "person: 100%\t(left_x:   32   top_y:   85   width:  360   height:  340)\n",
            "person: 59%\t(left_x:   45   top_y:   52   width:   68   height:  222)\n",
            "tie: 66%\t(left_x:   63   top_y:   87   width:   12   height:   23)\n",
            "person: 56%\t(left_x:   95   top_y:   71   width:   73   height:  165)\n",
            "person: 80%\t(left_x:  161   top_y:   67   width:   48   height:   71)\n",
            "person: 91%\t(left_x:  196   top_y:   65   width:   47   height:   68)\n",
            "person: 99%\t(left_x:  356   top_y:  113   width:   76   height:  189)\n",
            "cake: 83%\t(left_x:  357   top_y:  329   width:  104   height:   84)\n",
            "cake: 53%\t(left_x:  367   top_y:  382   width:   20   height:   18)\n",
            "cake: 80%\t(left_x:  405   top_y:  204   width:   94   height:  135)\n",
            "bottle: 60%\t(left_x:  451   top_y:  307   width:   55   height:  120)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000576052.jpg: Predicted in 25.629000 milli-seconds.\n",
            "horse: 99%\t(left_x:  402   top_y:  146   width:   93   height:  236)\n",
            "person: 97%\t(left_x:  422   top_y:   91   width:   92   height:  163)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000193743.jpg: Predicted in 26.045000 milli-seconds.\n",
            "person: 99%\t(left_x:  114   top_y:   35   width:  290   height:  591)\n",
            "person: 58%\t(left_x:  369   top_y:   -1   width:   58   height:   43)\n",
            "tennis racket: 67%\t(left_x:  375   top_y:  357   width:   17   height:  178)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000506178.jpg: Predicted in 25.661000 milli-seconds.\n",
            "person: 67%\t(left_x:   64   top_y:   89   width:  176   height:  427)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000524850.jpg: Predicted in 25.857000 milli-seconds.\n",
            "aeroplane: 61%\t(left_x:    8   top_y:   17   width:  264   height:  293)\n",
            "person: 70%\t(left_x:  123   top_y:  112   width:   14   height:   25)\n",
            "person: 64%\t(left_x:  137   top_y:  105   width:   13   height:   30)\n",
            "person: 60%\t(left_x:  169   top_y:  102   width:    9   height:   28)\n",
            "person: 69%\t(left_x:  179   top_y:  104   width:    9   height:   23)\n",
            "person: 50%\t(left_x:  217   top_y:  114   width:   15   height:   29)\n",
            "person: 64%\t(left_x:  233   top_y:  119   width:   19   height:   30)\n",
            "handbag: 78%\t(left_x:  268   top_y:  152   width:    8   height:   20)\n",
            "person: 96%\t(left_x:  271   top_y:  145   width:   17   height:   45)\n",
            "person: 95%\t(left_x:  289   top_y:  129   width:   15   height:   41)\n",
            "suitcase: 77%\t(left_x:  294   top_y:  180   width:   15   height:   39)\n",
            "person: 95%\t(left_x:  299   top_y:  154   width:   18   height:   54)\n",
            "bus: 60%\t(left_x:  313   top_y:   84   width:  186   height:  113)\n",
            "handbag: 59%\t(left_x:  344   top_y:  197   width:   12   height:   20)\n",
            "person: 95%\t(left_x:  349   top_y:  162   width:   27   height:   60)\n",
            "suitcase: 93%\t(left_x:  365   top_y:  196   width:   16   height:   22)\n",
            "person: 79%\t(left_x:  369   top_y:  123   width:   17   height:   43)\n",
            "person: 80%\t(left_x:  384   top_y:  126   width:   15   height:   43)\n",
            "person: 92%\t(left_x:  390   top_y:  162   width:   22   height:   59)\n",
            "person: 75%\t(left_x:  402   top_y:  132   width:   16   height:   43)\n",
            "backpack: 59%\t(left_x:  403   top_y:  173   width:   11   height:   21)\n",
            "person: 92%\t(left_x:  413   top_y:  152   width:   24   height:   54)\n",
            "person: 74%\t(left_x:  415   top_y:  132   width:   19   height:   32)\n",
            "person: 96%\t(left_x:  430   top_y:  169   width:   30   height:   57)\n",
            "person: 92%\t(left_x:  441   top_y:  212   width:   37   height:   90)\n",
            "backpack: 90%\t(left_x:  457   top_y:  230   width:   21   height:   39)\n",
            "person: 95%\t(left_x:  460   top_y:  172   width:   39   height:   64)\n",
            "handbag: 73%\t(left_x:  483   top_y:  184   width:   17   height:   27)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000209222.jpg: Predicted in 26.072000 milli-seconds.\n",
            "person: 99%\t(left_x:  108   top_y:  107   width:   44   height:   87)\n",
            "person: 79%\t(left_x:  200   top_y:  121   width:   26   height:   49)\n",
            "person: 68%\t(left_x:  216   top_y:  121   width:   21   height:   46)\n",
            "car: 84%\t(left_x:  369   top_y:  107   width:   40   height:   25)\n",
            "person: 78%\t(left_x:  403   top_y:  106   width:   15   height:   37)\n",
            "person: 99%\t(left_x:  406   top_y:  193   width:  166   height:  184)\n",
            "person: 76%\t(left_x:  437   top_y:  121   width:   24   height:   33)\n",
            "person: 84%\t(left_x:  451   top_y:  121   width:   30   height:   42)\n",
            "person: 76%\t(left_x:  463   top_y:  121   width:   36   height:   44)\n",
            "bench: 98%\t(left_x:  469   top_y:  255   width:  125   height:  137)\n",
            "person: 87%\t(left_x:  485   top_y:  126   width:   30   height:   46)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000355677.jpg: Predicted in 25.706000 milli-seconds.\n",
            "surfboard: 94%\t(left_x:  280   top_y:  305   width:  163   height:   92)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000407574.jpg: Predicted in 25.886000 milli-seconds.\n",
            "banana: 87%\t(left_x:   87   top_y:   87   width:  306   height:  409)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000028285.jpg: Predicted in 25.589000 milli-seconds.\n",
            "clock: 97%\t(left_x:  306   top_y:  205   width:   23   height:   25)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000273493.jpg: Predicted in 25.435000 milli-seconds.\n",
            "person: 99%\t(left_x:   73   top_y:  121   width:   48   height:  124)\n",
            "person: 98%\t(left_x:  366   top_y:  158   width:   23   height:   46)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000365207.jpg: Predicted in 25.706000 milli-seconds.\n",
            "car: 95%\t(left_x:   75   top_y:  257   width:  133   height:  207)\n",
            "car: 60%\t(left_x:  401   top_y:  281   width:  100   height:  226)\n",
            "dog: 92%\t(left_x:  468   top_y:  273   width:   90   height:   94)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000093154.jpg: Predicted in 25.780000 milli-seconds.\n",
            "car: 93%\t(left_x:   -1   top_y:  284   width:   39   height:   36)\n",
            "car: 91%\t(left_x:   33   top_y:  291   width:   29   height:   25)\n",
            "car: 78%\t(left_x:   88   top_y:  273   width:   24   height:   20)\n",
            "car: 99%\t(left_x:  142   top_y:  274   width:   68   height:   35)\n",
            "car: 74%\t(left_x:  278   top_y:  254   width:   12   height:   11)\n",
            "traffic light: 73%\t(left_x:  299   top_y:  228   width:    3   height:    5)\n",
            "car: 75%\t(left_x:  303   top_y:  254   width:   17   height:   16)\n",
            "car: 100%\t(left_x:  315   top_y:  275   width:   35   height:   28)\n",
            "car: 88%\t(left_x:  332   top_y:  253   width:   19   height:   18)\n",
            "car: 61%\t(left_x:  350   top_y:  255   width:   14   height:   11)\n",
            "car: 51%\t(left_x:  371   top_y:  253   width:   14   height:   14)\n",
            "car: 88%\t(left_x:  384   top_y:  255   width:   15   height:   15)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000031749.jpg: Predicted in 25.795000 milli-seconds.\n",
            "clock: 93%\t(left_x:   81   top_y:  243   width:  201   height:  227)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000443303.jpg: Predicted in 25.911000 milli-seconds.\n",
            "suitcase: 79%\t(left_x:  -11   top_y:    7   width:  531   height:  388)\n",
            "cat: 86%\t(left_x:  188   top_y:  100   width:  302   height:  213)\n",
            "book: 82%\t(left_x:  371   top_y:    0   width:   88   height:   31)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000462031.jpg: Predicted in 25.462000 milli-seconds.\n",
            "person: 98%\t(left_x:   44   top_y:  182   width:  310   height:  462)\n",
            "baseball bat: 82%\t(left_x:  285   top_y:   67   width:  157   height:  242)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000097230.jpg: Predicted in 26.113000 milli-seconds.\n",
            "elephant: 100%\t(left_x:   86   top_y:  170   width:  242   height:  174)\n",
            "elephant: 97%\t(left_x:  368   top_y:  191   width:  217   height:   94)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000474167.jpg: Predicted in 25.523000 milli-seconds.\n",
            "pizza: 68%\t(left_x:   -3   top_y:  220   width:  433   height:  278)\n",
            "person: 93%\t(left_x:   70   top_y:    4   width:  279   height:  151)\n",
            "bottle: 100%\t(left_x:  110   top_y:   11   width:   77   height:  236)\n",
            "pizza: 57%\t(left_x:  216   top_y:  136   width:  161   height:   56)\n",
            "person: 95%\t(left_x:  347   top_y:   -0   width:   34   height:   76)\n",
            "person: 91%\t(left_x:  396   top_y:   -0   width:   24   height:   71)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000416269.jpg: Predicted in 25.940000 milli-seconds.\n",
            "train: 98%\t(left_x:   41   top_y:  110   width:  510   height:  221)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000147415.jpg: Predicted in 25.570000 milli-seconds.\n",
            "chair: 81%\t(left_x:   65   top_y:  142   width:  264   height:  129)\n",
            "laptop: 97%\t(left_x:   86   top_y:  225   width:  323   height:  232)\n",
            "person: 72%\t(left_x:  326   top_y:    8   width:  323   height:  460)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000196009.jpg: Predicted in 25.700000 milli-seconds.\n",
            "carrot: 84%\t(left_x:  105   top_y:   81   width:  511   height:  230)\n",
            "spoon: 98%\t(left_x:  192   top_y:  316   width:  371   height:   79)\n",
            "carrot: 98%\t(left_x:  211   top_y:    1   width:  431   height:  135)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000101420.jpg: Predicted in 25.584000 milli-seconds.\n",
            "sofa: 96%\t(left_x:   -2   top_y:  124   width:  500   height:  256)\n",
            "cat: 99%\t(left_x:   57   top_y:   60   width:  205   height:  111)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000116208.jpg: Predicted in 25.745000 milli-seconds.\n",
            "pizza: 70%\t(left_x:    1   top_y:    9   width:  187   height:   73)\n",
            "pizza: 57%\t(left_x:   55   top_y:  334   width:   71   height:   46)\n",
            "pizza: 76%\t(left_x:   96   top_y:  129   width:  500   height:  237)\n",
            "wine glass: 85%\t(left_x:  215   top_y:   87   width:   65   height:   60)\n",
            "chair: 52%\t(left_x:  252   top_y:   49   width:   55   height:   76)\n",
            "wine glass: 83%\t(left_x:  295   top_y:   86   width:   56   height:   47)\n",
            "bottle: 94%\t(left_x:  304   top_y:    0   width:   56   height:   91)\n",
            "bottle: 98%\t(left_x:  352   top_y:    0   width:   57   height:  135)\n",
            "bottle: 99%\t(left_x:  386   top_y:    1   width:   74   height:  146)\n",
            "chair: 79%\t(left_x:  441   top_y:    0   width:   51   height:   83)\n",
            "cup: 79%\t(left_x:  452   top_y:   76   width:   56   height:   73)\n",
            "bottle: 98%\t(left_x:  487   top_y:   24   width:   78   height:  189)\n",
            "cup: 92%\t(left_x:  500   top_y:  351   width:  140   height:  128)\n",
            "pizza: 59%\t(left_x:  557   top_y:  301   width:   84   height:  123)\n",
            "chair: 96%\t(left_x:  564   top_y:   -2   width:   76   height:  167)\n",
            "wine glass: 89%\t(left_x:  597   top_y:  123   width:   44   height:  172)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000107554.jpg: Predicted in 25.711000 milli-seconds.\n",
            "surfboard: 91%\t(left_x:   17   top_y:  194   width:  524   height:  141)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000276284.jpg: Predicted in 25.647000 milli-seconds.\n",
            "car: 70%\t(left_x:   14   top_y:  198   width:   20   height:   17)\n",
            "car: 94%\t(left_x:   21   top_y:  201   width:   47   height:   34)\n",
            "car: 95%\t(left_x:  121   top_y:  194   width:   25   height:   14)\n",
            "motorbike: 100%\t(left_x:  175   top_y:  231   width:  259   height:  266)\n",
            "car: 62%\t(left_x:  180   top_y:  183   width:   58   height:   30)\n",
            "truck: 61%\t(left_x:  181   top_y:  183   width:   56   height:   29)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000208363.jpg: Predicted in 25.903000 milli-seconds.\n",
            "person: 94%\t(left_x:   -4   top_y:  212   width:  296   height:  266)\n",
            "person: 65%\t(left_x:   -1   top_y:   69   width:   68   height:  122)\n",
            "person: 89%\t(left_x:   -1   top_y:   99   width:  110   height:  169)\n",
            "person: 97%\t(left_x:  114   top_y:   81   width:   65   height:  134)\n",
            "person: 91%\t(left_x:  197   top_y:   70   width:   79   height:  127)\n",
            "person: 99%\t(left_x:  212   top_y:  124   width:  168   height:  347)\n",
            "chair: 50%\t(left_x:  214   top_y:  317   width:  161   height:  152)\n",
            "person: 79%\t(left_x:  281   top_y:   84   width:   65   height:   68)\n",
            "pizza: 82%\t(left_x:  303   top_y:  199   width:   39   height:   35)\n",
            "person: 91%\t(left_x:  326   top_y:   27   width:   65   height:   89)\n",
            "person: 61%\t(left_x:  334   top_y:  119   width:   98   height:  151)\n",
            "person: 92%\t(left_x:  363   top_y:   89   width:   71   height:   95)\n",
            "chair: 63%\t(left_x:  375   top_y:  212   width:   55   height:  127)\n",
            "person: 95%\t(left_x:  419   top_y:  210   width:  218   height:  270)\n",
            "pizza: 95%\t(left_x:  430   top_y:  351   width:   60   height:   35)\n",
            "person: 61%\t(left_x:  449   top_y:  136   width:  145   height:  317)\n",
            "pizza: 83%\t(left_x:  471   top_y:  207   width:   39   height:   21)\n",
            "pizza: 57%\t(left_x:  489   top_y:  461   width:   60   height:   20)\n",
            "person: 93%\t(left_x:  526   top_y:  112   width:   96   height:  111)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000019221.jpg: Predicted in 25.493000 milli-seconds.\n",
            "broccoli: 89%\t(left_x:   93   top_y:  122   width:  369   height:  331)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000130599.jpg: Predicted in 25.547000 milli-seconds.\n",
            "person: 100%\t(left_x:   -2   top_y:  114   width:  457   height:  364)\n",
            "giraffe: 67%\t(left_x:  263   top_y:   53   width:  265   height:  427)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000516677.jpg: Predicted in 25.561000 milli-seconds.\n",
            "skis: 81%\t(left_x:   -1   top_y:  349   width:  155   height:   51)\n",
            "skis: 73%\t(left_x:   66   top_y:  320   width:  149   height:   25)\n",
            "skis: 63%\t(left_x:  128   top_y:  286   width:   57   height:   19)\n",
            "person: 99%\t(left_x:  140   top_y:  199   width:   41   height:   96)\n",
            "skis: 74%\t(left_x:  168   top_y:  284   width:   61   height:   25)\n",
            "person: 90%\t(left_x:  180   top_y:  195   width:   40   height:  100)\n",
            "backpack: 87%\t(left_x:  200   top_y:  204   width:   21   height:   38)\n",
            "skis: 83%\t(left_x:  215   top_y:  279   width:   61   height:   34)\n",
            "person: 86%\t(left_x:  272   top_y:  198   width:   40   height:   91)\n",
            "backpack: 96%\t(left_x:  279   top_y:  268   width:   29   height:   38)\n",
            "person: 88%\t(left_x:  317   top_y:  171   width:   26   height:  119)\n",
            "person: 91%\t(left_x:  328   top_y:  164   width:   39   height:  132)\n",
            "person: 99%\t(left_x:  330   top_y:  257   width:  124   height:  134)\n",
            "person: 96%\t(left_x:  388   top_y:  235   width:   51   height:   59)\n",
            "person: 99%\t(left_x:  452   top_y:  150   width:   47   height:  163)\n",
            "backpack: 82%\t(left_x:  513   top_y:  339   width:  108   height:   51)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000189436.jpg: Predicted in 25.425000 milli-seconds.\n",
            "teddy bear: 90%\t(left_x:   15   top_y:   71   width:  387   height:  540)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000397327.jpg: Predicted in 25.706000 milli-seconds.\n",
            "toilet: 95%\t(left_x:  130   top_y:   93   width:  163   height:  334)\n",
            "sink: 75%\t(left_x:  322   top_y:   64   width:  257   height:  105)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000464251.jpg: Predicted in 26.142000 milli-seconds.\n",
            "chair: 72%\t(left_x:   -1   top_y:  346   width:  186   height:  113)\n",
            "bird: 99%\t(left_x:  140   top_y:  238   width:  133   height:   98)\n",
            "chair: 85%\t(left_x:  371   top_y:  349   width:  258   height:  109)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000034452.jpg: Predicted in 25.491000 milli-seconds.\n",
            "person: 100%\t(left_x:  324   top_y:  181   width:   85   height:  132)\n",
            "frisbee: 99%\t(left_x:  327   top_y:  250   width:   22   height:   13)\n",
            "frisbee: 73%\t(left_x:  381   top_y:  249   width:   18   height:   22)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000053909.jpg: Predicted in 25.624000 milli-seconds.\n",
            "person: 70%\t(left_x:   37   top_y:  154   width:  407   height:  451)\n",
            "cell phone: 73%\t(left_x:   42   top_y:  102   width:  396   height:  503)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000014038.jpg: Predicted in 26.056000 milli-seconds.\n",
            "refrigerator: 94%\t(left_x:    9   top_y:  148   width:  150   height:  280)\n",
            "microwave: 81%\t(left_x:  158   top_y:  283   width:   76   height:   44)\n",
            "bed: 70%\t(left_x:  303   top_y:  186   width:   51   height:   71)\n",
            "tvmonitor: 84%\t(left_x:  468   top_y:  188   width:   35   height:   62)\n",
            "pottedplant: 55%\t(left_x:  500   top_y:   58   width:   53   height:   77)\n",
            "book: 65%\t(left_x:  502   top_y:  290   width:   42   height:   10)\n",
            "book: 67%\t(left_x:  503   top_y:  250   width:   45   height:   13)\n",
            "book: 56%\t(left_x:  507   top_y:  271   width:   37   height:   13)\n",
            "book: 62%\t(left_x:  520   top_y:  190   width:   31   height:    8)\n",
            "book: 51%\t(left_x:  521   top_y:  196   width:   29   height:    8)\n",
            "book: 51%\t(left_x:  522   top_y:  184   width:   29   height:   10)\n",
            "cell phone: 89%\t(left_x:  579   top_y:  406   width:   35   height:   21)\n",
            "handbag: 57%\t(left_x:  594   top_y:  146   width:   37   height:   33)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000061108.jpg: Predicted in 25.414000 milli-seconds.\n",
            "bicycle: 99%\t(left_x:  148   top_y:  118   width:  469   height:  349)\n",
            "car: 90%\t(left_x:  464   top_y:    3   width:   26   height:   24)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000393569.jpg: Predicted in 26.051000 milli-seconds.\n",
            "sink: 92%\t(left_x:   39   top_y:  295   width:   63   height:   87)\n",
            "toilet: 95%\t(left_x:   58   top_y:  231   width:  109   height:  214)\n",
            "bottle: 73%\t(left_x:   84   top_y:  186   width:   23   height:   49)\n",
            "bottle: 86%\t(left_x:  110   top_y:  177   width:   24   height:   53)\n",
            "person: 70%\t(left_x:  375   top_y:  130   width:  145   height:  208)\n",
            "laptop: 79%\t(left_x:  436   top_y:  204   width:   85   height:   82)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000341828.jpg: Predicted in 25.774000 milli-seconds.\n",
            "person: 100%\t(left_x:   -8   top_y:   30   width:  619   height:  556)\n",
            "cell phone: 91%\t(left_x:  342   top_y:  256   width:   95   height:  146)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000410878.jpg: Predicted in 25.613000 milli-seconds.\n",
            "motorbike: 92%\t(left_x:   31   top_y:   51   width:  295   height:  358)\n",
            "bench: 71%\t(left_x:  360   top_y:  117   width:   39   height:   15)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000235857.jpg: Predicted in 25.997000 milli-seconds.\n",
            "cow: 99%\t(left_x:   53   top_y:  118   width:  270   height:  157)\n",
            "cow: 99%\t(left_x:  251   top_y:  106   width:  301   height:  246)\n",
            "cow: 95%\t(left_x:  347   top_y:   80   width:  111   height:   48)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000159791.jpg: Predicted in 25.486000 milli-seconds.\n",
            "microwave: 93%\t(left_x:    0   top_y:  190   width:   29   height:   59)\n",
            "chair: 80%\t(left_x:    0   top_y:  297   width:  122   height:   78)\n",
            "oven: 61%\t(left_x:   19   top_y:  250   width:  106   height:  109)\n",
            "refrigerator: 96%\t(left_x:  114   top_y:    5   width:  311   height:  372)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000013348.jpg: Predicted in 25.786000 milli-seconds.\n",
            "aeroplane: 64%\t(left_x:    0   top_y:  222   width:   54   height:   21)\n",
            "truck: 56%\t(left_x:    0   top_y:  289   width:   39   height:   20)\n",
            "aeroplane: 99%\t(left_x:    5   top_y:  132   width:  562   height:  159)\n",
            "person: 62%\t(left_x:   16   top_y:  280   width:   11   height:   15)\n",
            "person: 78%\t(left_x:  348   top_y:  270   width:    8   height:   20)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000376478.jpg: Predicted in 25.748000 milli-seconds.\n",
            "vase: 99%\t(left_x:   52   top_y:  202   width:  220   height:  343)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000486046.jpg: Predicted in 25.564000 milli-seconds.\n",
            "zebra: 59%\t(left_x:   -2   top_y:  434   width:  103   height:   45)\n",
            "zebra: 92%\t(left_x:   -0   top_y:  376   width:  170   height:  104)\n",
            "giraffe: 100%\t(left_x:  183   top_y:   35   width:  412   height:  442)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000285349.jpg: Predicted in 26.062000 milli-seconds.\n",
            "vase: 81%\t(left_x:   13   top_y:    1   width:  428   height:  382)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000091779.jpg: Predicted in 25.343000 milli-seconds.\n",
            "hot dog: 96%\t(left_x:   -3   top_y:   49   width:  332   height:  138)\n",
            "hot dog: 98%\t(left_x:  106   top_y:  110   width:  362   height:  207)\n",
            "hot dog: 89%\t(left_x:  211   top_y:  135   width:  431   height:  348)\n",
            "cup: 98%\t(left_x:  404   top_y:    0   width:  107   height:   97)\n",
            "bowl: 87%\t(left_x:  572   top_y:   14   width:   68   height:   65)\n",
            "bowl: 77%\t(left_x:  574   top_y:   75   width:   67   height:   78)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000326462.jpg: Predicted in 25.822000 milli-seconds.\n",
            "donut: 99%\t(left_x:  102   top_y:  126   width:  319   height:  316)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000177065.jpg: Predicted in 25.493000 milli-seconds.\n",
            "tennis racket: 91%\t(left_x:   18   top_y:  144   width:  142   height:   64)\n",
            "person: 70%\t(left_x:   28   top_y:   36   width:  158   height:  482)\n",
            "tennis racket: 97%\t(left_x:   35   top_y:  247   width:  143   height:  134)\n",
            "person: 60%\t(left_x:  142   top_y:  183   width:   60   height:   83)\n",
            "tennis racket: 52%\t(left_x:  147   top_y:  328   width:   31   height:  104)\n",
            "person: 90%\t(left_x:  171   top_y:  206   width:   91   height:  281)\n",
            "tennis racket: 55%\t(left_x:  264   top_y:  386   width:   31   height:  105)\n",
            "backpack: 90%\t(left_x:  304   top_y:  261   width:   54   height:   41)\n",
            "person: 99%\t(left_x:  345   top_y:  205   width:  112   height:  202)\n",
            "sports ball: 98%\t(left_x:  347   top_y:  312   width:   17   height:   17)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000443844.jpg: Predicted in 25.428000 milli-seconds.\n",
            "bench: 98%\t(left_x:  349   top_y:  245   width:  159   height:  118)\n",
            "person: 100%\t(left_x:  470   top_y:   51   width:  102   height:  241)\n",
            "skateboard: 92%\t(left_x:  477   top_y:  268   width:   75   height:   35)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000090631.jpg: Predicted in 25.321000 milli-seconds.\n",
            "aeroplane: 100%\t(left_x:  179   top_y:  120   width:  272   height:  103)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000154358.jpg: Predicted in 25.992000 milli-seconds.\n",
            "chair: 61%\t(left_x:   -0   top_y:  307   width:   75   height:   66)\n",
            "person: 98%\t(left_x:   20   top_y:  296   width:   58   height:   75)\n",
            "vase: 61%\t(left_x:   62   top_y:  376   width:   16   height:   17)\n",
            "handbag: 83%\t(left_x:  101   top_y:  424   width:   75   height:   67)\n",
            "chair: 99%\t(left_x:  158   top_y:  306   width:   66   height:   69)\n",
            "pottedplant: 74%\t(left_x:  248   top_y:  275   width:   23   height:   32)\n",
            "vase: 83%\t(left_x:  254   top_y:  290   width:   11   height:   15)\n",
            "chair: 97%\t(left_x:  262   top_y:  298   width:   30   height:   61)\n",
            "vase: 68%\t(left_x:  341   top_y:  353   width:   16   height:   48)\n",
            "pottedplant: 68%\t(left_x:  354   top_y:  236   width:   45   height:   74)\n",
            "vase: 98%\t(left_x:  367   top_y:  273   width:   21   height:   37)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000083113.jpg: Predicted in 25.512000 milli-seconds.\n",
            "elephant: 95%\t(left_x:  242   top_y:  196   width:  153   height:   71)\n",
            "elephant: 100%\t(left_x:  457   top_y:  122   width:  167   height:  203)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000350405.jpg: Predicted in 26.006000 milli-seconds.\n",
            "person: 96%\t(left_x:   34   top_y:  147   width:   35   height:   45)\n",
            "person: 100%\t(left_x:  183   top_y:   86   width:  220   height:  160)\n",
            "snowboard: 97%\t(left_x:  257   top_y:  232   width:  175   height:   34)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000042276.jpg: Predicted in 25.661000 milli-seconds.\n",
            "toilet: 97%\t(left_x:   57   top_y:    7   width:  100   height:  239)\n",
            "pottedplant: 57%\t(left_x:  160   top_y:   15   width:   91   height:   95)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000173033.jpg: Predicted in 25.713000 milli-seconds.\n",
            "bear: 100%\t(left_x:  142   top_y:  351   width:   90   height:   82)\n",
            "bear: 100%\t(left_x:  181   top_y:  199   width:  216   height:  294)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000570736.jpg: Predicted in 25.858000 milli-seconds.\n",
            "toilet: 80%\t(left_x:  138   top_y:  349   width:  141   height:  205)\n",
            "sink: 86%\t(left_x:  332   top_y:  369   width:   94   height:   30)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000186296.jpg: Predicted in 25.497000 milli-seconds.\n",
            "cat: 96%\t(left_x:   48   top_y:  117   width:  537   height:  295)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000520707.jpg: Predicted in 25.832000 milli-seconds.\n",
            "person: 97%\t(left_x:   -0   top_y:  133   width:  105   height:  354)\n",
            "handbag: 88%\t(left_x:   97   top_y:  230   width:   34   height:   89)\n",
            "person: 99%\t(left_x:  106   top_y:  177   width:   98   height:  233)\n",
            "tvmonitor: 65%\t(left_x:  108   top_y:  135   width:   18   height:   24)\n",
            "tvmonitor: 59%\t(left_x:  124   top_y:  131   width:   19   height:   26)\n",
            "person: 56%\t(left_x:  143   top_y:  167   width:   41   height:   62)\n",
            "person: 99%\t(left_x:  178   top_y:  165   width:   75   height:  203)\n",
            "suitcase: 97%\t(left_x:  243   top_y:  281   width:   81   height:   71)\n",
            "person: 99%\t(left_x:  328   top_y:  151   width:   82   height:  233)\n",
            "person: 91%\t(left_x:  391   top_y:  153   width:   66   height:  137)\n",
            "handbag: 53%\t(left_x:  429   top_y:  167   width:   27   height:   85)\n",
            "handbag: 54%\t(left_x:  430   top_y:  200   width:   21   height:   23)\n",
            "person: 93%\t(left_x:  462   top_y:  144   width:   59   height:   82)\n",
            "person: 72%\t(left_x:  528   top_y:  151   width:   31   height:   65)\n",
            "person: 96%\t(left_x:  579   top_y:  145   width:   40   height:   94)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000097022.jpg: Predicted in 25.727000 milli-seconds.\n",
            "oven: 92%\t(left_x:  164   top_y:  266   width:   73   height:   92)\n",
            "sink: 72%\t(left_x:  254   top_y:  249   width:   88   height:   15)\n",
            "oven: 57%\t(left_x:  321   top_y:  268   width:   93   height:  129)\n",
            "bottle: 76%\t(left_x:  337   top_y:  228   width:   12   height:   23)\n",
            "toaster: 94%\t(left_x:  414   top_y:  218   width:   46   height:   35)\n",
            "microwave: 99%\t(left_x:  516   top_y:  200   width:   94   height:   54)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000019432.jpg: Predicted in 25.745000 milli-seconds.\n",
            "person: 98%\t(left_x:   56   top_y:   39   width:  149   height:  386)\n",
            "chair: 67%\t(left_x:   77   top_y:   14   width:   57   height:   34)\n",
            "tennis racket: 99%\t(left_x:   93   top_y:  247   width:   58   height:  133)\n",
            "chair: 55%\t(left_x:  134   top_y:   14   width:   57   height:   43)\n",
            "chair: 82%\t(left_x:  167   top_y:   55   width:   61   height:  109)\n",
            "chair: 56%\t(left_x:  280   top_y:   56   width:   74   height:  111)\n",
            "sports ball: 98%\t(left_x:  321   top_y:  272   width:   21   height:   17)\n",
            "chair: 52%\t(left_x:  349   top_y:   58   width:   66   height:  110)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000403353.jpg: Predicted in 25.712000 milli-seconds.\n",
            "bed: 92%\t(left_x:  -14   top_y:  140   width:  471   height:  352)\n",
            "book: 99%\t(left_x:  172   top_y:  306   width:  134   height:   90)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000296634.jpg: Predicted in 25.941000 milli-seconds.\n",
            "bowl: 87%\t(left_x:   35   top_y:   40   width:  188   height:  179)\n",
            "carrot: 61%\t(left_x:   44   top_y:  230   width:  172   height:  180)\n",
            "bowl: 84%\t(left_x:   55   top_y:  232   width:  152   height:  168)\n",
            "bowl: 82%\t(left_x:  219   top_y:   37   width:  397   height:  377)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000080274.jpg: Predicted in 25.824000 milli-seconds.\n",
            "elephant: 97%\t(left_x:   66   top_y:  128   width:  434   height:  272)\n",
            "elephant: 79%\t(left_x:  210   top_y:  205   width:  266   height:  191)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000122672.jpg: Predicted in 25.732000 milli-seconds.\n",
            "person: 100%\t(left_x:  226   top_y:  105   width:  304   height:  224)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000171050.jpg: Predicted in 25.551000 milli-seconds.\n",
            "fire hydrant: 99%\t(left_x:  167   top_y:  247   width:  299   height:  397)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000245102.jpg: Predicted in 26.007000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000125129.jpg: Predicted in 25.814000 milli-seconds.\n",
            "chair: 90%\t(left_x:   -2   top_y:  108   width:  111   height:  155)\n",
            "diningtable: 75%\t(left_x:   -0   top_y:  223   width:  362   height:  110)\n",
            "person: 89%\t(left_x:   95   top_y:    0   width:   99   height:  232)\n",
            "person: 92%\t(left_x:  130   top_y:   53   width:  204   height:  218)\n",
            "chair: 78%\t(left_x:  311   top_y:  118   width:   66   height:  171)\n",
            "person: 97%\t(left_x:  376   top_y:    6   width:   97   height:  288)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000107339.jpg: Predicted in 25.867000 milli-seconds.\n",
            "sofa: 71%\t(left_x:    9   top_y:   72   width:  127   height:   56)\n",
            "person: 97%\t(left_x:   45   top_y:   83   width:   38   height:   53)\n",
            "person: 99%\t(left_x:  125   top_y:   17   width:   56   height:  110)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000142620.jpg: Predicted in 25.705000 milli-seconds.\n",
            "bowl: 76%\t(left_x:   54   top_y:  227   width:   65   height:   51)\n",
            "bottle: 50%\t(left_x:   76   top_y:  285   width:   46   height:   74)\n",
            "bowl: 99%\t(left_x:  100   top_y:  350   width:   60   height:   50)\n",
            "bottle: 97%\t(left_x:  112   top_y:  204   width:   34   height:  112)\n",
            "spoon: 73%\t(left_x:  140   top_y:  328   width:   40   height:   44)\n",
            "chair: 71%\t(left_x:  157   top_y:  108   width:  197   height:  167)\n",
            "cup: 98%\t(left_x:  165   top_y:  378   width:   49   height:   48)\n",
            "cup: 63%\t(left_x:  211   top_y:  325   width:   38   height:   54)\n",
            "cup: 94%\t(left_x:  230   top_y:  379   width:   47   height:   48)\n",
            "cup: 97%\t(left_x:  235   top_y:  292   width:   45   height:   40)\n",
            "bowl: 93%\t(left_x:  257   top_y:  323   width:   94   height:   50)\n",
            "person: 99%\t(left_x:  281   top_y:    4   width:  334   height:  431)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000452515.jpg: Predicted in 25.883000 milli-seconds.\n",
            "person: 83%\t(left_x:   77   top_y:  307   width:   97   height:  187)\n",
            "sports ball: 85%\t(left_x:   91   top_y:  168   width:    8   height:   12)\n",
            "person: 62%\t(left_x:  159   top_y:   34   width:   49   height:  111)\n",
            "tennis racket: 93%\t(left_x:  166   top_y:  337   width:   19   height:   56)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000071226.jpg: Predicted in 25.511000 milli-seconds.\n",
            "bed: 80%\t(left_x:  -16   top_y:    7   width:  664   height:  412)\n",
            "book: 85%\t(left_x:   42   top_y:  225   width:   77   height:   83)\n",
            "dog: 98%\t(left_x:   73   top_y:   59   width:  154   height:  156)\n",
            "dog: 97%\t(left_x:  190   top_y:  151   width:  336   height:  254)\n",
            "cat: 99%\t(left_x:  312   top_y:   61   width:  154   height:   67)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000491090.jpg: Predicted in 25.605000 milli-seconds.\n",
            "motorbike: 65%\t(left_x:    1   top_y:  170   width:  471   height:  492)\n",
            "person: 70%\t(left_x:  106   top_y:   80   width:  275   height:  363)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000532575.jpg: Predicted in 25.959000 milli-seconds.\n",
            "dog: 90%\t(left_x:   -4   top_y:   47   width:  500   height:  380)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000344816.jpg: Predicted in 25.391000 milli-seconds.\n",
            "train: 96%\t(left_x:  142   top_y:   56   width:  359   height:  310)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000210388.jpg: Predicted in 25.480000 milli-seconds.\n",
            "person: 99%\t(left_x:    0   top_y:  140   width:   73   height:  241)\n",
            "person: 99%\t(left_x:  198   top_y:  159   width:  118   height:  208)\n",
            "suitcase: 83%\t(left_x:  278   top_y:  260   width:   64   height:   80)\n",
            "person: 99%\t(left_x:  317   top_y:  208   width:   85   height:  163)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000399462.jpg: Predicted in 25.637000 milli-seconds.\n",
            "kite: 61%\t(left_x:   -1   top_y:   98   width:  155   height:   95)\n",
            "person: 96%\t(left_x:   17   top_y:   -0   width:   42   height:   86)\n",
            "person: 99%\t(left_x:   77   top_y:    1   width:   31   height:   77)\n",
            "person: 99%\t(left_x:   85   top_y:   35   width:  192   height:  258)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000309655.jpg: Predicted in 25.636000 milli-seconds.\n",
            "person: 96%\t(left_x:    4   top_y:  213   width:   31   height:   87)\n",
            "person: 55%\t(left_x:   26   top_y:  218   width:   18   height:   66)\n",
            "person: 96%\t(left_x:   67   top_y:  224   width:   25   height:   56)\n",
            "person: 91%\t(left_x:   88   top_y:  241   width:   24   height:   41)\n",
            "person: 95%\t(left_x:  134   top_y:  232   width:   25   height:   45)\n",
            "person: 86%\t(left_x:  221   top_y:  239   width:   16   height:   37)\n",
            "person: 98%\t(left_x:  236   top_y:  217   width:   20   height:   66)\n",
            "person: 99%\t(left_x:  243   top_y:  205   width:  116   height:  272)\n",
            "person: 90%\t(left_x:  253   top_y:  222   width:   16   height:   47)\n",
            "person: 55%\t(left_x:  336   top_y:  240   width:   13   height:   30)\n",
            "person: 95%\t(left_x:  357   top_y:  228   width:   21   height:   54)\n",
            "person: 84%\t(left_x:  374   top_y:  234   width:   16   height:   45)\n",
            "person: 99%\t(left_x:  393   top_y:  225   width:   41   height:   69)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000002473.jpg: Predicted in 25.640000 milli-seconds.\n",
            "person: 87%\t(left_x:   31   top_y:  328   width:   28   height:   26)\n",
            "person: 99%\t(left_x:  118   top_y:  341   width:   26   height:   46)\n",
            "person: 99%\t(left_x:  248   top_y:   92   width:  123   height:  150)\n",
            "skis: 97%\t(left_x:  287   top_y:  217   width:   39   height:   47)\n",
            "person: 100%\t(left_x:  437   top_y:  279   width:   61   height:  102)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000059598.jpg: Predicted in 25.281000 milli-seconds.\n",
            "diningtable: 57%\t(left_x:  -39   top_y:  209   width:  705   height:  266)\n",
            "cell phone: 99%\t(left_x:   66   top_y:  273   width:   92   height:   37)\n",
            "laptop: 99%\t(left_x:  174   top_y:   89   width:  279   height:  246)\n",
            "banana: 98%\t(left_x:  218   top_y:  339   width:  172   height:   92)\n",
            "cake: 97%\t(left_x:  255   top_y:  309   width:   85   height:   73)\n",
            "chair: 66%\t(left_x:  363   top_y:   83   width:   24   height:    9)\n",
            "mouse: 71%\t(left_x:  508   top_y:  293   width:   64   height:   69)\n",
            "person: 83%\t(left_x:  535   top_y:   53   width:   49   height:   56)\n",
            "chair: 95%\t(left_x:  547   top_y:  102   width:   87   height:  123)\n",
            "person: 81%\t(left_x:  587   top_y:   34   width:   53   height:  201)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000157213.jpg: Predicted in 25.262000 milli-seconds.\n",
            "elephant: 100%\t(left_x:  274   top_y:   77   width:  121   height:  145)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000327769.jpg: Predicted in 25.932000 milli-seconds.\n",
            "bottle: 86%\t(left_x:  113   top_y:   16   width:   56   height:  121)\n",
            "cat: 76%\t(left_x:  196   top_y:  112   width:  262   height:  146)\n",
            "sink: 52%\t(left_x:  207   top_y:  111   width:  244   height:  142)\n",
            "cup: 94%\t(left_x:  261   top_y:    5   width:   54   height:   84)\n",
            "cup: 52%\t(left_x:  309   top_y:    1   width:   50   height:   65)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000127394.jpg: Predicted in 25.629000 milli-seconds.\n",
            "diningtable: 95%\t(left_x:  -10   top_y:  143   width:  430   height:  488)\n",
            "person: 59%\t(left_x:   -0   top_y:   81   width:   60   height:  277)\n",
            "person: 79%\t(left_x:    0   top_y:   84   width:   95   height:  203)\n",
            "fork: 70%\t(left_x:   43   top_y:  302   width:   56   height:   31)\n",
            "pizza: 74%\t(left_x:   60   top_y:  317   width:  111   height:   54)\n",
            "person: 88%\t(left_x:   71   top_y:   73   width:   97   height:  173)\n",
            "bowl: 94%\t(left_x:   95   top_y:  421   width:  164   height:  142)\n",
            "spoon: 95%\t(left_x:  130   top_y:  341   width:   38   height:  151)\n",
            "chair: 57%\t(left_x:  135   top_y:  114   width:   81   height:  114)\n",
            "cup: 97%\t(left_x:  162   top_y:  201   width:   25   height:   41)\n",
            "person: 100%\t(left_x:  170   top_y:   53   width:  107   height:  167)\n",
            "spoon: 83%\t(left_x:  213   top_y:  407   width:  112   height:  111)\n",
            "cup: 100%\t(left_x:  245   top_y:  166   width:   22   height:   35)\n",
            "person: 99%\t(left_x:  259   top_y:   52   width:   67   height:  107)\n",
            "bottle: 80%\t(left_x:  298   top_y:  138   width:   16   height:   38)\n",
            "bottle: 87%\t(left_x:  303   top_y:  176   width:   21   height:   43)\n",
            "bottle: 77%\t(left_x:  319   top_y:  161   width:   16   height:   57)\n",
            "bottle: 59%\t(left_x:  327   top_y:  177   width:   32   height:   57)\n",
            "cup: 99%\t(left_x:  352   top_y:  305   width:   44   height:   61)\n",
            "cup: 54%\t(left_x:  392   top_y:  177   width:   17   height:   31)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000009378.jpg: Predicted in 25.468000 milli-seconds.\n",
            "person: 98%\t(left_x:   63   top_y:   38   width:  399   height:  338)\n",
            "frisbee: 99%\t(left_x:  191   top_y:  217   width:  167   height:   41)\n",
            "person: 67%\t(left_x:  321   top_y:  331   width:   71   height:   60)\n",
            "person: 56%\t(left_x:  397   top_y:  341   width:   37   height:   50)\n",
            "person: 93%\t(left_x:  424   top_y:  333   width:   61   height:   57)\n",
            "person: 77%\t(left_x:  530   top_y:  291   width:   61   height:  100)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000159282.jpg: Predicted in 25.727000 milli-seconds.\n",
            "vase: 99%\t(left_x:  226   top_y:  180   width:   88   height:  245)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000279714.jpg: Predicted in 28.303000 milli-seconds.\n",
            "toothbrush: 71%\t(left_x:  137   top_y:   26   width:  101   height:  427)\n",
            "baseball bat: 63%\t(left_x:  137   top_y:   26   width:  101   height:  427)\n",
            "car: 99%\t(left_x:  222   top_y:  436   width:  204   height:  173)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000092939.jpg: Predicted in 25.550000 milli-seconds.\n",
            "diningtable: 78%\t(left_x:   -2   top_y:  481   width:  431   height:  155)\n",
            "chair: 96%\t(left_x:   -1   top_y:  301   width:   44   height:  107)\n",
            "person: 98%\t(left_x:   21   top_y:  115   width:  261   height:  459)\n",
            "cup: 58%\t(left_x:  185   top_y:  604   width:   57   height:   36)\n",
            "cake: 98%\t(left_x:  203   top_y:  493   width:  156   height:  135)\n",
            "person: 93%\t(left_x:  206   top_y:  130   width:  186   height:  376)\n",
            "pottedplant: 96%\t(left_x:  346   top_y:  269   width:   76   height:  116)\n",
            "person: 62%\t(left_x:  403   top_y:  204   width:   21   height:  216)\n",
            "wine glass: 65%\t(left_x:  405   top_y:  484   width:   19   height:   81)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000038210.jpg: Predicted in 25.498000 milli-seconds.\n",
            "person: 96%\t(left_x:   25   top_y:  331   width:   18   height:   44)\n",
            "skis: 79%\t(left_x:   60   top_y:  531   width:  267   height:   39)\n",
            "person: 100%\t(left_x:   72   top_y:  261   width:  139   height:  282)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000570456.jpg: Predicted in 25.310000 milli-seconds.\n",
            "bowl: 65%\t(left_x:  123   top_y:  268   width:   28   height:   21)\n",
            "diningtable: 66%\t(left_x:  285   top_y:  196   width:  119   height:   91)\n",
            "sofa: 80%\t(left_x:  295   top_y:  288   width:  139   height:  145)\n",
            "chair: 97%\t(left_x:  350   top_y:  257   width:   87   height:   86)\n",
            "chair: 87%\t(left_x:  451   top_y:  223   width:   61   height:   78)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000044279.jpg: Predicted in 25.507000 milli-seconds.\n",
            "person: 99%\t(left_x:  156   top_y:  122   width:  145   height:  300)\n",
            "person: 99%\t(left_x:  292   top_y:   58   width:  274   height:  367)\n",
            "bowl: 63%\t(left_x:  511   top_y:  259   width:   27   height:   16)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000372203.jpg: Predicted in 25.540000 milli-seconds.\n",
            "bench: 99%\t(left_x:  140   top_y:  220   width:  147   height:   95)\n",
            "fire hydrant: 99%\t(left_x:  332   top_y:  282   width:   26   height:   49)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000206025.jpg: Predicted in 25.637000 milli-seconds.\n",
            "person: 100%\t(left_x:   -7   top_y:   63   width:  434   height:  588)\n",
            "tie: 99%\t(left_x:  166   top_y:  377   width:   93   height:  262)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000531135.jpg: Predicted in 25.582000 milli-seconds.\n",
            "person: 95%\t(left_x:   79   top_y:  191   width:   39   height:   26)\n",
            "person: 84%\t(left_x:   89   top_y:  174   width:   13   height:   16)\n",
            "person: 88%\t(left_x:  207   top_y:  164   width:    8   height:   14)\n",
            "person: 98%\t(left_x:  290   top_y:  216   width:   40   height:   55)\n",
            "person: 97%\t(left_x:  297   top_y:  174   width:   16   height:   26)\n",
            "person: 84%\t(left_x:  356   top_y:  233   width:   28   height:   41)\n",
            "person: 93%\t(left_x:  372   top_y:  224   width:   32   height:   50)\n",
            "person: 92%\t(left_x:  381   top_y:  170   width:   10   height:   27)\n",
            "person: 96%\t(left_x:  470   top_y:  177   width:   11   height:   31)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000005503.jpg: Predicted in 25.532000 milli-seconds.\n",
            "person: 65%\t(left_x:   17   top_y:  380   width:  263   height:  118)\n",
            "toilet: 79%\t(left_x:   48   top_y:  172   width:  230   height:  300)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000323263.jpg: Predicted in 25.797000 milli-seconds.\n",
            "person: 84%\t(left_x:  117   top_y:   84   width:   62   height:  149)\n",
            "person: 99%\t(left_x:  117   top_y:  131   width:  145   height:  251)\n",
            "person: 66%\t(left_x:  167   top_y:   83   width:   77   height:   79)\n",
            "person: 96%\t(left_x:  254   top_y:  145   width:  108   height:  106)\n",
            "person: 99%\t(left_x:  438   top_y:   86   width:   97   height:  294)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000290619.jpg: Predicted in 25.342000 milli-seconds.\n",
            "banana: 91%\t(left_x:   51   top_y:   49   width:  229   height:  385)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000130465.jpg: Predicted in 25.515000 milli-seconds.\n",
            "clock: 89%\t(left_x:  126   top_y:  220   width:   47   height:   39)\n",
            "clock: 95%\t(left_x:  462   top_y:  115   width:   61   height:   43)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000216516.jpg: Predicted in 25.705000 milli-seconds.\n",
            "skis: 52%\t(left_x:   21   top_y:  527   width:  397   height:   81)\n",
            "person: 97%\t(left_x:  139   top_y:  121   width:  107   height:  475)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000065798.jpg: Predicted in 25.315000 milli-seconds.\n",
            "person: 61%\t(left_x:  -24   top_y:   44   width:  693   height:  285)\n",
            "person: 95%\t(left_x:  195   top_y:  249   width:   23   height:   67)\n",
            "person: 87%\t(left_x:  216   top_y:  273   width:   34   height:   44)\n",
            "baseball glove: 65%\t(left_x:  242   top_y:  300   width:   11   height:    8)\n",
            "person: 98%\t(left_x:  278   top_y:  251   width:   41   height:   64)\n",
            "person: 99%\t(left_x:  477   top_y:  275   width:   50   height:  110)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000261706.jpg: Predicted in 25.742000 milli-seconds.\n",
            "sofa: 73%\t(left_x:   55   top_y:   16   width:  369   height:  614)\n",
            "cat: 66%\t(left_x:   86   top_y:   24   width:  348   height:  600)\n",
            "remote: 51%\t(left_x:  129   top_y:  220   width:   64   height:   54)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000361268.jpg: Predicted in 25.730000 milli-seconds.\n",
            "cow: 100%\t(left_x:  327   top_y:  225   width:  207   height:  130)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000430377.jpg: Predicted in 25.470000 milli-seconds.\n",
            "person: 96%\t(left_x:   24   top_y:  231   width:   14   height:   30)\n",
            "person: 100%\t(left_x:   81   top_y:   56   width:  178   height:  524)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000509131.jpg: Predicted in 27.259000 milli-seconds.\n",
            "orange: 79%\t(left_x:  165   top_y:  364   width:   88   height:   61)\n",
            "apple: 74%\t(left_x:  228   top_y:  305   width:   57   height:   70)\n",
            "orange: 87%\t(left_x:  258   top_y:  373   width:   84   height:   53)\n",
            "apple: 65%\t(left_x:  275   top_y:  314   width:   80   height:   69)\n",
            "apple: 76%\t(left_x:  327   top_y:  290   width:   72   height:   71)\n",
            "orange: 81%\t(left_x:  333   top_y:  354   width:   95   height:   71)\n",
            "banana: 68%\t(left_x:  372   top_y:  149   width:   45   height:  130)\n",
            "banana: 78%\t(left_x:  398   top_y:  150   width:   55   height:  131)\n",
            "banana: 88%\t(left_x:  426   top_y:  155   width:   53   height:  108)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000475064.jpg: Predicted in 25.456000 milli-seconds.\n",
            "donut: 99%\t(left_x:  180   top_y:  291   width:  186   height:   85)\n",
            "person: 95%\t(left_x:  382   top_y:  309   width:   25   height:  118)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000125405.jpg: Predicted in 26.054000 milli-seconds.\n",
            "dog: 98%\t(left_x:  230   top_y:  107   width:  151   height:  296)\n",
            "frisbee: 95%\t(left_x:  236   top_y:  240   width:   79   height:   45)\n",
            "dog: 99%\t(left_x:  451   top_y:    8   width:  125   height:  159)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000363207.jpg: Predicted in 25.728000 milli-seconds.\n",
            "bowl: 71%\t(left_x:  118   top_y:  397   width:   88   height:   54)\n",
            "person: 89%\t(left_x:  277   top_y:  140   width:   72   height:  210)\n",
            "person: 99%\t(left_x:  316   top_y:  167   width:  103   height:  193)\n",
            "wine glass: 69%\t(left_x:  377   top_y:  337   width:   13   height:   42)\n",
            "person: 98%\t(left_x:  418   top_y:  252   width:   59   height:   82)\n",
            "cake: 96%\t(left_x:  424   top_y:  314   width:   86   height:   60)\n",
            "person: 62%\t(left_x:  471   top_y:  155   width:  168   height:  260)\n",
            "person: 92%\t(left_x:  484   top_y:  274   width:   39   height:   50)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000409211.jpg: Predicted in 26.144000 milli-seconds.\n",
            "person: 87%\t(left_x:   -1   top_y:  163   width:   51   height:   65)\n",
            "person: 78%\t(left_x:    5   top_y:    0   width:   68   height:   96)\n",
            "person: 93%\t(left_x:   32   top_y:  133   width:   91   height:   92)\n",
            "person: 91%\t(left_x:   70   top_y:   -1   width:   72   height:  101)\n",
            "person: 67%\t(left_x:  104   top_y:  160   width:   35   height:   58)\n",
            "person: 95%\t(left_x:  143   top_y:  144   width:   44   height:   76)\n",
            "sports ball: 99%\t(left_x:  176   top_y:  139   width:   18   height:   18)\n",
            "person: 84%\t(left_x:  177   top_y:    0   width:   46   height:   77)\n",
            "person: 96%\t(left_x:  259   top_y:   14   width:  126   height:  407)\n",
            "tennis racket: 98%\t(left_x:  322   top_y:    8   width:  129   height:   77)\n",
            "person: 97%\t(left_x:  364   top_y:  144   width:   49   height:  160)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000311789.jpg: Predicted in 25.416000 milli-seconds.\n",
            "cat: 82%\t(left_x:  144   top_y:  -15   width:  477   height:  449)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000082765.jpg: Predicted in 26.127000 milli-seconds.\n",
            "bed: 74%\t(left_x:  -17   top_y:  308   width:  452   height:  284)\n",
            "laptop: 99%\t(left_x:   46   top_y:  429   width:  284   height:   97)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000298904.jpg: Predicted in 25.445000 milli-seconds.\n",
            "vase: 94%\t(left_x:   42   top_y:   13   width:  353   height:  621)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000229659.jpg: Predicted in 26.013000 milli-seconds.\n",
            "diningtable: 55%\t(left_x:    3   top_y:  324   width:  349   height:  155)\n",
            "bottle: 52%\t(left_x:   33   top_y:  122   width:   11   height:   23)\n",
            "chair: 85%\t(left_x:   63   top_y:  209   width:  103   height:  221)\n",
            "clock: 98%\t(left_x:   71   top_y:   27   width:   22   height:   27)\n",
            "chair: 93%\t(left_x:  126   top_y:  215   width:  178   height:  205)\n",
            "person: 99%\t(left_x:  128   top_y:  130   width:   86   height:   88)\n",
            "chair: 51%\t(left_x:  210   top_y:  205   width:   71   height:   13)\n",
            "person: 96%\t(left_x:  227   top_y:  157   width:   50   height:   50)\n",
            "laptop: 76%\t(left_x:  282   top_y:  144   width:  356   height:  337)\n",
            "chair: 78%\t(left_x:  305   top_y:  196   width:   36   height:   24)\n",
            "person: 78%\t(left_x:  478   top_y:   28   width:   84   height:  120)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000035279.jpg: Predicted in 25.785000 milli-seconds.\n",
            "book: 53%\t(left_x:   93   top_y:  221   width:  251   height:  170)\n",
            "laptop: 99%\t(left_x:  167   top_y:    2   width:  241   height:  226)\n",
            "cell phone: 96%\t(left_x:  327   top_y:  228   width:   72   height:   77)\n",
            "cell phone: 62%\t(left_x:  401   top_y:  192   width:  108   height:   76)\n",
            "bottle: 93%\t(left_x:  447   top_y:   67   width:   80   height:  147)\n",
            "book: 98%\t(left_x:  462   top_y:  241   width:  168   height:  175)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000096427.jpg: Predicted in 25.476000 milli-seconds.\n",
            "person: 98%\t(left_x:   -2   top_y:   37   width:   85   height:  388)\n",
            "tennis racket: 85%\t(left_x:  103   top_y:  132   width:  170   height:  113)\n",
            "person: 99%\t(left_x:  240   top_y:   88   width:  162   height:  343)\n",
            "person: 91%\t(left_x:  294   top_y:   -2   width:   58   height:  126)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000399560.jpg: Predicted in 26.040000 milli-seconds.\n",
            "cat: 81%\t(left_x:  133   top_y:   99   width:  487   height:  277)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000080659.jpg: Predicted in 26.178000 milli-seconds.\n",
            "horse: 99%\t(left_x:   41   top_y:   82   width:  352   height:  303)\n",
            "person: 99%\t(left_x:  143   top_y:   60   width:  136   height:  173)\n",
            "person: 89%\t(left_x:  248   top_y:   60   width:  102   height:  102)\n",
            "horse: 97%\t(left_x:  310   top_y:   83   width:  333   height:  318)\n",
            "person: 97%\t(left_x:  408   top_y:   62   width:  131   height:  196)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000122046.jpg: Predicted in 25.998000 milli-seconds.\n",
            "person: 99%\t(left_x:   92   top_y:  185   width:  184   height:  429)\n",
            "umbrella: 96%\t(left_x:  120   top_y:   79   width:  240   height:  203)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000280930.jpg: Predicted in 25.714000 milli-seconds.\n",
            "oven: 51%\t(left_x:   -1   top_y:  257   width:  247   height:  167)\n",
            "bottle: 81%\t(left_x:  242   top_y:   50   width:   42   height:   40)\n",
            "person: 100%\t(left_x:  255   top_y:   -2   width:  267   height:  428)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000401446.jpg: Predicted in 25.373000 milli-seconds.\n",
            "umbrella: 65%\t(left_x:  158   top_y:   -1   width:  212   height:   81)\n",
            "person: 100%\t(left_x:  241   top_y:   10   width:  160   height:  454)\n",
            "handbag: 96%\t(left_x:  329   top_y:  149   width:   89   height:  111)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000258793.jpg: Predicted in 25.732000 milli-seconds.\n",
            "person: 53%\t(left_x:  180   top_y:  232   width:   15   height:   36)\n",
            "parking meter: 72%\t(left_x:  440   top_y:  387   width:   67   height:   88)\n",
            "parking meter: 71%\t(left_x:  486   top_y:  374   width:   47   height:  101)\n",
            "car: 68%\t(left_x:  576   top_y:  231   width:   17   height:   12)\n",
            "car: 98%\t(left_x:  591   top_y:  231   width:   24   height:   16)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000212573.jpg: Predicted in 26.097000 milli-seconds.\n",
            "car: 99%\t(left_x:   -1   top_y:  116   width:  170   height:  144)\n",
            "traffic light: 59%\t(left_x:   82   top_y:   72   width:   13   height:   20)\n",
            "car: 97%\t(left_x:  211   top_y:  128   width:   68   height:   84)\n",
            "car: 84%\t(left_x:  236   top_y:  122   width:   26   height:   25)\n",
            "umbrella: 97%\t(left_x:  249   top_y:   10   width:  184   height:   54)\n",
            "person: 100%\t(left_x:  261   top_y:   56   width:  129   height:  373)\n",
            "person: 99%\t(left_x:  369   top_y:   73   width:   89   height:  336)\n",
            "car: 50%\t(left_x:  432   top_y:  113   width:   20   height:   13)\n",
            "car: 94%\t(left_x:  442   top_y:  112   width:   56   height:   31)\n",
            "car: 100%\t(left_x:  479   top_y:  103   width:  163   height:   96)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000030504.jpg: Predicted in 25.568000 milli-seconds.\n",
            "skis: 90%\t(left_x:  179   top_y:  406   width:  102   height:  205)\n",
            "person: 97%\t(left_x:  187   top_y:  109   width:  198   height:  395)\n",
            "backpack: 77%\t(left_x:  304   top_y:  151   width:   88   height:  120)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000243626.jpg: Predicted in 25.580000 milli-seconds.\n",
            "diningtable: 83%\t(left_x:  -12   top_y:    5   width:  397   height:  279)\n",
            "cup: 66%\t(left_x:   66   top_y:   -0   width:   83   height:   55)\n",
            "fork: 99%\t(left_x:  296   top_y:   52   width:   79   height:  172)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000176857.jpg: Predicted in 26.355000 milli-seconds.\n",
            "person: 76%\t(left_x:   73   top_y:   11   width:   88   height:  223)\n",
            "person: 95%\t(left_x:  156   top_y:   64   width:   76   height:  160)\n",
            "cat: 97%\t(left_x:  216   top_y:  138   width:   49   height:   85)\n",
            "person: 96%\t(left_x:  226   top_y:    4   width:   69   height:  156)\n",
            "person: 95%\t(left_x:  258   top_y:   65   width:   97   height:  154)\n",
            "person: 72%\t(left_x:  287   top_y:   24   width:   48   height:   60)\n",
            "person: 50%\t(left_x:  355   top_y:   81   width:   17   height:   66)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000529122.jpg: Predicted in 26.143000 milli-seconds.\n",
            "handbag: 70%\t(left_x:   23   top_y:  102   width:   69   height:  164)\n",
            "person: 99%\t(left_x:   32   top_y:   31   width:  124   height:  245)\n",
            "person: 98%\t(left_x:  138   top_y:   99   width:  162   height:  183)\n",
            "donut: 60%\t(left_x:  139   top_y:  105   width:  160   height:  175)\n",
            "person: 98%\t(left_x:  241   top_y:   75   width:   73   height:   82)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000071877.jpg: Predicted in 25.706000 milli-seconds.\n",
            "person: 100%\t(left_x:   84   top_y:   47   width:  266   height:  271)\n",
            "skateboard: 99%\t(left_x:  203   top_y:  221   width:  157   height:  108)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000459887.jpg: Predicted in 25.721000 milli-seconds.\n",
            "banana: 74%\t(left_x:  -23   top_y:   19   width:  489   height:  608)\n",
            "bowl: 67%\t(left_x:   -6   top_y:   41   width:  481   height:  607)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000363188.jpg: Predicted in 25.644000 milli-seconds.\n",
            "person: 98%\t(left_x:    2   top_y:  184   width:  208   height:  240)\n",
            "person: 63%\t(left_x:   97   top_y:  162   width:   26   height:   49)\n",
            "person: 68%\t(left_x:  117   top_y:  154   width:   31   height:   39)\n",
            "person: 87%\t(left_x:  175   top_y:  158   width:   48   height:   79)\n",
            "person: 98%\t(left_x:  192   top_y:  136   width:  145   height:  294)\n",
            "backpack: 78%\t(left_x:  216   top_y:  190   width:   97   height:   88)\n",
            "cell phone: 56%\t(left_x:  251   top_y:  307   width:   28   height:   11)\n",
            "person: 98%\t(left_x:  309   top_y:  102   width:  269   height:  326)\n",
            "person: 88%\t(left_x:  324   top_y:  155   width:   77   height:  152)\n",
            "car: 78%\t(left_x:  591   top_y:  180   width:   49   height:  126)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000433915.jpg: Predicted in 26.031000 milli-seconds.\n",
            "person: 95%\t(left_x:   40   top_y:   61   width:  289   height:  363)\n",
            "tie: 93%\t(left_x:  221   top_y:  354   width:   52   height:   59)\n",
            "person: 82%\t(left_x:  245   top_y:   45   width:  267   height:  387)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000217219.jpg: Predicted in 25.377000 milli-seconds.\n",
            "bed: 98%\t(left_x:   -1   top_y:   14   width:  637   height:  335)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000547854.jpg: Predicted in 26.789000 milli-seconds.\n",
            "person: 85%\t(left_x:   13   top_y:  -19   width:  627   height:  459)\n",
            "diningtable: 53%\t(left_x:   13   top_y:  405   width:  619   height:  232)\n",
            "pizza: 83%\t(left_x:   53   top_y:  416   width:  398   height:  207)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000379842.jpg: Predicted in 25.457000 milli-seconds.\n",
            "book: 60%\t(left_x:   12   top_y:    8   width:  288   height:  342)\n",
            "book: 73%\t(left_x:  356   top_y:   -3   width:  212   height:  361)\n",
            "remote: 83%\t(left_x:  366   top_y:    8   width:  194   height:  310)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000046872.jpg: Predicted in 25.885000 milli-seconds.\n",
            "truck: 91%\t(left_x:    7   top_y:   75   width:  479   height:  314)\n",
            "person: 87%\t(left_x:  213   top_y:   44   width:   63   height:   66)\n",
            "person: 100%\t(left_x:  492   top_y:  127   width:  105   height:  243)\n",
            "car: 63%\t(left_x:  591   top_y:  154   width:   17   height:   14)\n",
            "car: 87%\t(left_x:  602   top_y:  149   width:   37   height:   22)\n",
            "car: 94%\t(left_x:  615   top_y:  155   width:   26   height:   22)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000069106.jpg: Predicted in 25.362000 milli-seconds.\n",
            "zebra: 99%\t(left_x:   69   top_y:  140   width:  148   height:  125)\n",
            "zebra: 100%\t(left_x:  206   top_y:  117   width:  107   height:  133)\n",
            "zebra: 100%\t(left_x:  299   top_y:  116   width:  133   height:  124)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000481404.jpg: Predicted in 25.924000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000137246.jpg: Predicted in 26.889000 milli-seconds.\n",
            "bench: 68%\t(left_x:   -1   top_y:  192   width:   71   height:   52)\n",
            "umbrella: 66%\t(left_x:   13   top_y:   56   width:   88   height:   36)\n",
            "bench: 68%\t(left_x:   84   top_y:  188   width:   73   height:   72)\n",
            "umbrella: 59%\t(left_x:   94   top_y:   18   width:  174   height:   62)\n",
            "person: 95%\t(left_x:  141   top_y:   70   width:  176   height:  267)\n",
            "sandwich: 71%\t(left_x:  256   top_y:  210   width:   64   height:   52)\n",
            "hot dog: 65%\t(left_x:  257   top_y:  209   width:   66   height:   53)\n",
            "pottedplant: 78%\t(left_x:  294   top_y:  173   width:  105   height:  123)\n",
            "person: 100%\t(left_x:  368   top_y:   95   width:   56   height:  150)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000174018.jpg: Predicted in 26.076000 milli-seconds.\n",
            "teddy bear: 78%\t(left_x:    1   top_y:    4   width:  235   height:  335)\n",
            "teddy bear: 88%\t(left_x:   56   top_y:   -5   width:  434   height:  359)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000075393.jpg: Predicted in 25.397000 milli-seconds.\n",
            "fork: 98%\t(left_x:   19   top_y:  178   width:  335   height:   70)\n",
            "fork: 78%\t(left_x:  275   top_y:  120   width:  306   height:   70)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000176901.jpg: Predicted in 25.815000 milli-seconds.\n",
            "skis: 86%\t(left_x:  135   top_y:  158   width:  115   height:   33)\n",
            "person: 99%\t(left_x:  165   top_y:   88   width:   84   height:   94)\n",
            "person: 95%\t(left_x:  306   top_y:  226   width:  113   height:  112)\n",
            "skis: 82%\t(left_x:  312   top_y:  181   width:  142   height:   76)\n",
            "person: 100%\t(left_x:  357   top_y:   83   width:   69   height:  145)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000561889.jpg: Predicted in 25.921000 milli-seconds.\n",
            "diningtable: 72%\t(left_x:    4   top_y:   -5   width:  625   height:  476)\n",
            "carrot: 91%\t(left_x:  346   top_y:  255   width:   50   height:   43)\n",
            "broccoli: 86%\t(left_x:  356   top_y:  268   width:   78   height:   81)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000523033.jpg: Predicted in 25.641000 milli-seconds.\n",
            "person: 90%\t(left_x:   30   top_y:  162   width:   11   height:   12)\n",
            "person: 94%\t(left_x:  565   top_y:  190   width:   25   height:   16)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000577539.jpg: Predicted in 25.471000 milli-seconds.\n",
            "bowl: 84%\t(left_x:   27   top_y:    0   width:  431   height:  330)\n",
            "diningtable: 52%\t(left_x:   27   top_y:    0   width:  431   height:  330)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000215072.jpg: Predicted in 26.037000 milli-seconds.\n",
            "person: 89%\t(left_x:  121   top_y:  151   width:  126   height:  228)\n",
            "wine glass: 57%\t(left_x:  209   top_y:  374   width:   18   height:   37)\n",
            "person: 92%\t(left_x:  212   top_y:  182   width:  176   height:  188)\n",
            "chair: 69%\t(left_x:  293   top_y:  241   width:  123   height:  203)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000551350.jpg: Predicted in 25.516000 milli-seconds.\n",
            "bench: 55%\t(left_x:  181   top_y:  249   width:  120   height:   62)\n",
            "diningtable: 61%\t(left_x:  251   top_y:  180   width:  225   height:   67)\n",
            "bench: 58%\t(left_x:  429   top_y:  234   width:  101   height:   82)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000528399.jpg: Predicted in 25.515000 milli-seconds.\n",
            "diningtable: 50%\t(left_x:  -13   top_y:   -0   width:  668   height:  430)\n",
            "sandwich: 78%\t(left_x:   56   top_y:  158   width:  137   height:  144)\n",
            "cup: 83%\t(left_x:  341   top_y:  196   width:  233   height:  203)\n",
            "bowl: 79%\t(left_x:  341   top_y:  196   width:  233   height:  203)\n",
            "person: 53%\t(left_x:  342   top_y:   -0   width:  291   height:  103)\n",
            "cup: 93%\t(left_x:  441   top_y:   26   width:   79   height:  120)\n",
            "cup: 95%\t(left_x:  442   top_y:  137   width:  128   height:   96)\n",
            "cup: 97%\t(left_x:  510   top_y:   31   width:   83   height:  136)\n",
            "spoon: 94%\t(left_x:  543   top_y:  237   width:   80   height:  194)\n",
            "cup: 90%\t(left_x:  563   top_y:  104   width:   80   height:  202)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000478393.jpg: Predicted in 25.606000 milli-seconds.\n",
            "bed: 91%\t(left_x:   -5   top_y:   69   width:  487   height:  556)\n",
            "cat: 97%\t(left_x:   -1   top_y:  364   width:  259   height:  152)\n",
            "cat: 99%\t(left_x:   99   top_y:  160   width:  147   height:   73)\n",
            "teddy bear: 96%\t(left_x:  242   top_y:  167   width:  236   height:  322)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000244019.jpg: Predicted in 25.741000 milli-seconds.\n",
            "fire hydrant: 100%\t(left_x:  268   top_y:  110   width:   76   height:  257)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000106281.jpg: Predicted in 26.059000 milli-seconds.\n",
            "train: 89%\t(left_x:   88   top_y:   60   width:  204   height:  375)\n",
            "train: 81%\t(left_x:  142   top_y:   37   width:  205   height:   98)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000380913.jpg: Predicted in 25.509000 milli-seconds.\n",
            "person: 74%\t(left_x:   -1   top_y:  147   width:   44   height:  258)\n",
            "person: 99%\t(left_x:    6   top_y:  147   width:  143   height:  285)\n",
            "cell phone: 70%\t(left_x:   67   top_y:  209   width:   17   height:   14)\n",
            "person: 96%\t(left_x:  123   top_y:  217   width:  132   height:  167)\n",
            "handbag: 91%\t(left_x:  124   top_y:  260   width:  126   height:   91)\n",
            "cell phone: 78%\t(left_x:  166   top_y:  253   width:   20   height:   11)\n",
            "person: 100%\t(left_x:  255   top_y:  167   width:  115   height:  264)\n",
            "handbag: 72%\t(left_x:  273   top_y:  305   width:   82   height:   43)\n",
            "person: 98%\t(left_x:  372   top_y:  155   width:  154   height:  274)\n",
            "cell phone: 87%\t(left_x:  439   top_y:  298   width:   27   height:   17)\n",
            "person: 99%\t(left_x:  511   top_y:  187   width:  128   height:  241)\n",
            "handbag: 96%\t(left_x:  520   top_y:  303   width:  110   height:   42)\n",
            "cell phone: 74%\t(left_x:  578   top_y:  277   width:   19   height:   12)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000033638.jpg: Predicted in 25.925000 milli-seconds.\n",
            "person: 100%\t(left_x:   62   top_y:  243   width:  151   height:  265)\n",
            "oven: 52%\t(left_x:  144   top_y:  381   width:  274   height:  205)\n",
            "bowl: 81%\t(left_x:  214   top_y:  318   width:   22   height:   14)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000001584.jpg: Predicted in 25.774000 milli-seconds.\n",
            "person: 88%\t(left_x:   75   top_y:  378   width:   23   height:   53)\n",
            "person: 56%\t(left_x:   92   top_y:  387   width:   12   height:   42)\n",
            "person: 89%\t(left_x:  113   top_y:  381   width:   16   height:   49)\n",
            "bus: 99%\t(left_x:  123   top_y:   93   width:  391   height:  438)\n",
            "person: 72%\t(left_x:  188   top_y:  307   width:   65   height:   66)\n",
            "person: 65%\t(left_x:  298   top_y:  334   width:   29   height:   33)\n",
            "person: 55%\t(left_x:  299   top_y:  162   width:   21   height:   21)\n",
            "bus: 99%\t(left_x:  503   top_y:  316   width:   66   height:   67)\n",
            "bus: 97%\t(left_x:  568   top_y:  315   width:   45   height:   91)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000053624.jpg: Predicted in 25.533000 milli-seconds.\n",
            "person: 87%\t(left_x:  128   top_y:    3   width:   19   height:   64)\n",
            "person: 74%\t(left_x:  151   top_y:    3   width:   19   height:   37)\n",
            "person: 60%\t(left_x:  179   top_y:    3   width:   13   height:   37)\n",
            "person: 70%\t(left_x:  221   top_y:   -0   width:   18   height:   37)\n",
            "elephant: 99%\t(left_x:  247   top_y:  108   width:  162   height:  272)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000322574.jpg: Predicted in 25.509000 milli-seconds.\n",
            "bowl: 84%\t(left_x:  181   top_y:   17   width:  236   height:  104)\n",
            "sandwich: 79%\t(left_x:  389   top_y:  170   width:  207   height:  157)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000322968.jpg: Predicted in 25.774000 milli-seconds.\n",
            "person: 86%\t(left_x:   -0   top_y:  520   width:   20   height:   83)\n",
            "clock: 99%\t(left_x:  232   top_y:   77   width:   46   height:   37)\n",
            "pottedplant: 87%\t(left_x:  435   top_y:  491   width:   44   height:   92)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000276024.jpg: Predicted in 25.352000 milli-seconds.\n",
            "cow: 77%\t(left_x:   62   top_y:  272   width:   37   height:   78)\n",
            "cow: 99%\t(left_x:  140   top_y:  272   width:   46   height:   89)\n",
            "cow: 96%\t(left_x:  191   top_y:  300   width:   28   height:   60)\n",
            "person: 98%\t(left_x:  238   top_y:  203   width:   45   height:  118)\n",
            "cow: 66%\t(left_x:  241   top_y:  267   width:   52   height:   99)\n",
            "horse: 84%\t(left_x:  244   top_y:  261   width:   47   height:  107)\n",
            "cow: 83%\t(left_x:  284   top_y:  292   width:   29   height:   64)\n",
            "cow: 99%\t(left_x:  354   top_y:  274   width:   46   height:   84)\n",
            "person: 99%\t(left_x:  481   top_y:  203   width:   75   height:   92)\n",
            "horse: 95%\t(left_x:  488   top_y:  263   width:   54   height:   93)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000581100.jpg: Predicted in 25.719000 milli-seconds.\n",
            "cow: 68%\t(left_x:   92   top_y:  233   width:  116   height:   73)\n",
            "giraffe: 100%\t(left_x:  232   top_y:  141   width:  166   height:  258)\n",
            "giraffe: 98%\t(left_x:  374   top_y:  181   width:   83   height:  199)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000425390.jpg: Predicted in 25.972000 milli-seconds.\n",
            "laptop: 78%\t(left_x:    7   top_y:   12   width:  446   height:  360)\n",
            "cat: 54%\t(left_x:   10   top_y:   30   width:  442   height:  346)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000153011.jpg: Predicted in 25.925000 milli-seconds.\n",
            "person: 55%\t(left_x:   -0   top_y:  210   width:   24   height:  142)\n",
            "truck: 64%\t(left_x:    3   top_y:  112   width:  306   height:  156)\n",
            "person: 79%\t(left_x:   27   top_y:  221   width:   45   height:   93)\n",
            "chair: 98%\t(left_x:   74   top_y:  280   width:   92   height:  132)\n",
            "person: 96%\t(left_x:   91   top_y:  208   width:  110   height:  179)\n",
            "person: 88%\t(left_x:  167   top_y:  193   width:   28   height:   54)\n",
            "person: 97%\t(left_x:  218   top_y:  197   width:   28   height:   92)\n",
            "car: 98%\t(left_x:  307   top_y:  214   width:   91   height:   42)\n",
            "car: 98%\t(left_x:  365   top_y:  214   width:   56   height:   24)\n",
            "person: 93%\t(left_x:  412   top_y:  203   width:   29   height:  108)\n",
            "person: 98%\t(left_x:  420   top_y:  206   width:   60   height:  141)\n",
            "car: 87%\t(left_x:  463   top_y:  216   width:   20   height:   22)\n",
            "bus: 70%\t(left_x:  474   top_y:   88   width:  167   height:  221)\n",
            "truck: 68%\t(left_x:  476   top_y:   98   width:  164   height:  211)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000521259.jpg: Predicted in 25.916000 milli-seconds.\n",
            "person: 83%\t(left_x:   -1   top_y:  147   width:   23   height:   84)\n",
            "truck: 62%\t(left_x:   -0   top_y:  120   width:   57   height:  100)\n",
            "person: 100%\t(left_x:   48   top_y:   36   width:  217   height:  419)\n",
            "person: 61%\t(left_x:  251   top_y:  127   width:   19   height:   73)\n",
            "person: 66%\t(left_x:  257   top_y:  154   width:   43   height:   84)\n",
            "frisbee: 85%\t(left_x:  271   top_y:  169   width:   28   height:   26)\n",
            "person: 99%\t(left_x:  293   top_y:  152   width:   56   height:   91)\n",
            "person: 84%\t(left_x:  329   top_y:  144   width:   19   height:   54)\n",
            "person: 68%\t(left_x:  353   top_y:  145   width:   13   height:   31)\n",
            "person: 58%\t(left_x:  368   top_y:  142   width:   16   height:   34)\n",
            "frisbee: 100%\t(left_x:  406   top_y:  127   width:   57   height:   24)\n",
            "person: 100%\t(left_x:  409   top_y:   39   width:  109   height:  331)\n",
            "frisbee: 78%\t(left_x:  486   top_y:  155   width:   40   height:   18)\n",
            "person: 100%\t(left_x:  519   top_y:   90   width:   80   height:  210)\n",
            "frisbee: 98%\t(left_x:  572   top_y:  193   width:   28   height:   22)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000025139.jpg: Predicted in 25.374000 milli-seconds.\n",
            "zebra: 95%\t(left_x:   -1   top_y:  -17   width:  388   height:  367)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000140420.jpg: Predicted in 26.210000 milli-seconds.\n",
            "motorbike: 95%\t(left_x:  403   top_y:  230   width:   48   height:   78)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000573258.jpg: Predicted in 25.453000 milli-seconds.\n",
            "person: 98%\t(left_x:   43   top_y:   54   width:  191   height:  423)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000395575.jpg: Predicted in 25.973000 milli-seconds.\n",
            "person: 98%\t(left_x:  139   top_y:  112   width:   27   height:   48)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000553511.jpg: Predicted in 25.900000 milli-seconds.\n",
            "traffic light: 66%\t(left_x:   -0   top_y:  152   width:    7   height:   25)\n",
            "traffic light: 83%\t(left_x:   45   top_y:  166   width:   11   height:   23)\n",
            "car: 99%\t(left_x:   50   top_y:  262   width:  138   height:   57)\n",
            "traffic light: 55%\t(left_x:   83   top_y:   29   width:   23   height:   45)\n",
            "car: 99%\t(left_x:  183   top_y:  270   width:   46   height:   36)\n",
            "traffic light: 90%\t(left_x:  270   top_y:  182   width:    6   height:   18)\n",
            "traffic light: 94%\t(left_x:  320   top_y:  181   width:    7   height:   18)\n",
            "car: 99%\t(left_x:  324   top_y:  267   width:   60   height:   29)\n",
            "fire hydrant: 80%\t(left_x:  398   top_y:  299   width:   18   height:   34)\n",
            "person: 88%\t(left_x:  441   top_y:  261   width:   20   height:   32)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000309678.jpg: Predicted in 25.569000 milli-seconds.\n",
            "person: 75%\t(left_x:   -2   top_y:   49   width:  195   height:  231)\n",
            "pizza: 63%\t(left_x:   46   top_y:   61   width:  537   height:  284)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000080666.jpg: Predicted in 26.142000 milli-seconds.\n",
            "cat: 94%\t(left_x:   80   top_y:  124   width:  464   height:  452)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000286503.jpg: Predicted in 25.630000 milli-seconds.\n",
            "person: 72%\t(left_x:  143   top_y:  288   width:   18   height:   24)\n",
            "person: 87%\t(left_x:  162   top_y:  286   width:   19   height:   26)\n",
            "elephant: 98%\t(left_x:  267   top_y:  185   width:  247   height:  196)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000498919.jpg: Predicted in 25.345000 milli-seconds.\n",
            "orange: 55%\t(left_x:  329   top_y:  240   width:   65   height:   72)\n",
            "orange: 61%\t(left_x:  349   top_y:  267   width:   83   height:   59)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000423971.jpg: Predicted in 25.910000 milli-seconds.\n",
            "toilet: 84%\t(left_x:  228   top_y:    0   width:  179   height:  425)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000494913.jpg: Predicted in 25.881000 milli-seconds.\n",
            "sofa: 67%\t(left_x:    4   top_y:  283   width:  354   height:  143)\n",
            "tvmonitor: 100%\t(left_x:  233   top_y:   91   width:   95   height:   78)\n",
            "clock: 88%\t(left_x:  326   top_y:   90   width:   15   height:   19)\n",
            "book: 55%\t(left_x:  396   top_y:  302   width:   70   height:   40)\n",
            "handbag: 59%\t(left_x:  448   top_y:  219   width:   21   height:   24)\n",
            "cup: 57%\t(left_x:  457   top_y:  267   width:   16   height:   25)\n",
            "sofa: 54%\t(left_x:  475   top_y:  236   width:  164   height:  191)\n",
            "cat: 52%\t(left_x:  500   top_y:  256   width:   35   height:   21)\n",
            "tvmonitor: 74%\t(left_x:  518   top_y:  177   width:   21   height:   22)\n",
            "person: 79%\t(left_x:  526   top_y:  227   width:  108   height:  110)\n",
            "book: 57%\t(left_x:  575   top_y:  169   width:    6   height:   16)\n",
            "book: 59%\t(left_x:  590   top_y:  192   width:    8   height:   18)\n",
            "book: 54%\t(left_x:  605   top_y:  173   width:    9   height:   19)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000062554.jpg: Predicted in 25.408000 milli-seconds.\n",
            "broccoli: 92%\t(left_x:   -3   top_y:  117   width:  399   height:  268)\n",
            "bowl: 63%\t(left_x:    2   top_y:  121   width:  408   height:  261)\n",
            "bowl: 78%\t(left_x:    8   top_y:  351   width:  631   height:   78)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000201775.jpg: Predicted in 25.642000 milli-seconds.\n",
            "sink: 98%\t(left_x:   -3   top_y:  240   width:  149   height:   93)\n",
            "toilet: 97%\t(left_x:  233   top_y:  229   width:   79   height:  112)\n",
            "toilet: 98%\t(left_x:  348   top_y:  222   width:   96   height:  129)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000135872.jpg: Predicted in 25.813000 milli-seconds.\n",
            "laptop: 99%\t(left_x:  184   top_y:  174   width:  111   height:  105)\n",
            "tvmonitor: 99%\t(left_x:  271   top_y:   42   width:   86   height:  103)\n",
            "book: 90%\t(left_x:  297   top_y:  207   width:   68   height:   30)\n",
            "keyboard: 96%\t(left_x:  309   top_y:  167   width:   59   height:   30)\n",
            "keyboard: 98%\t(left_x:  334   top_y:  176   width:   69   height:   31)\n",
            "mouse: 71%\t(left_x:  382   top_y:  168   width:   21   height:    9)\n",
            "chair: 98%\t(left_x:  391   top_y:  146   width:  147   height:  239)\n",
            "mouse: 68%\t(left_x:  410   top_y:  167   width:   19   height:    9)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000429530.jpg: Predicted in 25.882000 milli-seconds.\n",
            "vase: 99%\t(left_x:   29   top_y:   52   width:  156   height:  361)\n",
            "vase: 98%\t(left_x:  114   top_y:  154   width:  220   height:  290)\n",
            "vase: 99%\t(left_x:  253   top_y:   47   width:  150   height:  377)\n",
            "vase: 99%\t(left_x:  415   top_y:  152   width:  204   height:  265)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000263474.jpg: Predicted in 25.817000 milli-seconds.\n",
            "toilet: 90%\t(left_x:   17   top_y:  211   width:  362   height:  398)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000142585.jpg: Predicted in 25.593000 milli-seconds.\n",
            "truck: 62%\t(left_x:    1   top_y:  -20   width:   89   height:  532)\n",
            "car: 55%\t(left_x:   83   top_y:  287   width:   99   height:  150)\n",
            "person: 91%\t(left_x:   90   top_y:  285   width:   84   height:  158)\n",
            "traffic light: 66%\t(left_x:   92   top_y:  226   width:   15   height:   32)\n",
            "person: 50%\t(left_x:   93   top_y:  287   width:   36   height:   74)\n",
            "motorbike: 66%\t(left_x:  118   top_y:  354   width:   48   height:   89)\n",
            "car: 54%\t(left_x:  148   top_y:  295   width:   45   height:   34)\n",
            "car: 75%\t(left_x:  153   top_y:  306   width:   38   height:   90)\n",
            "car: 95%\t(left_x:  183   top_y:  275   width:  180   height:  163)\n",
            "traffic light: 53%\t(left_x:  224   top_y:  233   width:   19   height:   27)\n",
            "car: 53%\t(left_x:  345   top_y:  300   width:   31   height:   96)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000192716.jpg: Predicted in 25.692000 milli-seconds.\n",
            "car: 94%\t(left_x:   -0   top_y:  593   width:   54   height:   47)\n",
            "person: 72%\t(left_x:   35   top_y:  596   width:   18   height:   26)\n",
            "stop sign: 100%\t(left_x:  114   top_y:  171   width:  298   height:  315)\n",
            "car: 100%\t(left_x:  137   top_y:  595   width:   96   height:   44)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000125952.jpg: Predicted in 26.033000 milli-seconds.\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000091500.jpg: Predicted in 25.599000 milli-seconds.\n",
            "person: 99%\t(left_x:   -6   top_y:  119   width:  292   height:  358)\n",
            "person: 99%\t(left_x:   57   top_y:  154   width:  471   height:  318)\n",
            "remote: 99%\t(left_x:   71   top_y:  335   width:   39   height:   20)\n",
            "chair: 56%\t(left_x:  285   top_y:  282   width:  257   height:  200)\n",
            "remote: 76%\t(left_x:  298   top_y:  349   width:   30   height:   23)\n",
            "bottle: 82%\t(left_x:  459   top_y:  128   width:   16   height:   44)\n",
            "diningtable: 63%\t(left_x:  460   top_y:  172   width:  180   height:  119)\n",
            "bottle: 98%\t(left_x:  470   top_y:  129   width:   21   height:   52)\n",
            "cup: 77%\t(left_x:  491   top_y:  161   width:   17   height:   17)\n",
            "bottle: 98%\t(left_x:  508   top_y:  126   width:   20   height:   52)\n",
            "chair: 53%\t(left_x:  569   top_y:  225   width:   72   height:   75)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000504074.jpg: Predicted in 25.660000 milli-seconds.\n",
            "person: 100%\t(left_x:  101   top_y:   71   width:   99   height:  297)\n",
            "person: 97%\t(left_x:  228   top_y:   80   width:  334   height:  361)\n",
            "laptop: 100%\t(left_x:  246   top_y:  230   width:  160   height:  123)\n",
            "chair: 72%\t(left_x:  344   top_y:  182   width:  289   height:  251)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000404484.jpg: Predicted in 25.912000 milli-seconds.\n",
            "dog: 74%\t(left_x:   88   top_y:   94   width:   82   height:   71)\n",
            "person: 88%\t(left_x:  174   top_y:   25   width:   89   height:   81)\n",
            "pottedplant: 95%\t(left_x:  205   top_y:   80   width:  109   height:   72)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000365387.jpg: Predicted in 26.098000 milli-seconds.\n",
            "toilet: 65%\t(left_x:  115   top_y:  225   width:  162   height:  157)\n",
            "sink: 90%\t(left_x:  270   top_y:  114   width:  100   height:   98)\n",
            "bed: 80%\t(left_x:  324   top_y:  238   width:  313   height:  187)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000451693.jpg: Predicted in 25.820000 milli-seconds.\n",
            "diningtable: 71%\t(left_x:   10   top_y:   15   width:  619   height:  445)\n",
            "pizza: 78%\t(left_x:   38   top_y:   32   width:  573   height:  353)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000367386.jpg: Predicted in 25.519000 milli-seconds.\n",
            "sofa: 95%\t(left_x:   71   top_y:  252   width:  219   height:  129)\n",
            "pottedplant: 64%\t(left_x:   90   top_y:  244   width:   30   height:   22)\n",
            "chair: 57%\t(left_x:  123   top_y:  357   width:   62   height:   81)\n",
            "pottedplant: 55%\t(left_x:  125   top_y:  233   width:   30   height:   33)\n",
            "vase: 73%\t(left_x:  285   top_y:  272   width:   34   height:   77)\n",
            "sofa: 98%\t(left_x:  316   top_y:  233   width:  320   height:  235)\n",
            "cup: 89%\t(left_x:  342   top_y:  370   width:   20   height:   26)\n",
            "remote: 78%\t(left_x:  360   top_y:  370   width:   31   height:   12)\n",
            "book: 55%\t(left_x:  362   top_y:  420   width:   57   height:   23)\n",
            "remote: 90%\t(left_x:  363   top_y:  373   width:   43   height:   17)\n",
            "book: 60%\t(left_x:  365   top_y:  411   width:   52   height:   23)\n",
            "book: 80%\t(left_x:  366   top_y:  397   width:   47   height:   26)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000458992.jpg: Predicted in 25.584000 milli-seconds.\n",
            "diningtable: 55%\t(left_x:    6   top_y:  398   width:  447   height:  242)\n",
            "person: 76%\t(left_x:    8   top_y:   15   width:  457   height:  411)\n",
            "pizza: 98%\t(left_x:    9   top_y:  399   width:  424   height:  237)\n",
            "chair: 55%\t(left_x:   14   top_y:   35   width:  444   height:  426)\n",
            "fork: 61%\t(left_x:  272   top_y:  313   width:  158   height:  105)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000335177.jpg: Predicted in 26.039000 milli-seconds.\n",
            "truck: 96%\t(left_x:  190   top_y:  303   width:  117   height:   41)\n",
            "stop sign: 98%\t(left_x:  339   top_y:  241   width:   34   height:   33)\n",
            "car: 80%\t(left_x:  556   top_y:  296   width:   59   height:   22)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000321333.jpg: Predicted in 25.407000 milli-seconds.\n",
            "person: 84%\t(left_x:   41   top_y:   24   width:  293   height:  362)\n",
            "teddy bear: 63%\t(left_x:  119   top_y:  202   width:  208   height:  187)\n",
            "person: 98%\t(left_x:  328   top_y:   50   width:  305   height:  330)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000057597.jpg: Predicted in 25.936000 milli-seconds.\n",
            "car: 52%\t(left_x:   69   top_y:   85   width:   74   height:   27)\n",
            "person: 84%\t(left_x:  175   top_y:  119   width:   14   height:   42)\n",
            "person: 79%\t(left_x:  203   top_y:  121   width:   13   height:   42)\n",
            "truck: 54%\t(left_x:  241   top_y:   73   width:   76   height:   54)\n",
            "sports ball: 100%\t(left_x:  243   top_y:  287   width:   23   height:   24)\n",
            "person: 59%\t(left_x:  255   top_y:  144   width:   19   height:   21)\n",
            "person: 100%\t(left_x:  315   top_y:  152   width:  126   height:  161)\n",
            "car: 69%\t(left_x:  362   top_y:  104   width:   63   height:   30)\n",
            "person: 99%\t(left_x:  414   top_y:  171   width:  106   height:  157)\n",
            "person: 99%\t(left_x:  518   top_y:  131   width:  106   height:  148)\n",
            "person: 52%\t(left_x:  587   top_y:  101   width:   15   height:   39)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000373353.jpg: Predicted in 25.456000 milli-seconds.\n",
            "car: 56%\t(left_x:   -0   top_y:  310   width:   26   height:   87)\n",
            "car: 99%\t(left_x:    0   top_y:  297   width:   99   height:   88)\n",
            "truck: 70%\t(left_x:   87   top_y:  294   width:   68   height:   68)\n",
            "car: 96%\t(left_x:  148   top_y:  297   width:   33   height:   54)\n",
            "car: 96%\t(left_x:  174   top_y:  298   width:   31   height:   44)\n",
            "car: 77%\t(left_x:  196   top_y:  299   width:   19   height:   36)\n",
            "car: 57%\t(left_x:  213   top_y:  300   width:   20   height:   33)\n",
            "car: 85%\t(left_x:  231   top_y:  307   width:   25   height:   19)\n",
            "person: 87%\t(left_x:  253   top_y:  303   width:   12   height:   29)\n",
            "bus: 99%\t(left_x:  265   top_y:  216   width:  106   height:  140)\n",
            "car: 98%\t(left_x:  280   top_y:  306   width:   87   height:   97)\n",
            "person: 92%\t(left_x:  284   top_y:  302   width:   79   height:  107)\n",
            "car: 50%\t(left_x:  386   top_y:  304   width:   13   height:   20)\n",
            "person: 87%\t(left_x:  396   top_y:  305   width:   14   height:   27)\n",
            "car: 50%\t(left_x:  415   top_y:  301   width:   22   height:   31)\n",
            "person: 85%\t(left_x:  424   top_y:  307   width:   46   height:  115)\n",
            "car: 77%\t(left_x:  427   top_y:  307   width:   36   height:   26)\n",
            "person: 96%\t(left_x:  445   top_y:  309   width:   61   height:  116)\n",
            "car: 73%\t(left_x:  497   top_y:  307   width:   39   height:   43)\n",
            "car: 71%\t(left_x:  511   top_y:  314   width:   62   height:   42)\n",
            "person: 98%\t(left_x:  518   top_y:  310   width:   46   height:   90)\n",
            "car: 98%\t(left_x:  559   top_y:  316   width:   60   height:   56)\n",
            "car: 97%\t(left_x:  608   top_y:  313   width:   32   height:   76)\n",
            "Enter Image Path:  Detection layer: 139 - type = 28 \n",
            " Detection layer: 150 - type = 28 \n",
            " Detection layer: 161 - type = 28 \n",
            "/content/val_images/val2017/000000455301.jpg: Predicted in 25.494000 milli-seconds.\n",
            "bed: 62%\t(left_x:   79   top_y:   42   width:  477   height:  439)\n",
            "person: 78%\t(left_x:  115   top_y:   41   width:  340   height:  440)\n",
            "Enter Image Path: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#download the result file\n",
        "download('result.json')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "cfaxFMWf67YZ",
        "outputId": "84c07ba6-864e-4e40-de1f-e9ef3ff2557d"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_44e3a900-3658-4c26-8cd0-b9e50221d863\", \"result.json\", 876050)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Just visulalising if everthing is perfect\n",
        "import numpy as np\n",
        "import cv2\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "# reads image 'opencv-logo.png' as grayscale\n",
        "img = cv2.imread('/content/val_images/val2017/000000455157.jpg') \n",
        "plt.imshow(img)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "fyzIUvJ4983Q",
        "outputId": "703dcce8-1de5-4b82-d5fa-a954d83ebe28"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.image.AxesImage at 0x7f0b1cd2cd00>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Converting the results obtained as **Json** to required **csv** file"
      ],
      "metadata": {
        "id": "bV7lYm4Y235M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import json"
      ],
      "metadata": {
        "id": "qr1a52vD-Ywh"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# working on json file\n",
        "file = open('result.json')"
      ],
      "metadata": {
        "id": "5Z6wbBchAKxx"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data = json.load(file)"
      ],
      "metadata": {
        "id": "jD1VcJsCAma9"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Idea behind this conversion is the **result.json** file is extracted as list which contains dictionaries for different images, Each dictionary has a number of key values that contain information like \"image id\", \"image path\" and labelling information or \"objects\", objects are the array vector that contains info for bounding box, label name, prediction strength etc..\n",
        "## We will use **name field of objects** for now to label the image"
      ],
      "metadata": {
        "id": "OiP23Drf3lpS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(type(data))\n",
        "listy = []\n",
        "maxi = 0\n",
        "for i in data:\n",
        "    #print(type(i))\n",
        "    f_name = i['filename'][28:]\n",
        "    #print(i['objects'])\n",
        "    labels = []\n",
        "    labels.append(f_name)\n",
        "    for j in i['objects']:\n",
        "      labels.append(j['name'])\n",
        "      print(j['name'])\n",
        "    maxi = max(maxi,len(labels))\n",
        "    listy.append(labels)\n"
      ],
      "metadata": {
        "id": "vJrqZ4reBRsf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Writing the labels into csv file"
      ],
      "metadata": {
        "id": "IqiKIoNp5X5F"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import csv"
      ],
      "metadata": {
        "id": "a8QLrShLJT9E"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Total columns are also calculated\n",
        "header = ['name']\n",
        "for i in range(maxi-1):\n",
        "  header.append(\"label\"+str(i))\n",
        "\n",
        "\n",
        "with open('output_labels.csv', 'w', encoding='UTF8', newline='') as f:\n",
        "    writer = csv.writer(f)\n",
        "\n",
        "    # write the header\n",
        "    writer.writerow(header)\n",
        "\n",
        "    # write multiple rows\n",
        "    writer.writerows(listy)"
      ],
      "metadata": {
        "id": "BAcFqpq9D3et"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Download the final output file"
      ],
      "metadata": {
        "id": "RSMxUYjqsezy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "download('output_labels.csv')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "k9T093e8JRiy",
        "outputId": "1be10995-2e92-472e-8eab-8be8400f75dc"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_5e665095-b0d5-4b40-b3b9-926346083060\", \"output_labels.csv\", 51570)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Now lets get the pixels humans are covering in a image"
      ],
      "metadata": {
        "id": "Zoz1L3Q-B2ye"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**For getting pixels occupied we will use the approximate analysis of calculating the area of bounding box, rescaled to original size.  **"
      ],
      "metadata": {
        "id": "yzdwLRijCEI5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "listy = []\n",
        "maxi = 0\n",
        "for i in data:\n",
        "  f_name = i['filename'][28:]\n",
        "    #print(i['objects'])\n",
        "  labels = []\n",
        "  labels.append(f_name)\n",
        "  for j in i['objects']:\n",
        "    if j[\"name\"] == \"person\":\n",
        "      w = j[\"relative_coordinates\"][\"width\"]*255\n",
        "      h = j[\"relative_coordinates\"][\"height\"]*255\n",
        "      area = round(w*h,2)\n",
        "      labels.append(area)\n",
        "      #print(j[\"relative_coordinates\"][\"width\"]*255)\n",
        "      #print(j[\"relative_coordinates\"][\"height\"]*255)\n",
        "\n",
        "  maxi = max(maxi,len(labels))\n",
        "  listy.append(labels)\n",
        "    \n",
        "      \n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "vRLIpm1BBfV5"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Total columns are also calculated\n",
        "header = ['name']\n",
        "for i in range(maxi-1):\n",
        "  header.append(\"person\"+str(i))\n",
        "\n",
        "\n",
        "with open('human_pixels.csv', 'w', encoding='UTF8', newline='') as f:\n",
        "    writer = csv.writer(f)\n",
        "\n",
        "    # write the header\n",
        "    writer.writerow(header)\n",
        "\n",
        "    # write multiple rows\n",
        "    writer.writerows(listy)"
      ],
      "metadata": {
        "id": "1Giq4MECwHgF"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "download('human_pixels.csv')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "Poqp4sup1sFx",
        "outputId": "6363d768-516b-4e22-b6dd-2293f63e72f3"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_d3bc5bb9-4657-4834-9b0d-65e7cf2835e1\", \"human_pixels.csv\", 30325)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Volume of Humans in the image"
      ],
      "metadata": {
        "id": "GOAUorF5CXrx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**The volume is calculated on assumption of taking the average aura of 24.**"
      ],
      "metadata": {
        "id": "BguWarZUCb2-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "listy = []\n",
        "maxi = 0\n",
        "for i in data:\n",
        "  f_name = i['filename'][28:]\n",
        "    #print(i['objects'])\n",
        "  labels = []\n",
        "  labels.append(f_name)\n",
        "  for j in i['objects']:\n",
        "    if j[\"name\"] == \"person\":\n",
        "      w = j[\"relative_coordinates\"][\"width\"]*255\n",
        "      h = j[\"relative_coordinates\"][\"height\"]*255\n",
        "      volume = round(w*h*24,2)\n",
        "      labels.append(volume)\n",
        "      #print(j[\"relative_coordinates\"][\"width\"]*255)\n",
        "      #print(j[\"relative_coordinates\"][\"height\"]*255)\n",
        "\n",
        "  maxi = max(maxi,len(labels))\n",
        "  listy.append(labels)\n",
        "    "
      ],
      "metadata": {
        "id": "ohSr9FgO1yt-"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Total columns are also calculated\n",
        "header = ['name']\n",
        "for i in range(maxi-1):\n",
        "  header.append(\"person\"+str(i))\n",
        "\n",
        "\n",
        "with open('human_volumes.csv', 'w', encoding='UTF8', newline='') as f:\n",
        "    writer = csv.writer(f)\n",
        "\n",
        "    # write the header\n",
        "    writer.writerow(header)\n",
        "\n",
        "    # write multiple rows\n",
        "    writer.writerows(listy)"
      ],
      "metadata": {
        "id": "F-I905ed9jE-"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Download the  human volume file**"
      ],
      "metadata": {
        "id": "1MVqfIlSEKKD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "download('human_volumes.csv')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "JLEA2mp89oSX",
        "outputId": "f1292d5c-5688-49a7-b898-e818287a6526"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_af795909-153b-410b-b0ce-9d14fbeec04d\", \"human_volumes.csv\", 32510)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The coco dataset does not provide any information regarding volume of object, so average aura was taken to be 24 to calculate the volume...\n",
        "The last two subtask would give answer **24**, if proceded, based on this method."
      ],
      "metadata": {
        "id": "ASdI1L9FDqX5"
      }
    }
  ]
}